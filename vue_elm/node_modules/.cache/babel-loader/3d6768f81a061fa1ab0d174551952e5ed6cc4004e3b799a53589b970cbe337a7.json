{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"edit-address\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"添加新地址\", -1 /* HOISTED */)), _createCommentVNode(\" 表单用于编辑地址 \"), _createVNode(_component_el_form, {\n    ref: \"editAddressForm\",\n    model: $setup.address,\n    \"label-width\": \"100px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"地址\",\n      required: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.address.address,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.address.address = $event),\n        placeholder: \"请输入详细地址\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"联系人姓名\",\n      required: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.address.contactName,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.address.contactName = $event),\n        placeholder: \"请输入联系人姓名\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"联系电话\",\n      required: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.address.contactTel,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.address.contactTel = $event),\n        placeholder: \"请输入联系电话\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.addAddress,\n      loading: $setup.loading,\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"保存\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_el_button, {\n      onClick: $setup.goBack,\n      style: {\n        \"width\": \"100%\",\n        \"margin-top\": \"10px\"\n      }\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"返回\")])),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_createVNode","_component_el_form","ref","model","$setup","address","default","_withCtx","_component_el_form_item","label","required","_component_el_input","modelValue","_cache","$event","placeholder","_","contactName","contactTel","_component_el_button","type","onClick","addAddress","loading","style","_createTextVNode","goBack"],"sources":["D:\\back_elm\\vue_elm\\src\\components\\updataComponent.vue"],"sourcesContent":["<template>\n  <div class=\"edit-address\">\n    <h2>添加新地址</h2>\n    <!-- 表单用于编辑地址 -->\n    <el-form ref=\"editAddressForm\" :model=\"address\" label-width=\"100px\">\n      <el-form-item label=\"地址\" required>\n        <el-input v-model=\"address.address\" placeholder=\"请输入详细地址\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"联系人姓名\" required>\n        <el-input v-model=\"address.contactName\" placeholder=\"请输入联系人姓名\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"联系电话\" required>\n        <el-input v-model=\"address.contactTel\" placeholder=\"请输入联系电话\"></el-input>\n      </el-form-item>\n      <el-button type=\"primary\" @click=\"addAddress\" :loading=\"loading\" style=\"width: 100%;\">保存</el-button>\n      <el-button @click=\"goBack\" style=\"width: 100%; margin-top: 10px;\">返回</el-button>\n    </el-form>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport router from \"@/router\";\nimport { deliveryAddressApi } from '@/utils/api';\nimport { ElMessage } from 'element-plus';\n\nconst route = useRoute();\nconst userId = ref(route.params.userId);\nconst address = ref({});\nconst loading = ref(false);\n\nonMounted(async () => {\n  // 从 localStorage 获取要编辑的地址\n  const selectedAddress = JSON.parse(localStorage.getItem('selectedAddressForEdit'));\n  if (selectedAddress) {\n    address.value = selectedAddress;\n  } else {\n    // 初始化新地址\n    address.value = {\n      contactName: '',\n      contactSex: 1, // 默认值\n      contactTel: '',\n      address: '',\n      userId: userId.value\n    };\n  }\n  console.log(\"初始化地址信息:\", address.value);\n});\n\nconst validateForm = () => {\n  if (!address.value.address || address.value.address.trim() === '') {\n    ElMessage.error('请输入详细地址');\n    return false;\n  }\n  if (!address.value.contactName || address.value.contactName.trim() === '') {\n    ElMessage.error('请输入联系人姓名');\n    return false;\n  }\n  if (!address.value.contactTel || address.value.contactTel.trim() === '') {\n    ElMessage.error('请输入联系电话');\n    return false;\n  }\n  return true;\n};\n\nconst addAddress = async () => {\n  if (!validateForm()) return;\n  \n  try {\n    loading.value = true;\n    \n    // 确保发送请求时 address 对象包含 userId\n    const addressData = { ...address.value };\n    delete addressData.daId; // 如果是编辑模式可能有daId，新增时需要删除\n    addressData.contactSex = addressData.contactSex || 1;\n    addressData.userId = userId.value;\n    \n    console.log(\"发送地址数据:\", addressData);\n    \n    const response = await deliveryAddressApi.addDeliveryAddress(addressData);\n    console.log(\"添加地址响应:\", response);\n    \n    // 检查响应格式\n    let success = false;\n    if (response && response.code === 1) {\n      success = true;\n    } else if (response === true || (response && response.success)) {\n      success = true;\n    }\n    \n    if (success) {\n      ElMessage.success('地址添加成功');\n      router.back(); // 返回上一页\n    } else {\n      ElMessage.error('地址添加失败: ' + (response?.message || '未知错误'));\n    }\n  } catch (error) {\n    console.error('添加地址失败:', error);\n    ElMessage.error('地址添加失败: ' + (error.message || '服务器错误'));\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst goBack = () => {\n  router.back();\n};\n</script>\n\n<style scoped>\n.edit-address {\n  max-width: 400px;\n  margin: 20px auto;\n  padding: 20px;\n  border: 1px solid #ebeef5;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  text-align: center;\n  margin-bottom: 20px;\n  color: #409EFF;\n}\n\n.el-button {\n  margin-top: 20px;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;;;;;uBAAzBC,mBAAA,CAgBM,OAhBNC,UAgBM,G,0BAfJC,mBAAA,CAAc,YAAV,OAAK,sBACTC,mBAAA,cAAiB,EACjBC,YAAA,CAYUC,kBAAA;IAZDC,GAAG,EAAC,iBAAiB;IAAEC,KAAK,EAAEC,MAAA,CAAAC,OAAO;IAAE,aAAW,EAAC;;IAJhEC,OAAA,EAAAC,QAAA,CAKM,MAEe,CAFfP,YAAA,CAEeQ,uBAAA;MAFDC,KAAK,EAAC,IAAI;MAACC,QAAQ,EAAR;;MAL/BJ,OAAA,EAAAC,QAAA,CAMQ,MAAqE,CAArEP,YAAA,CAAqEW,mBAAA;QAN7EC,UAAA,EAM2BR,MAAA,CAAAC,OAAO,CAACA,OAAO;QAN1C,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAM2BV,MAAA,CAAAC,OAAO,CAACA,OAAO,GAAAS,MAAA;QAAEC,WAAW,EAAC;;MANxDC,CAAA;QAQMhB,YAAA,CAEeQ,uBAAA;MAFDC,KAAK,EAAC,OAAO;MAACC,QAAQ,EAAR;;MARlCJ,OAAA,EAAAC,QAAA,CASQ,MAA0E,CAA1EP,YAAA,CAA0EW,mBAAA;QATlFC,UAAA,EAS2BR,MAAA,CAAAC,OAAO,CAACY,WAAW;QAT9C,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAS2BV,MAAA,CAAAC,OAAO,CAACY,WAAW,GAAAH,MAAA;QAAEC,WAAW,EAAC;;MAT5DC,CAAA;QAWMhB,YAAA,CAEeQ,uBAAA;MAFDC,KAAK,EAAC,MAAM;MAACC,QAAQ,EAAR;;MAXjCJ,OAAA,EAAAC,QAAA,CAYQ,MAAwE,CAAxEP,YAAA,CAAwEW,mBAAA;QAZhFC,UAAA,EAY2BR,MAAA,CAAAC,OAAO,CAACa,UAAU;QAZ7C,uBAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAY2BV,MAAA,CAAAC,OAAO,CAACa,UAAU,GAAAJ,MAAA;QAAEC,WAAW,EAAC;;MAZ3DC,CAAA;QAcMhB,YAAA,CAAoGmB,oBAAA;MAAzFC,IAAI,EAAC,SAAS;MAAEC,OAAK,EAAEjB,MAAA,CAAAkB,UAAU;MAAGC,OAAO,EAAEnB,MAAA,CAAAmB,OAAO;MAAEC,KAAoB,EAApB;QAAA;MAAA;;MAdvElB,OAAA,EAAAC,QAAA,CAc4F,MAAEM,MAAA,QAAAA,MAAA,OAd9FY,gBAAA,CAc4F,IAAE,E;MAd9FT,CAAA;oCAeMhB,YAAA,CAAgFmB,oBAAA;MAApEE,OAAK,EAAEjB,MAAA,CAAAsB,MAAM;MAAEF,KAAsC,EAAtC;QAAA;QAAA;MAAA;;MAfjClB,OAAA,EAAAC,QAAA,CAewE,MAAEM,MAAA,QAAAA,MAAA,OAf1EY,gBAAA,CAewE,IAAE,E;MAf1ET,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}