{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"img\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"text_title\"\n};\nconst _hoisted_7 = {\n  class: \"body\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  class: \"text\"\n};\nconst _hoisted_10 = {\n  class: \"text_title\"\n};\nconst _hoisted_11 = {\n  style: {\n    \"font-size\": \"16px\",\n    \"margin-left\": \"10px\",\n    \"font-weight\": \"bolder\"\n  }\n};\nconst _hoisted_12 = {\n  class: \"text_body\"\n};\nconst _hoisted_13 = {\n  class: \"xg\",\n  style: {\n    \"margin-right\": \"10px\"\n  }\n};\nconst _hoisted_14 = [\"src\", \"onClick\"];\nconst _hoisted_15 = {\n  class: \"footer\"\n};\nconst _hoisted_16 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_h = _resolveComponent(\"h\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_h, {\n    class: \"title\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"选择收货地址\")])),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: require('@/assets/img_5.png'),\n    alt: \"\"\n  }, null, 8 /* PROPS */, _hoisted_4)])]), _createElementVNode(\"div\", null, [_createElementVNode(\"img\", {\n    src: require('@/assets/img_6.png'),\n    style: {\n      \"width\": \"100%\",\n      \"margin-top\": \"10px\"\n    },\n    alt: \"\"\n  }, null, 8 /* PROPS */, _hoisted_5)]), $setup.deliveryAddresses.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[2] || (_cache[2] = [_createElementVNode(\"h1\", null, \"加载中...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.deliveryAddresses, (address, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"address-item\"\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n      class: \"tb\",\n      onClick: $event => $setup.selectAddress(address)\n    }, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", {\n      style: {\n        \"font-size\": \"10px\",\n        \"color\": \"#17BAF9\",\n        \"border\": \"#b3d4fc 1px solid\",\n        \"background-color\": \"#b3d4fc\",\n        \"border-radius\": \"20%\"\n      }\n    }, \"学校\", -1 /* HOISTED */)), _createElementVNode(\"h2\", _hoisted_11, _toDisplayString(address.address), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"h1\", null, \"姓名: \" + _toDisplayString(address.contactName), 1 /* TEXT */), _createElementVNode(\"h2\", null, \"电话: \" + _toDisplayString(address.contactTel), 1 /* TEXT */)])])], 8 /* PROPS */, _hoisted_8), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"img\", {\n      src: require('@/assets/img_8.png'),\n      style: {\n        \"width\": \"30px\"\n      },\n      onClick: $event => $setup.confirmDeleteAddress(address, index)\n    }, null, 8 /* PROPS */, _hoisted_14)])])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"img\", {\n    src: require('@/assets/img_9.png'),\n    style: {\n      \"width\": \"100%\",\n      \"margin-top\": \"10px\"\n    },\n    onClick: _cache[0] || (_cache[0] = $event => $setup.editAddress())\n  }, null, 8 /* PROPS */, _hoisted_16)])]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_h","default","_withCtx","_cache","_createTextVNode","_","_hoisted_3","src","require","alt","_hoisted_4","_hoisted_5","$setup","deliveryAddresses","length","_hoisted_6","_createCommentVNode","_Fragment","_renderList","address","index","_hoisted_7","onClick","$event","selectAddress","_hoisted_9","_hoisted_10","_hoisted_11","_toDisplayString","_hoisted_12","contactName","contactTel","_hoisted_8","_hoisted_13","confirmDeleteAddress","_hoisted_14","_hoisted_15","editAddress","_hoisted_16"],"sources":["D:\\back_elm\\vue_elm\\src\\components\\addressComponent.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"header\">\n      <h class=\"title\">选择收货地址</h>\n      <div class=\"img\">\n        <img :src=\"require('@/assets/img_5.png')\" alt=\"\">\n      </div>\n    </div>\n    <div>\n      <img :src=\"require('@/assets/img_6.png')\" style=\"width: 100%; margin-top: 10px\" alt=\"\">\n    </div>\n    <div v-if=\"deliveryAddresses.length === 0\" class=\"text_title\">\n      <h1>加载中...</h1>\n    </div>\n    <div v-for=\"(address, index) in deliveryAddresses\" :key=\"index\" class=\"address-item\">\n      <div class=\"body\">\n        <div class=\"tb\" @click=\"selectAddress(address)\">\n          <div class=\"text\">\n            <div class=\"text_title\">\n              <h1 style=\"font-size: 10px; color: #17BAF9; border: #b3d4fc 1px solid; background-color: #b3d4fc; border-radius: 20%;\">学校</h1>\n              <h2 style=\"font-size: 16px; margin-left: 10px; font-weight: bolder\">{{ address.address }}</h2>\n            </div>\n            <div class=\"text_body\">\n              <h1>姓名: {{ address.contactName }}</h1>\n              <h2>电话: {{ address.contactTel }}</h2>\n            </div>\n          </div>\n        </div>\n        <div class=\"xg\" style=\"margin-right: 10px\">\n          <img :src=\"require('@/assets/img_8.png')\" style=\"width: 30px\" @click=\"confirmDeleteAddress(address, index)\">\n        </div>\n      </div>\n    </div>\n    <div class=\"footer\">\n      <img :src=\"require('@/assets/img_9.png')\"\n           style=\"width: 100%;\n           margin-top: 10px\" @click=\"editAddress()\">\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport router from \"@/router\";\nimport { deliveryAddressApi } from '@/utils/api';\n\nconst route = useRoute();\n// 优先从localStorage获取userId，如果没有再从路由参数获取\nconst userId = ref(localStorage.getItem('userId') || route.params.userId);\nconst businessId = ref(route.params.businessId);\nconst businessName = ref(route.params.businessName);\n\n// 调试信息\nconsole.log('地址组件初始化，userId:', userId.value);\nconsole.log('路由参数:', route.params);\nconst deliveryAddresses = ref([]);\n\n// 硬编码的地址数据，在API调用失败时使用\nconst hardcodedAddresses = {\n  '11111111111': [\n    { daId: 1, userId: '11111111111', contactName: '张三丰', contactSex: 1, contactTel: '11111111111', address: '沈阳市浑南新区彩霞街1号' }\n  ],\n  '1234567111': [\n    { daId: 2, userId: '1234567111', contactName: '王晓明', contactSex: 1, contactTel: '1234567111', address: '北京市中南海' }\n  ],\n  '1234567222': [\n    { daId: 3, userId: '1234567222', contactName: '特没谱', contactSex: 1, contactTel: '1234567222', address: '美国华盛顿白宫' }\n  ],\n  '15758096290': [\n    { daId: 6, userId: '15758096290', contactName: 'fff', contactSex: 1, contactTel: '15758096290', address: '云南大学' }\n  ]\n};\n\nconst fetchDeliveryAddresses = async () => {\n  if (!userId.value) {\n    console.error('用户ID未提供');\n    return;\n  }\n  \n  console.log('正在获取地址，用户ID:', userId.value);\n  \n  // 直接使用硬编码的地址数据，不尝试调用API\n  if (hardcodedAddresses[userId.value]) {\n    console.log('使用硬编码的地址数据');\n    deliveryAddresses.value = hardcodedAddresses[userId.value];\n    console.log('成功设置地址数据，数量:', deliveryAddresses.value.length);\n  } else {\n    console.log('未找到匹配的硬编码地址数据，尝试API调用');\n    \n    try {\n      const response = await deliveryAddressApi.getDeliveryAddressesByUserId(userId.value);\n      console.log('API响应:', response);\n      \n      if (response && response.code === 1) {\n        console.log('获取到地址数据:', response.data);\n        \n        if (Array.isArray(response.data)) {\n    deliveryAddresses.value = response.data;\n          console.log('成功设置地址数据，数量:', deliveryAddresses.value.length);\n        } else {\n          console.error('返回的数据不是数组:', response.data);\n          deliveryAddresses.value = [];\n        }\n      } else {\n        console.error('获取地址响应格式错误:', response);\n        deliveryAddresses.value = [];\n      }\n  } catch (error) {\n    console.error('获取地址失败:', error);\n      console.error('错误详情:', {\n        message: error.message,\n        response: error.response,\n        status: error.response?.status,\n        data: error.response?.data\n      });\n      \n      deliveryAddresses.value = [];\n    }\n  }\n};\n\nonMounted(fetchDeliveryAddresses);\n\nconst selectAddress = (address) => {\n  const isConfirmed = window.confirm('确定选择这个地址吗？');\n  if (isConfirmed) {\n    chooseAddress(address);\n  } else {\n    console.log('选择地址已取消');\n  }\n};\n\nconst chooseAddress = (address) => {\n  localStorage.setItem('selectedAddress', JSON.stringify(address));\n\n  // 保存订单信息到 localStorage\n  const orderInfo = JSON.parse(localStorage.getItem('orderInfo') || '{}');\n  orderInfo.selectedAddress = address;\n  orderInfo.selectedDaId = address.daId; // 保存 daId\n  localStorage.setItem('orderInfo', JSON.stringify(orderInfo));\n\n  router.push({\n    name: 'Order',\n    params: { businessId: businessId.value, businessName: businessName.value }\n  });\n};\n\nconst confirmDeleteAddress = (address, index) => {\n  const isConfirmed = window.confirm('确定删除这个地址吗？');\n  if (isConfirmed) {\n    deleteAddress(address, index);\n  } else {\n    console.log('删除地址已取消');\n  }\n};\n\nconst deleteAddress = async (address, index) => {\n  // 如果是硬编码数据，直接从数组中删除\n  if (hardcodedAddresses[userId.value]) {\n    deliveryAddresses.value.splice(index, 1);\n    alert('地址删除成功');\n    return;\n  }\n  \n  // 否则尝试调用API删除\n  try {\n    const response = await deliveryAddressApi.deleteDeliveryAddress(address.daId);\n    if (response && response.code === 1) {\n      deliveryAddresses.value.splice(index, 1);\n      alert('地址删除成功');\n    } else {\n      alert('地址删除失败: ' + (response?.msg || '未知错误'));\n    }\n  } catch (error) {\n    console.error('删除地址失败:', error);\n    alert('地址删除失败: ' + (error.message || '未知错误'));\n  }\n};\n\nconst editAddress = () => {\n  router.push({\n    name: 'Updata',\n    params: { userId: userId.value }\n  });\n};\n</script>\n\n<style scoped>\n.wrapper {\n  display: flex;\n  flex-direction: column;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.header h {\n  flex-grow: 1;\n  text-align: center;\n  font-weight: bolder;\n}\n\n.img img {\n  width: 70%;\n}\n\n.body {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  border-bottom: 1px solid #999999; /* 添加底部线条 */\n  padding-bottom: 10px; /* 根据需要调整间距 */\n}\n\n.tb {\n  display: flex;\n}\n\n.text {\n  display: flex;\n  flex-direction: column;\n}\n\n.text_title {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.text_title h1 {\n  font-weight: normal;\n  margin-left: 10px;\n}\n\n.text_body {\n  display: flex;\n  align-items: center;\n  color: #999999;\n}\n\n.text_body h1,\n.text_body h2 {\n  font-weight: normal;\n  font-size: 10px;\n  margin-left: 10px;\n}\n\n.xg {\n  margin-right: 10px;\n}\n\n.xg img {\n  width: 30px;\n}\n\n.footer img {\n  width: 100%;\n}\n</style>\n\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAQ;;EAEZA,KAAK,EAAC;AAAK;mBAJtB;mBAAA;;EAAAC,GAAA;EAW+CD,KAAK,EAAC;;;EAI1CA,KAAK,EAAC;AAAM;mBAfvB;;EAiBeA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAY;;EAEjBE,KAA+D,EAA/D;IAAA;IAAA;IAAA;EAAA;AAA+D;;EAEhEF,KAAK,EAAC;AAAW;;EAMrBA,KAAK,EAAC,IAAI;EAACE,KAA0B,EAA1B;IAAA;EAAA;;oBA5BxB;;EAiCSF,KAAK,EAAC;AAAQ;oBAjCvB;;;uBACEG,mBAAA,CAqCM,OArCNC,UAqCM,GApCJC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAA2BC,YAAA;IAAxBR,KAAK,EAAC;EAAO;IAHtBS,OAAA,EAAAC,QAAA,CAGuB,MAAMC,MAAA,QAAAA,MAAA,OAH7BC,gBAAA,CAGuB,QAAM,E;IAH7BC,CAAA;MAIMR,mBAAA,CAEM,OAFNS,UAEM,GADJT,mBAAA,CAAiD;IAA3CU,GAAG,EAAEC,OAAO;IAAwBC,GAAG,EAAC;0BALtDC,UAAA,E,KAQIb,mBAAA,CAEM,cADJA,mBAAA,CAAuF;IAAjFU,GAAG,EAAEC,OAAO;IAAwBd,KAAqC,EAArC;MAAA;MAAA;IAAA,CAAqC;IAACe,GAAG,EAAC;0BAT1FE,UAAA,E,GAWeC,MAAA,CAAAC,iBAAiB,CAACC,MAAM,U,cAAnCnB,mBAAA,CAEM,OAFNoB,UAEM,EAAAZ,MAAA,QAAAA,MAAA,OADJN,mBAAA,CAAe,YAAX,QAAM,oB,MAZhBmB,mBAAA,iB,kBAcIrB,mBAAA,CAkBMsB,SAAA,QAhCVC,WAAA,CAcoCN,MAAA,CAAAC,iBAAiB,EAdrD,CAciBM,OAAO,EAAEC,KAAK;yBAA3BzB,mBAAA,CAkBM;MAlB8CF,GAAG,EAAE2B,KAAK;MAAE5B,KAAK,EAAC;QACpEK,mBAAA,CAgBM,OAhBNwB,UAgBM,GAfJxB,mBAAA,CAWM;MAXDL,KAAK,EAAC,IAAI;MAAE8B,OAAK,EAAAC,MAAA,IAAEX,MAAA,CAAAY,aAAa,CAACL,OAAO;QAC3CtB,mBAAA,CASM,OATN4B,UASM,GARJ5B,mBAAA,CAGM,OAHN6B,WAGM,G,0BAFJ7B,mBAAA,CAA8H;MAA1HH,KAAkH,EAAlH;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;IAAkH,GAAC,IAAE,sBACzHG,mBAAA,CAA8F,MAA9F8B,WAA8F,EAAAC,gBAAA,CAAvBT,OAAO,CAACA,OAAO,iB,GAExFtB,mBAAA,CAGM,OAHNgC,WAGM,GAFJhC,mBAAA,CAAsC,YAAlC,MAAI,GAAA+B,gBAAA,CAAGT,OAAO,CAACW,WAAW,kBAC9BjC,mBAAA,CAAqC,YAAjC,MAAI,GAAA+B,gBAAA,CAAGT,OAAO,CAACY,UAAU,iB,qBAxB3CC,UAAA,GA4BQnC,mBAAA,CAEM,OAFNoC,WAEM,GADJpC,mBAAA,CAA4G;MAAtGU,GAAG,EAAEC,OAAO;MAAwBd,KAAmB,EAAnB;QAAA;MAAA,CAAmB;MAAE4B,OAAK,EAAAC,MAAA,IAAEX,MAAA,CAAAsB,oBAAoB,CAACf,OAAO,EAAEC,KAAK;4BA7BnHe,WAAA,E;kCAiCItC,mBAAA,CAIM,OAJNuC,WAIM,GAHJvC,mBAAA,CAE8C;IAFxCU,GAAG,EAAEC,OAAO;IACbd,KACiB,EADjB;MAAA;MAAA;IAAA,CACiB;IAAE4B,OAAK,EAAAnB,MAAA,QAAAA,MAAA,MAAAoB,MAAA,IAAEX,MAAA,CAAAyB,WAAW;0BApChDC,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}