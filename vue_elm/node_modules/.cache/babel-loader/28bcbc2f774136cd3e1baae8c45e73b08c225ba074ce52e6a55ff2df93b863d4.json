{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { deliveryAddressApi } from '@/utils/api';\nimport router from \"@/router\";\nexport default {\n  __name: 'addressComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const userId = ref(route.params.userId);\n    const businessId = ref(route.params.businessId);\n    const businessName = ref(route.params.businessName);\n    const deliveryAddresses = ref([]);\n    const fetchDeliveryAddresses = async () => {\n      if (!userId.value) {\n        console.error('用户ID未提供');\n        return;\n      }\n      try {\n        console.log('获取用户地址，userId:', userId.value);\n        const response = await deliveryAddressApi.getDeliveryAddressesByUserId(userId.value);\n        console.log('地址响应:', response);\n        console.log('地址响应类型:', typeof response.data);\n        console.log('地址响应数据详细信息:', JSON.stringify(response.data));\n        if (response && response.code === 1) {\n          // 先检查data是否是数组\n          if (Array.isArray(response.data)) {\n            deliveryAddresses.value = response.data;\n            console.log('成功获取到地址列表(数组):', deliveryAddresses.value.length, '个地址');\n          } else if (response.data === null || response.data === undefined) {\n            // 数据为空时，初始化一个空数组\n            deliveryAddresses.value = [];\n            console.log('没有找到地址数据');\n          } else if (response.data && typeof response.data === 'object') {\n            // 如果响应有data字段，且data是一个对象\n            if (Array.isArray(response.data.list)) {\n              // 有些API返回 { list: [] } 格式\n              deliveryAddresses.value = response.data.list;\n              console.log('成功获取到地址列表(嵌套列表):', deliveryAddresses.value.length, '个地址');\n            } else if (response.data.daId) {\n              // 如果返回单个对象(有daId表示这是个地址对象)，放入数组中\n              deliveryAddresses.value = [response.data];\n              console.log('成功获取到单个地址对象:', response.data);\n            } else {\n              // 未知对象格式，尝试转为数组\n              console.warn('未识别的数据格式，尝试适配:', response.data);\n              deliveryAddresses.value = [response.data];\n            }\n          } else {\n            console.error('获取地址失败: 响应格式不符合预期', response.data);\n            deliveryAddresses.value = [];\n          }\n        } else if (Array.isArray(response)) {\n          // 如果直接返回数组\n          deliveryAddresses.value = response;\n          console.log('成功获取到地址列表(直接数组):', deliveryAddresses.value.length, '个地址');\n        } else {\n          console.error('获取地址失败: 响应代码不为1', response);\n          deliveryAddresses.value = [];\n        }\n      } catch (error) {\n        console.error('获取地址失败:', error);\n        deliveryAddresses.value = [];\n      }\n    };\n    onMounted(fetchDeliveryAddresses);\n    const selectAddress = address => {\n      const isConfirmed = window.confirm('确定选择这个地址吗？');\n      if (isConfirmed) {\n        chooseAddress(address);\n      } else {\n        console.log('选择地址已取消');\n      }\n    };\n    const chooseAddress = address => {\n      localStorage.setItem('selectedAddress', JSON.stringify(address));\n\n      // 保存订单信息到 localStorage\n      const orderInfo = JSON.parse(localStorage.getItem('orderInfo') || '{}');\n      orderInfo.selectedAddress = address;\n      orderInfo.selectedDaId = address.daId; // 保存 daId\n      localStorage.setItem('orderInfo', JSON.stringify(orderInfo));\n      router.push({\n        name: 'Order',\n        params: {\n          businessId: businessId.value,\n          businessName: businessName.value\n        }\n      });\n    };\n    const confirmDeleteAddress = (address, index) => {\n      const isConfirmed = window.confirm('确定删除这个地址吗？');\n      if (isConfirmed) {\n        deleteAddress(address, index);\n      } else {\n        console.log('删除地址已取消');\n      }\n    };\n    const deleteAddress = async (address, index) => {\n      try {\n        const response = await deliveryAddressApi.deleteDeliveryAddress(address.daId);\n        if (response && response.code === 1) {\n          deliveryAddresses.value.splice(index, 1);\n          alert('地址删除成功');\n        } else {\n          alert('地址删除失败');\n        }\n      } catch (error) {\n        console.error('删除地址失败:', error);\n        alert('地址删除失败');\n      }\n    };\n    const editAddress = () => {\n      router.push({\n        name: 'Updata',\n        params: {\n          userId: userId.value\n        }\n      });\n    };\n    const __returned__ = {\n      route,\n      userId,\n      businessId,\n      businessName,\n      deliveryAddresses,\n      fetchDeliveryAddresses,\n      selectAddress,\n      chooseAddress,\n      confirmDeleteAddress,\n      deleteAddress,\n      editAddress,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get deliveryAddressApi() {\n        return deliveryAddressApi;\n      },\n      get router() {\n        return router;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","deliveryAddressApi","router","route","userId","params","businessId","businessName","deliveryAddresses","fetchDeliveryAddresses","value","console","error","log","response","getDeliveryAddressesByUserId","data","JSON","stringify","code","Array","isArray","length","undefined","list","daId","warn","selectAddress","address","isConfirmed","window","confirm","chooseAddress","localStorage","setItem","orderInfo","parse","getItem","selectedAddress","selectedDaId","push","name","confirmDeleteAddress","index","deleteAddress","deleteDeliveryAddress","splice","alert","editAddress"],"sources":["D:/back_elm/vue_elm/src/components/addressComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"header\">\r\n      <h class=\"title\">选择收货地址</h>\r\n      <div class=\"img\">\r\n        <img :src=\"require('@/assets/img_5.png')\" alt=\"\">\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <img :src=\"require('@/assets/img_6.png')\" style=\"width: 100%; margin-top: 10px\" alt=\"\">\r\n    </div>\r\n    <div v-if=\"deliveryAddresses.length === 0\" class=\"text_title\">\r\n      <h1>加载中...</h1>\r\n    </div>\r\n    <div v-for=\"(address, index) in deliveryAddresses\" :key=\"index\" class=\"address-item\">\r\n      <div class=\"body\">\r\n        <div class=\"tb\" @click=\"selectAddress(address)\">\r\n          <div class=\"text\">\r\n            <div class=\"text_title\">\r\n              <h1 style=\"font-size: 10px; color: #17BAF9; border: #b3d4fc 1px solid; background-color: #b3d4fc; border-radius: 20%;\">学校</h1>\r\n              <h2 style=\"font-size: 16px; margin-left: 10px; font-weight: bolder\">{{ address.address }}</h2>\r\n            </div>\r\n            <div class=\"text_body\">\r\n              <h1>姓名: {{ address.contactName }}</h1>\r\n              <h2>电话: {{ address.contactTel }}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"xg\" style=\"margin-right: 10px\">\r\n          <img :src=\"require('@/assets/img_8.png')\" style=\"width: 30px\" @click=\"confirmDeleteAddress(address, index)\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"footer\">\r\n      <img :src=\"require('@/assets/img_9.png')\"\r\n           style=\"width: 100%;\r\n           margin-top: 10px\" @click=\"editAddress()\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { deliveryAddressApi } from '@/utils/api';\r\nimport router from \"@/router\";\r\n\r\nconst route = useRoute();\r\nconst userId = ref(route.params.userId);\r\nconst businessId = ref(route.params.businessId);\r\nconst businessName = ref(route.params.businessName);\r\nconst deliveryAddresses = ref([]);\r\n\r\nconst fetchDeliveryAddresses = async () => {\r\n  if (!userId.value) {\r\n    console.error('用户ID未提供');\r\n    return;\r\n  }\r\n  try {\r\n    console.log('获取用户地址，userId:', userId.value);\r\n    const response = await deliveryAddressApi.getDeliveryAddressesByUserId(userId.value);\r\n    console.log('地址响应:', response);\r\n    console.log('地址响应类型:', typeof response.data);\r\n    console.log('地址响应数据详细信息:', JSON.stringify(response.data));\r\n    \r\n    if (response && response.code === 1) {\r\n      // 先检查data是否是数组\r\n      if (Array.isArray(response.data)) {\r\n        deliveryAddresses.value = response.data;\r\n        console.log('成功获取到地址列表(数组):', deliveryAddresses.value.length, '个地址');\r\n      } else if (response.data === null || response.data === undefined) {\r\n        // 数据为空时，初始化一个空数组\r\n        deliveryAddresses.value = [];\r\n        console.log('没有找到地址数据');\r\n      } else if (response.data && typeof response.data === 'object') {\r\n        // 如果响应有data字段，且data是一个对象\r\n        if (Array.isArray(response.data.list)) {\r\n          // 有些API返回 { list: [] } 格式\r\n          deliveryAddresses.value = response.data.list;\r\n          console.log('成功获取到地址列表(嵌套列表):', deliveryAddresses.value.length, '个地址');\r\n        } else if (response.data.daId) {\r\n          // 如果返回单个对象(有daId表示这是个地址对象)，放入数组中\r\n          deliveryAddresses.value = [response.data];\r\n          console.log('成功获取到单个地址对象:', response.data);\r\n        } else {\r\n          // 未知对象格式，尝试转为数组\r\n          console.warn('未识别的数据格式，尝试适配:', response.data);\r\n          deliveryAddresses.value = [response.data];\r\n        }\r\n      } else {\r\n        console.error('获取地址失败: 响应格式不符合预期', response.data);\r\n        deliveryAddresses.value = []; \r\n      }\r\n    } else if (Array.isArray(response)) {\r\n      // 如果直接返回数组\r\n      deliveryAddresses.value = response;\r\n      console.log('成功获取到地址列表(直接数组):', deliveryAddresses.value.length, '个地址');\r\n    } else {\r\n      console.error('获取地址失败: 响应代码不为1', response);\r\n      deliveryAddresses.value = []; \r\n    }\r\n  } catch (error) {\r\n    console.error('获取地址失败:', error);\r\n    deliveryAddresses.value = []; \r\n  }\r\n};\r\n\r\nonMounted(fetchDeliveryAddresses);\r\n\r\nconst selectAddress = (address) => {\r\n  const isConfirmed = window.confirm('确定选择这个地址吗？');\r\n  if (isConfirmed) {\r\n    chooseAddress(address);\r\n  } else {\r\n    console.log('选择地址已取消');\r\n  }\r\n};\r\n\r\nconst chooseAddress = (address) => {\r\n  localStorage.setItem('selectedAddress', JSON.stringify(address));\r\n\r\n  // 保存订单信息到 localStorage\r\n  const orderInfo = JSON.parse(localStorage.getItem('orderInfo') || '{}');\r\n  orderInfo.selectedAddress = address;\r\n  orderInfo.selectedDaId = address.daId; // 保存 daId\r\n  localStorage.setItem('orderInfo', JSON.stringify(orderInfo));\r\n\r\n  router.push({\r\n    name: 'Order',\r\n    params: { businessId: businessId.value, businessName: businessName.value }\r\n  });\r\n};\r\n\r\nconst confirmDeleteAddress = (address, index) => {\r\n  const isConfirmed = window.confirm('确定删除这个地址吗？');\r\n  if (isConfirmed) {\r\n    deleteAddress(address, index);\r\n  } else {\r\n    console.log('删除地址已取消');\r\n  }\r\n};\r\n\r\nconst deleteAddress = async (address, index) => {\r\n  try {\r\n    const response = await deliveryAddressApi.deleteDeliveryAddress(address.daId);\r\n    if (response && response.code === 1) {\r\n      deliveryAddresses.value.splice(index, 1);\r\n      alert('地址删除成功');\r\n    } else {\r\n      alert('地址删除失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('删除地址失败:', error);\r\n    alert('地址删除失败');\r\n  }\r\n};\r\n\r\nconst editAddress = () => {\r\n  router.push({\r\n    name: 'Updata',\r\n    params: { userId: userId.value }\r\n  });\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.header h {\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-weight: bolder;\r\n}\r\n\r\n.img img {\r\n  width: 70%;\r\n}\r\n\r\n.body {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n  border-bottom: 1px solid #999999; /* 添加底部线条 */\r\n  padding-bottom: 10px; /* 根据需要调整间距 */\r\n}\r\n\r\n.tb {\r\n  display: flex;\r\n}\r\n\r\n.text {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.text_title {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.text_title h1 {\r\n  font-weight: normal;\r\n  margin-left: 10px;\r\n}\r\n\r\n.text_body {\r\n  display: flex;\r\n  align-items: center;\r\n  color: #999999;\r\n}\r\n\r\n.text_body h1,\r\n.text_body h2 {\r\n  font-weight: normal;\r\n  font-size: 10px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.xg {\r\n  margin-right: 10px;\r\n}\r\n\r\n.xg img {\r\n  width: 30px;\r\n}\r\n\r\n.footer img {\r\n  width: 100%;\r\n}\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}