{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport IndexComponent from \"@/components/IndexComponent.vue\";\nimport historyComponent from \"@/components/historyComponent.vue\";\nimport loginComponent from \"@/components/loginComponent.vue\";\nimport businesslistComponent from \"@/components/businesslistComponent.vue\";\nimport RegisterComponent from \"@/components/RegisterComponent.vue\";\nimport businesslist2Component from \"@/components/businesslist2Component.vue\";\nimport paymentComponent from \"@/components/paymentComponent.vue\";\nimport OrderComponent from \"@/components/OrderComponent.vue\";\nimport addressComponent from \"@/components/addressComponent.vue\";\nimport updataComponent from \"@/components/updataComponent.vue\";\n\n// 定义需要登录才能访问的路由\nconst authRequired = ['/Index-Component', '/business-list', '/business-list2', '/order-component', '/history-component', '/Payment-component', '/address', '/updata-component'];\n\n// 定义路由数组\nconst routes = [{\n  path: '/',\n  redirect: '/login-component' // 将根路径重定向到登录页\n}, {\n  path: '/login-component',\n  name: 'Login',\n  component: loginComponent\n}, {\n  path: '/Register-component',\n  name: 'Register',\n  component: RegisterComponent\n}, {\n  path: '/Index-Component',\n  name: 'Index',\n  component: IndexComponent,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/business-list2/:businessId/:businessName/:businessImg',\n  name: 'BusinessList2',\n  component: businesslist2Component,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/business-list',\n  component: businesslistComponent,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/order-component/:businessId/:businessName',\n  name: 'Order',\n  component: OrderComponent,\n  props: true,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/history-component',\n  component: historyComponent,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/Payment-component',\n  name: 'Payment',\n  component: paymentComponent,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/address/:userId/:businessId/:businessName',\n  name: 'Address',\n  component: addressComponent,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/updata-component/:userId',\n  name: 'Updata',\n  component: updataComponent,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 添加全局路由守卫\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n\n  // 检查该路由是否需要登录权限\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // 检查是否已登录\n    if (!token) {\n      // 如果没有token，重定向到登录页\n      next({\n        path: '/login-component',\n        query: {\n          redirect: to.fullPath\n        } // 保存原本要去的路径\n      });\n    } else {\n      next(); // 如果有token，正常进入\n    }\n  } else {\n    // 如果是登录页面且已经有token，直接跳转到首页\n    if (to.path === '/login-component' && token) {\n      next('/Index-Component');\n    } else {\n      next(); // 不需要登录权限的页面直接进入\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","IndexComponent","historyComponent","loginComponent","businesslistComponent","RegisterComponent","businesslist2Component","paymentComponent","OrderComponent","addressComponent","updataComponent","authRequired","routes","path","redirect","name","component","meta","requiresAuth","props","router","history","beforeEach","to","from","next","token","localStorage","getItem","matched","some","record","query","fullPath"],"sources":["D:/IDEA/vue_elm/vue_elm/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport IndexComponent from \"@/components/IndexComponent.vue\";\nimport historyComponent from \"@/components/historyComponent.vue\";\nimport loginComponent from \"@/components/loginComponent.vue\";\nimport businesslistComponent from \"@/components/businesslistComponent.vue\";\nimport RegisterComponent from \"@/components/RegisterComponent.vue\";\nimport businesslist2Component from \"@/components/businesslist2Component.vue\";\nimport paymentComponent from \"@/components/paymentComponent.vue\";\nimport OrderComponent from \"@/components/OrderComponent.vue\";\nimport addressComponent from \"@/components/addressComponent.vue\";\nimport updataComponent from \"@/components/updataComponent.vue\";\n\n// 定义需要登录才能访问的路由\nconst authRequired = [\n  '/Index-Component',\n  '/business-list',\n  '/business-list2',\n  '/order-component',\n  '/history-component',\n  '/Payment-component',\n  '/address',\n  '/updata-component'\n];\n\n// 定义路由数组\nconst routes = [\n  {\n    path: '/',\n    redirect: '/login-component' // 将根路径重定向到登录页\n  },\n  {\n    path: '/login-component',\n    name: 'Login',\n    component: loginComponent\n  },\n  {\n    path: '/Register-component',\n    name: 'Register',\n    component: RegisterComponent\n  },\n  {\n    path: '/Index-Component',\n    name: 'Index',\n    component: IndexComponent,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/business-list2/:businessId/:businessName/:businessImg',\n    name: 'BusinessList2',\n    component: businesslist2Component,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/business-list',\n    component: businesslistComponent,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/order-component/:businessId/:businessName',\n    name: 'Order',\n    component: OrderComponent,\n    props: true,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/history-component',\n    component: historyComponent,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/Payment-component',\n    name: 'Payment',\n    component: paymentComponent,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/address/:userId/:businessId/:businessName',\n    name: 'Address',\n    component: addressComponent,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/updata-component/:userId',\n    name: 'Updata',\n    component: updataComponent,\n    meta: { requiresAuth: true }\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 添加全局路由守卫\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  \n  // 检查该路由是否需要登录权限\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // 检查是否已登录\n    if (!token) {\n      // 如果没有token，重定向到登录页\n      next({\n        path: '/login-component',\n        query: { redirect: to.fullPath } // 保存原本要去的路径\n      });\n    } else {\n      next(); // 如果有token，正常进入\n    }\n  } else {\n    // 如果是登录页面且已经有token，直接跳转到首页\n    if (to.path === '/login-component' && token) {\n      next('/Index-Component');\n    } else {\n      next(); // 不需要登录权限的页面直接进入\n    }\n  }\n});\n\nexport default router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}