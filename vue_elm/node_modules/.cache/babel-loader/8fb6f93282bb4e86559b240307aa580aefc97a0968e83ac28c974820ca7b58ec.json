{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"search\"\n};\nconst _hoisted_4 = {\n  class: \"information\"\n};\nconst _hoisted_5 = {\n  class: \"body\"\n};\nconst _hoisted_6 = {\n  class: \"order-header\"\n};\nconst _hoisted_7 = {\n  class: \"business-info\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  class: \"business-details\"\n};\nconst _hoisted_10 = {\n  class: \"business-name\"\n};\nconst _hoisted_11 = {\n  class: \"delivery-price\"\n};\nconst _hoisted_12 = {\n  class: \"order-price\"\n};\nconst _hoisted_13 = {\n  class: \"order-content\"\n};\nconst _hoisted_14 = {\n  class: \"food-list\"\n};\nconst _hoisted_15 = {\n  class: \"food-left\"\n};\nconst _hoisted_16 = [\"src\"];\nconst _hoisted_17 = {\n  class: \"food-right\"\n};\nconst _hoisted_18 = {\n  class: \"food-name\"\n};\nconst _hoisted_19 = {\n  class: \"food-quantity\"\n};\nconst _hoisted_20 = {\n  class: \"order-footer\"\n};\nconst _hoisted_21 = {\n  class: \"order-date\"\n};\nconst _hoisted_22 = {\n  class: \"order-actions\"\n};\nconst _hoisted_23 = [\"onClick\"];\nconst _hoisted_24 = [\"onClick\"];\nconst _hoisted_25 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"search-bottom\"\n  }, [_createElementVNode(\"div\", {\n    class: \"back\"\n  }, [_createElementVNode(\"span\", {\n    class: \"iconfont icon-back\",\n    onClick: $setup.goBack\n  })]), _cache[6] || (_cache[6] = _createStaticVNode(\"<div class=\\\"search-pt\\\" data-v-4f308659><span class=\\\"iconfont icon-sousuo\\\" style=\\\"margin-left:2vw;\\\" data-v-4f308659></span><input style=\\\"flex:6;\\\" type=\\\"text\\\" placeholder=\\\"历史信息搜索\\\" data-v-4f308659></div><div class=\\\"box\\\" data-v-4f308659><span class=\\\"iconfont icon-gongjuxiang\\\" data-v-4f308659></span><span class=\\\"iconfont icon-24gf-ellipsis\\\" data-v-4f308659></span></div>\", 2))]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", {\n    class: _normalizeClass({\n      active: $setup.activeTab === 'all'\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => $setup.setActiveTab('all'))\n  }, \"全部\", 2 /* CLASS */), _createElementVNode(\"p\", {\n    class: _normalizeClass({\n      active: $setup.activeTab === 'inProgress'\n    }),\n    onClick: _cache[1] || (_cache[1] = $event => $setup.setActiveTab('inProgress'))\n  }, \"进行中\", 2 /* CLASS */), _createElementVNode(\"p\", {\n    class: _normalizeClass({\n      active: $setup.activeTab === 'toRate'\n    }),\n    onClick: _cache[2] || (_cache[2] = $event => $setup.setActiveTab('toRate'))\n  }, \"待评价\", 2 /* CLASS */), _createElementVNode(\"p\", {\n    class: _normalizeClass({\n      active: $setup.activeTab === 'refund'\n    }),\n    onClick: _cache[3] || (_cache[3] = $event => $setup.setActiveTab('refund'))\n  }, \"退款\", 2 /* CLASS */)])])]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredOrders, order => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: order.orderId,\n      class: \"order-card\"\n    }, [_createCommentVNode(\" 订单头部：商家信息和订单总价 \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n      src: $setup.getImageUrl(order.businessImg),\n      onError: _cache[4] || (_cache[4] = $event => $setup.handleImageError($event, 'business')),\n      class: \"business-img\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_8), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString(order.businessName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, _toDisplayString(order.deliveryPrice) + \"元无门槛\", 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_12, \"¥\" + _toDisplayString(order.orderTotal), 1 /* TEXT */)]), _createCommentVNode(\" 订单内容：食品列表 \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getArrayFromString(order.foodNames), (foodName, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: \"food-item\"\n      }, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"img\", {\n        src: $setup.getFoodImage(order, index),\n        onError: _cache[5] || (_cache[5] = $event => $setup.handleImageError($event, 'food')),\n        class: \"food-img\"\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_16)]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, _toDisplayString(foodName || '未知食品'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_19, \"x\" + _toDisplayString($setup.getFoodQuantity(order, index)), 1 /* TEXT */)])]);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 订单底部：订单时间和操作按钮 \"), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, _toDisplayString(order.orderDate), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"button\", {\n      class: \"reorder-btn\",\n      onClick: $event => $setup.reorder(order)\n    }, \"再来一单\", 8 /* PROPS */, _hoisted_23), $setup.isOrderRated(order.orderId) ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"rated-btn\",\n      onClick: $event => $setup.goToRating(order)\n    }, \" 修改评价 \", 8 /* PROPS */, _hoisted_24)) : (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      class: \"rating-btn\",\n      onClick: $event => $setup.goToRating(order)\n    }, \" 评价订单 \", 8 /* PROPS */, _hoisted_25))])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","$setup","goBack","_createStaticVNode","_hoisted_4","_normalizeClass","active","activeTab","_cache","$event","setActiveTab","_hoisted_5","_Fragment","_renderList","filteredOrders","order","key","orderId","_createCommentVNode","_hoisted_6","_hoisted_7","src","getImageUrl","businessImg","onError","handleImageError","_hoisted_8","_hoisted_9","_hoisted_10","_toDisplayString","businessName","_hoisted_11","deliveryPrice","_hoisted_12","orderTotal","_hoisted_13","_hoisted_14","getArrayFromString","foodNames","foodName","index","_hoisted_15","getFoodImage","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","getFoodQuantity","_hoisted_20","_hoisted_21","orderDate","_hoisted_22","reorder","_hoisted_23","isOrderRated","goToRating","_hoisted_24","_hoisted_25"],"sources":["D:\\back_elm\\vue_elm\\src\\components\\historyComponent.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"header\">\n      <div class=\"search\">\n        <div class=\"search-bottom\">\n          <div class=\"back\">\n            <span class=\"iconfont icon-back\" @click=\"goBack\"></span>\n          </div>\n          <div class=\"search-pt\">\n            <span class=\"iconfont icon-sousuo\" style=\"margin-left: 2vw\"></span>\n            <input style=\"flex:6;\" type=\"text\" placeholder=\"历史信息搜索\"/>\n          </div>\n          <div class=\"box\">\n            <span class=\"iconfont icon-gongjuxiang\"></span>\n            <span class=\"iconfont icon-24gf-ellipsis\"></span>\n          </div>\n        </div>\n        <div class=\"information\">\n          <p :class=\"{ active: activeTab === 'all' }\" @click=\"setActiveTab('all')\">全部</p>\n          <p :class=\"{ active: activeTab === 'inProgress' }\" @click=\"setActiveTab('inProgress')\">进行中</p>\n          <p :class=\"{ active: activeTab === 'toRate' }\" @click=\"setActiveTab('toRate')\">待评价</p>\n          <p :class=\"{ active: activeTab === 'refund' }\" @click=\"setActiveTab('refund')\">退款</p>\n        </div>\n      </div>\n    </div>\n    <div class=\"body\">\n      <div v-for=\"order in filteredOrders\" :key=\"order.orderId\" class=\"order-card\">\n        <!-- 订单头部：商家信息和订单总价 -->\n        <div class=\"order-header\">\n          <div class=\"business-info\">\n            <img :src=\"getImageUrl(order.businessImg)\" @error=\"handleImageError($event, 'business')\" class=\"business-img\"/>\n            <div class=\"business-details\">\n              <div class=\"business-name\">{{ order.businessName }}</div>\n              <div class=\"delivery-price\">{{ order.deliveryPrice }}元无门槛</div>\n            </div>\n          </div>\n          <div class=\"order-price\">&#165;{{ order.orderTotal }}</div>\n        </div>\n        \n        <!-- 订单内容：食品列表 -->\n        <div class=\"order-content\">\n          <div class=\"food-list\">\n            <div v-for=\"(foodName, index) in getArrayFromString(order.foodNames)\" :key=\"index\" class=\"food-item\">\n              <div class=\"food-left\">\n                <img \n                  :src=\"getFoodImage(order, index)\" \n                  @error=\"handleImageError($event, 'food')\" \n                  class=\"food-img\"\n                />\n              </div>\n              <div class=\"food-right\">\n                <div class=\"food-name\">{{ foodName || '未知食品' }}</div>\n                <div class=\"food-quantity\">x{{ getFoodQuantity(order, index) }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 订单底部：订单时间和操作按钮 -->\n        <div class=\"order-footer\">\n          <div class=\"order-date\">{{ order.orderDate }}</div>\n          <div class=\"order-actions\">\n            <button class=\"reorder-btn\" @click=\"reorder(order)\">再来一单</button>\n            <button \n              v-if=\"isOrderRated(order.orderId)\" \n              class=\"rated-btn\" \n              @click=\"goToRating(order)\"\n            >\n              修改评价\n            </button>\n            <button \n              v-else \n              class=\"rating-btn\" \n              @click=\"goToRating(order)\"\n            >\n              评价订单\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { orderApi } from '../utils/api';\nimport { businessApi } from '../utils/api'; // Added import for businessApi\nimport { ElMessage } from 'element-plus'; // Added ElMessage import\n\nconst router = useRouter();\nconst orders = ref([]);\nconst activeTab = ref('all');\nconst baseURL = 'http://localhost:8090'; // API网关地址\n\nonMounted(() => {\n  fetchOrders();\n});\n\nconst goBack = () => {\n  router.push('/Index-Component');\n};\n\nconst setActiveTab = (tab) => {\n  activeTab.value = tab;\n  // 切换标签时滚动到顶部\n  window.scrollTo(0, 0);\n};\n\n// 将逗号分隔的字符串转换为数组\nconst getArrayFromString = (str) => {\n  if (!str) return [];\n  \n  try {\n    // 检查是否是单个Base64编码字符串（通常很长）\n    if (typeof str === 'string' && str.length > 100) {\n      // 如果是Base64编码或包含Base64特征，作为单个元素返回\n      if (str.startsWith('data:image') || \n          str.startsWith('iVBOR') || \n          /^[A-Za-z0-9+/=]+$/.test(str.substring(0, 20))) {\n        return [str];\n      }\n    }\n    \n    // 如果字符串中包含Base64编码的图片数据，不要在逗号处分割\n    if (typeof str === 'string' && (\n        str.includes('data:image/png;base64,') || \n        str.includes('data:image/jpeg;base64,') ||\n        str.includes('iVBORw0KGgo'))) {\n      \n      // 检查是否有多个Base64编码图片（非常罕见的情况）\n      if (str.indexOf('data:image', str.indexOf('data:image') + 10) > 0) {\n        // 有多个Base64图片，尝试分割它们\n        const parts = [];\n        let startIndex = 0;\n        let searchIndex = 0;\n        \n        while ((searchIndex = str.indexOf('data:image', startIndex)) >= 0) {\n          if (startIndex > 0 && searchIndex > startIndex) {\n            parts.push(str.substring(startIndex, searchIndex));\n          }\n          startIndex = searchIndex;\n          \n          // 寻找下一个图片开始或字符串结束\n          const nextImgIndex = str.indexOf('data:image', startIndex + 10);\n          if (nextImgIndex > 0) {\n            parts.push(str.substring(startIndex, nextImgIndex));\n            startIndex = nextImgIndex;\n          } else {\n            // 最后一个图片\n            parts.push(str.substring(startIndex));\n            break;\n          }\n        }\n        \n        return parts.filter(p => p);\n      }\n      \n      // 单个Base64图片，作为单个元素返回\n      return [str];\n    }\n    \n    // 处理普通的逗号分隔字符串\n    return str.split(',').map(item => item.trim());\n  } catch (error) {\n    console.error('分割字符串出错:', error);\n    return [str]; // 出错时返回原始字符串作为单个元素\n  }\n};\n\n// 处理图片URL\nconst getImageUrl = (imgPath) => {\n  if (!imgPath) {\n    return require('@/assets/img/BUSINESS/img.png');\n  }\n  \n  try {\n    // 如果是Base64编码的图片数据\n    if (typeof imgPath === 'string' && imgPath.length > 100) {\n      // 检查是否是完整的Base64字符串\n      if (imgPath.startsWith('data:image')) {\n        console.log('getImageUrl: 检测到完整的Base64图片');\n        return imgPath;\n      }\n      \n      // 检查是否是PNG的Base64编码\n      if (imgPath.startsWith('iVBOR')) {\n        console.log('getImageUrl: 检测到PNG Base64图片，添加前缀');\n        return `data:image/png;base64,${imgPath}`;\n      }\n      \n      // 检查是否是JPEG的Base64编码\n      if (imgPath.startsWith('/9j/')) {\n        console.log('getImageUrl: 检测到JPEG Base64图片，添加前缀');\n        return `data:image/jpeg;base64,${imgPath}`;\n      }\n      \n      // 其他可能的Base64编码（尝试作为PNG）\n      if (/^[A-Za-z0-9+/=]{20,}$/.test(imgPath.substring(0, 100))) {\n        console.log('getImageUrl: 检测到其他类型的Base64图片，尝试作为PNG');\n        return `data:image/png;base64,${imgPath}`;\n      }\n    }\n    \n    // 如果是完整URL，直接返回\n    if (imgPath.startsWith('http')) {\n      return imgPath;\n    }\n    \n    // 如果是以/assets开头的路径，转换为正确的路径\n    if (imgPath.startsWith('/assets/')) {\n      // 去掉开头的/assets/，因为在项目中assets是相对路径\n      const relativePath = imgPath.replace('/assets/', '');\n      try {\n        return require(`@/assets/${relativePath}`);\n      } catch (e) {\n        // 尝试通过API网关获取\n        return baseURL + imgPath;\n      }\n    }\n    \n    // 如果是相对路径，添加baseURL\n    if (imgPath.startsWith('/')) {\n      return baseURL + imgPath;\n    }\n    \n    // 尝试加载项目中的图片\n    try {\n      // 首先尝试从BUSINESS目录加载\n      if (!imgPath.includes('/')) {\n        try {\n          return require('@/assets/img/BUSINESS/' + imgPath);\n        } catch (e) {\n          // 尝试从其他目录加载\n        }\n      }\n      \n      // 然后尝试从普通img目录加载\n      return require('@/assets/img/' + imgPath);\n    } catch (e) {\n      return require('@/assets/img/BUSINESS/img.png');\n    }\n  } catch (error) {\n    console.error('处理图片URL出错:', error);\n    return require('@/assets/img/BUSINESS/img.png');\n  }\n};\n\n// 处理图片加载错误\nconst handleImageError = (e, type) => {\n  if (type === 'business') {\n    e.target.src = require('@/assets/img/BUSINESS/img.png');\n  } else {\n    e.target.src = require('@/assets/img/sp01.png');\n  }\n};\n\n// 再次下单\nconst reorder = (order) => {\n  // 实现再次下单功能\n  router.push(`/business-component/${order.businessId}`);\n};\n\n// 前往评价页面\nconst goToRating = (order) => {\n  console.log('Order object:', order);\n  \n  // 确保businessId存在且为有效值\n  const businessId = order.businessId || order.business?.businessId || '1';\n  \n  // 如果商家图片为空，尝试再次获取\n  if (!order.businessImg && businessId) {\n    businessApi.getBusinessById(businessId)\n      .then(businessInfo => {\n        if (businessInfo && businessInfo.businessImg) {\n          navigateToRating(order, businessInfo.businessImg);\n        } else {\n          navigateToRating(order);\n        }\n      })\n      .catch(error => {\n        console.error('获取商家信息失败:', error);\n        navigateToRating(order);\n      });\n  } else {\n    navigateToRating(order);\n  }\n};\n\n// 导航到评价页面\nconst navigateToRating = (order, businessImg = null) => {\n  router.push({\n    name: 'Rating',\n    params: {\n      orderId: order.orderId || '1',\n      businessId: order.businessId || order.business?.businessId || '1',\n      businessName: order.businessName || '未知商家'\n    },\n    query: {\n      businessImg: businessImg || order.businessImg || '',\n      orderDate: order.orderDate || ''\n    }\n  });\n};\n\n// 检查订单是否已评价\nconst isOrderRated = (orderId) => {\n  try {\n    // 检查本地存储中是否有该订单的评价\n    const ratingsString = localStorage.getItem('localRatings');\n    console.log(`检查订单 ${orderId} 是否已评价, 本地存储:`, ratingsString);\n    \n    if (ratingsString) {\n      const ratings = JSON.parse(ratingsString);\n      console.log('解析后的本地评价:', ratings);\n      \n      // 确保使用数字类型进行比较\n      const isRated = ratings.some(r => r.orderId === Number(orderId));\n      console.log(`订单 ${orderId} 已评价状态:`, isRated);\n      return isRated;\n    }\n  } catch (error) {\n    console.error('检查订单评价状态失败:', error);\n  }\n  return false;\n};\n\nconst fetchOrders = async () => {\n  try {\n    const response = await orderApi.getOrderHistory();\n    console.log('订单历史原始响应:', response);\n    \n    if (response && Array.isArray(response)) {\n      orders.value = response;\n    } else if (response && response.data && Array.isArray(response.data)) {\n      orders.value = response.data;\n    } else if (response && typeof response === 'object') {\n      // 尝试从响应中提取数据\n      console.log('尝试从响应中提取订单数据:', response);\n      const possibleOrderArrays = [\n        response.data,\n        response.result,\n        response.content,\n        response.records,\n        response.list,\n        response.orders\n      ];\n      \n      for (const arr of possibleOrderArrays) {\n        if (arr && Array.isArray(arr)) {\n          console.log('找到订单数组:', arr);\n          orders.value = arr;\n          break;\n        }\n      }\n    }\n    \n    // 详细记录每个订单的图片信息\n    console.log('订单数据处理前:', JSON.stringify(orders.value.map(order => ({\n      orderId: order.orderId,\n      businessImg: order.businessImg ? order.businessImg.substring(0, 30) + '...' : 'null',\n      businessImgType: order.businessImg ? typeof order.businessImg : 'null',\n      hasBusinessImg: !!order.businessImg,\n      foodImgs: order.foodImgs ? order.foodImgs.substring(0, 30) + '...' : 'null',\n      // 添加更多详细的食品图片信息\n      foodImgsArray: getArrayFromString(order.foodImgs),\n      foodImgsFirstItem: getArrayFromString(order.foodImgs)[0] ? getArrayFromString(order.foodImgs)[0].substring(0, 30) + '...' : 'null'\n    }))));\n    \n    // 确保每个订单对象都有必要的属性\n    orders.value = orders.value.map(order => {\n      // 使用数据库中存储的商家名称和图片\n      const businessName = order.businessName || order.business?.businessName || '未知商家';\n      const businessImg = order.businessImg || order.business?.businessImg || '';\n      \n      console.log(`订单 ${order.orderId} 的商家图片:`, \n        businessImg ? businessImg.substring(0, 30) + '...' : 'null',\n        '类型:', typeof businessImg);\n      \n      // 检查是否有订单详情中的食品图片\n      if (order.orderDetailList && Array.isArray(order.orderDetailList)) {\n        console.log(`订单 ${order.orderId} 的食品图片:`, \n          order.orderDetailList.map(detail => ({\n            foodId: detail.foodId,\n            foodImg: detail.foodImg ? detail.foodImg.substring(0, 30) + '...' : 'null'\n          })));\n      }\n      \n      // 打印foodImgs字段的详细信息\n      if (order.foodImgs) {\n        console.log(`订单 ${order.orderId} 的foodImgs字段:`, order.foodImgs);\n        const foodImgsArray = getArrayFromString(order.foodImgs);\n        console.log(`订单 ${order.orderId} 的foodImgs数组:`, foodImgsArray);\n        \n        // 检查每个食品图片URL\n        foodImgsArray.forEach((imgUrl, index) => {\n          console.log(`食品图片 ${index}:`, imgUrl);\n          console.log(`处理后的图片URL:`, getImageUrl(imgUrl));\n        });\n      }\n      \n      return {\n        ...order,\n        businessId: order.businessId || order.business?.businessId || '1',\n        businessName: businessName,\n        businessImg: businessImg,\n        orderDate: order.orderDate || new Date(order.orderTime || Date.now()).toLocaleString()\n      };\n    });\n    \n    console.log('处理后的订单数据:', orders.value);\n    \n    // 不再需要为每个订单获取商家信息，因为数据库中已经存储了商家名称和图片\n  } catch (error) {\n    console.error('获取订单历史失败:', error);\n    \n    // 如果API调用失败，尝试从本地存储获取订单信息\n    const localOrderInfo = localStorage.getItem('orderInfo');\n    if (localOrderInfo) {\n      try {\n        const orderInfo = JSON.parse(localOrderInfo);\n        console.log('使用本地存储的订单信息:', orderInfo);\n        \n        // 创建模拟订单数据\n        const mockOrder = {\n          orderId: new Date().getTime(),\n          businessId: orderInfo.businessId,\n          businessName: orderInfo.businessName,\n          businessImg: orderInfo.businessImg,\n          orderDate: orderInfo.orderDate || new Date().toLocaleString(),\n          orderTotal: orderInfo.orderTotal || 0,\n          orderState: 5, // 已完成/待评价\n          foodNames: orderInfo.items?.map(item => item.foodName).join(','),\n          foodImgs: orderInfo.items?.map(item => item.foodImg).join(','),\n          quantities: orderInfo.items?.map(item => item.quantity).join(',')\n        };\n        \n        // 使用模拟数据\n        orders.value = [mockOrder];\n        \n        // 显示提示\n        ElMessage({\n          message: 'API服务不可用，显示本地存储的订单信息',\n          type: 'warning',\n          duration: 3000\n        });\n      } catch (e) {\n        console.error('解析本地订单信息失败:', e);\n        \n        // 使用硬编码的模拟数据\n        useMockData();\n      }\n    } else {\n      // 如果本地存储中没有订单信息，使用硬编码的模拟数据\n      useMockData();\n    }\n  }\n};\n\n// 使用硬编码的模拟数据\nconst useMockData = () => {\n  console.log('使用硬编码的模拟订单数据');\n  \n  // 创建模拟订单数据\n  const mockOrders = [\n    {\n      orderId: 1,\n      businessId: 1,\n      businessName: '万家饺子（软件园E18店）',\n      businessImg: '/assets/img/BUSINESS/img.png',\n      orderDate: new Date().toLocaleString(),\n      orderTotal: 31,\n      orderState: 5,\n      foodNames: '纯肉鲜肉,玉米鲜肉',\n      foodImgs: '/assets/img/sp01.png,/assets/img/sp01.png',\n      quantities: '1,1'\n    },\n    {\n      orderId: 2,\n      businessId: 2,\n      businessName: '肯德基麦当劳',\n      businessImg: '/assets/img/BUSINESS/img.png',\n      orderDate: new Date(Date.now() - 86400000).toLocaleString(), // 昨天\n      orderTotal: 45,\n      orderState: 5,\n      foodNames: '汉堡,薯条,可乐',\n      foodImgs: '/assets/img/sp01.png,/assets/img/sp01.png,/assets/img/sp01.png',\n      quantities: '1,1,1'\n    }\n  ];\n  \n  // 使用模拟数据\n  orders.value = mockOrders;\n  \n  // 显示提示\n  ElMessage({\n    message: 'API服务不可用，显示模拟订单数据',\n    type: 'warning',\n    duration: 3000\n  });\n};\n\n// 根据选中的标签筛选订单\nconst filteredOrders = computed(() => {\n  if (activeTab.value === 'all') {\n    return orders.value;\n  } else if (activeTab.value === 'inProgress') {\n    // 订单状态：1-已下单/待付款，2-已付款/待接单，3-已接单/配送中\n    return orders.value.filter(order => [1, 2, 3].includes(order.orderState));\n  } else if (activeTab.value === 'toRate') {\n    // 订单状态：5-已完成/待评价\n    return orders.value.filter(order => order.orderState === 5);\n  } else if (activeTab.value === 'refund') {\n    // 订单状态：6-已退款\n    return orders.value.filter(order => order.orderState === 6);\n  }\n  return orders.value;\n});\n\n// 获取食品图片的辅助函数\nconst getFoodImage = (order, index) => {\n  try {\n    // 获取食品图片数组\n    const foodImgs = getArrayFromString(order.foodImgs);\n    console.log(`获取订单 ${order.orderId} 的第 ${index} 个食品图片, 图片数组长度: ${foodImgs.length}`);\n    \n    // 检查索引是否有效\n    if (index >= 0 && index < foodImgs.length) {\n      const imgPath = foodImgs[index];\n      console.log(`食品图片路径: ${imgPath ? (imgPath.length > 50 ? imgPath.substring(0, 50) + '...' : imgPath) : 'null'}`);\n      \n      // 检查是否是Base64编码\n      if (imgPath && imgPath.length > 100) {\n        // 如果已经是完整的Base64字符串\n        if (imgPath.startsWith('data:image')) {\n          console.log('检测到完整的Base64图片');\n          return imgPath;\n        }\n        \n        // 如果是不完整的Base64字符串（没有前缀），添加前缀\n        if (imgPath.startsWith('iVBOR')) {\n          console.log('检测到PNG Base64图片，添加前缀');\n          return `data:image/png;base64,${imgPath}`;\n        }\n        \n        // 检查是否是JPEG的Base64编码\n        if (imgPath.startsWith('/9j/') || imgPath.match(/^[A-Za-z0-9+/=]{100,}$/)) {\n          console.log('检测到JPEG Base64图片，添加前缀');\n          return `data:image/jpeg;base64,${imgPath}`;\n        }\n        \n        // 其他可能的Base64编码，尝试作为PNG\n        if (/^[A-Za-z0-9+/=]{20,}$/.test(imgPath.substring(0, 100))) {\n          console.log('检测到其他类型的Base64图片，尝试作为PNG');\n          return `data:image/png;base64,${imgPath}`;\n        }\n      }\n      \n      // 处理普通图片URL\n      console.log('使用getImageUrl处理普通图片URL');\n      return getImageUrl(imgPath);\n    }\n    \n    // 如果索引无效，返回默认图片\n    console.log('索引无效，返回默认图片');\n    return require('@/assets/img/sp01.png');\n  } catch (error) {\n    console.error('获取食品图片出错:', error, error.stack);\n    return require('@/assets/img/sp01.png');\n  }\n};\n\n// 获取食品数量的辅助函数\nconst getFoodQuantity = (order, index) => {\n  try {\n    // 获取数量数组\n    const quantities = getArrayFromString(order.quantities);\n    \n    // 检查索引是否有效\n    if (index >= 0 && index < quantities.length) {\n      return quantities[index] || '1';\n    }\n    \n    // 如果索引无效，返回默认值\n    return '1';\n  } catch (error) {\n    console.error('获取食品数量出错:', error);\n    return '1';\n  }\n};\n</script>\n\n<style scoped>\n.wrapper {\n  width: 100%;\n  height: 100%;\n  background-color: #f5f5f5;\n  padding-bottom: 20px;\n}\n\n.header {\n  background-color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  z-index: 10;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.search-bottom {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  height: 40px;\n}\n\n.back .icon-back {\n  font-size: 20px;\n  padding: 0 10px;\n}\n\n.search-pt {\n  flex: 1;\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.search-pt input {\n  width: 100%;\n  border: none;\n  background-color: #f5f5f5;\n  padding: 8px 8px 8px 30px;\n  border-radius: 20px;\n  font-size: 14px;\n}\n\n.search-pt .icon-sousuo {\n  position: absolute;\n  left: 10px;\n  font-size: 16px;\n  color: #999;\n}\n\n.box span {\n  padding: 0 10px;\n  font-size: 20px;\n}\n\n.information {\n  display: flex;\n  justify-content: space-around;\n  padding: 10px 0;\n  border-bottom: 1px solid #eee;\n}\n\n.information p {\n  padding: 5px 10px;\n  cursor: pointer;\n  position: relative;\n}\n\n.information p.active {\n  color: #0097ff;\n  font-weight: bold;\n}\n\n.information p.active::after {\n  content: '';\n  position: absolute;\n  bottom: -5px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 20px;\n  height: 3px;\n  background-color: #0097ff;\n  border-radius: 3px;\n}\n\n.body {\n  margin-top: 100px;\n  padding: 10px;\n}\n\n.order-card {\n  background-color: white;\n  border-radius: 10px;\n  margin-bottom: 15px;\n  padding: 15px;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n}\n\n.order-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.business-info {\n  display: flex;\n  align-items: center;\n}\n\n.business-img {\n  width: 50px;\n  height: 50px;\n  border-radius: 5px;\n  object-fit: cover;\n  margin-right: 10px;\n}\n\n.business-details {\n  display: flex;\n  flex-direction: column;\n}\n\n.business-name {\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 5px;\n}\n\n.delivery-price {\n  font-size: 12px;\n  color: #ff6b01;\n  background-color: #fff5e6;\n  padding: 2px 5px;\n  border-radius: 3px;\n  display: inline-block;\n}\n\n.order-price {\n  font-size: 16px;\n  font-weight: bold;\n  color: #333;\n}\n\n.order-content {\n  padding: 10px 0;\n}\n\n.food-list {\n  display: flex;\n  flex-direction: column;\n}\n\n.food-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  padding: 10px;\n}\n\n.food-left {\n  margin-right: 15px;\n}\n\n.food-img {\n  width: 60px;\n  height: 60px;\n  border-radius: 5px;\n  object-fit: cover;\n}\n\n.food-right {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.food-name {\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 8px;\n}\n\n.food-quantity {\n  font-size: 12px;\n  color: #666;\n  background-color: #f0f0f0;\n  padding: 2px 8px;\n  border-radius: 12px;\n  display: inline-block;\n  width: fit-content;\n}\n\n.order-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 10px;\n  border-top: 1px solid #f0f0f0;\n}\n\n.order-date {\n  font-size: 12px;\n  color: #999;\n}\n\n.order-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.reorder-btn, .rating-btn, .rated-btn {\n  border: none;\n  padding: 8px 15px;\n  border-radius: 20px;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.reorder-btn {\n  background-color: #0097ff;\n  color: white;\n}\n\n.rating-btn {\n  background-color: #ff6b01;\n  color: white;\n}\n\n.rated-btn {\n  background-color: #4caf50;\n  color: white;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}