{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\nexport default {\n  __name: 'loginComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const userId = ref('');\n    const password = ref('');\n    const login = async () => {\n      if (!userId.value || !password.value) {\n        ElMessage.error('请输入账号和密码');\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:8080/elm_servlet_war_exploded/login', {\n          userId: userId.value,\n          password: password.value\n        });\n        console.log(\"res\", response);\n        if (response.data) {\n          console.log(response.data);\n          const token = response.data.token;\n          localStorage.setItem('token', token);\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          ElMessage.success('登录成功');\n          router.push('/Index-Component');\n        } else {\n          ElMessage.error(response.data?.message || '登录失败');\n        }\n      } catch (error) {\n        console.error('登录错误:', error);\n        ElMessage.error(error.response?.data?.message || '登录失败，请稍后重试');\n      }\n    };\n    const register = () => {\n      router.push('/Register-component');\n    };\n    const __returned__ = {\n      router,\n      userId,\n      password,\n      login,\n      register,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get ElForm() {\n        return ElForm;\n      },\n      get ElFormItem() {\n        return ElFormItem;\n      },\n      get ElInput() {\n        return ElInput;\n      },\n      get ElButton() {\n        return ElButton;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","ElForm","ElFormItem","ElInput","ElButton","ElMessage","router","userId","password","login","value","error","response","post","console","log","data","token","localStorage","setItem","defaults","headers","common","success","push","message","register"],"sources":["C:/Users/asus/Desktop/vue_elm/vue_elm/src/components/loginComponent.vue"],"sourcesContent":["<template>\r\n  <el-form class=\"wrapper\" @submit.prevent=\"login\">\r\n    <div class=\"header\">\r\n      <img :src=\"require('@/assets/img_1.png')\"\r\n           height=\"70px\"\r\n           width=\"100px\" alt=\"描述\"\r\n      />\r\n      <p>欢迎使用    饿了么</p>\r\n    </div>\r\n    <h>\r\n      <img :src=\"require('@/assets/elm_title.gif')\"\r\n           height=\"100%\"\r\n           width=\"100%\" alt=\"描述\"\r\n      />\r\n    </h>\r\n    <el-form-item label=\"账户:\">\r\n      <el-input v-model=\"userId\" placeholder=\"账户\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"密码：\">\r\n      <el-input type=\"password\" v-model=\"password\" placeholder=\"密码\"></el-input>\r\n    </el-form-item>\r\n    <div class=\"button-box\">\r\n      <el-button type=\"primary\" @click=\"login\" style=\"width: 75%;margin-left: 25px;;margin-bottom: 10px; background-color: #409EFF;\">登录</el-button>\r\n    </div>\r\n    <div class=\"button-box\">\r\n      <el-button @click=\"register\" style=\"width: 75%;margin-left: 25px\">注册</el-button>\r\n    </div>\r\n\r\n  </el-form>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\r\n\r\nconst router = useRouter();\r\nconst userId = ref('');\r\nconst password = ref('');\r\n\r\nconst login = async () => {\r\n  if (!userId.value || !password.value) {\r\n    ElMessage.error('请输入账号和密码');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post('http://localhost:8080/elm_servlet_war_exploded/login', {\r\n      userId: userId.value,\r\n      password: password.value\r\n    });\r\n    console.log(\"res\",response)\r\n    if (response.data) {\r\n      console.log(response.data)\r\n      const token = response.data.token;\r\n      localStorage.setItem('token', token);\r\n\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n      ElMessage.success('登录成功');\r\n      router.push('/Index-Component');\r\n    } else {\r\n      ElMessage.error(response.data?.message || '登录失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('登录错误:', error);\r\n    ElMessage.error(error.response?.data?.message || '登录失败，请稍后重试');\r\n  }\r\n};\r\n\r\nconst register = () => {\r\n  router.push('/Register-component');\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/*顶部样式*/\r\n.button-box button:hover {\r\n  color: #17BAF9; /* 鼠标悬停时的背景色 */\r\n}\r\n\r\n.button-box button:active {\r\n  background-color: #288b52; /* 鼠标点击时的背景色 */\r\n}\r\n\r\n/*logo样式*/\r\n.wrapper .header {\r\n  width: 100%;\r\n  display: flex;\r\n  color: white;\r\n  align-items: center;\r\n  margin-left: 30px;\r\n\r\n\r\n}\r\n\r\n.wrapper .header p {\r\n  font-size: 5vw;\r\n  font-weight: bolder;\r\n  color: #17BAF9;\r\n}\r\n\r\n/*主体部分*/\r\n.wrapper .body .logins div {\r\n  display: flex;\r\n  box-sizing: border-box;\r\n  padding: 4vw 3vw 0 3vw;\r\n  align-items: center;\r\n}\r\n\r\n/* 定义输入框的基本样式 */\r\n.el-input__inner {\r\n  border: none; /* 移除输入框的边框 */\r\n  border-bottom: 2px solid #dcdfe6; /* 设置底部边框 */\r\n  border-radius: 0; /* 移除圆角 */\r\n  transition: border-color 0.3s; /* 平滑过渡效果 */\r\n}\r\n\r\n/* 定义输入框的 hover 状态 */\r\n.el-input__inner:hover {\r\n  border-color: #409EFF; /* 鼠标悬停时的边框颜色 */\r\n}\r\n\r\n/* 定义输入框的 focus 状态 */\r\n.el-input__inner:focus {\r\n  border-color: #409EFF; /* 输入框聚焦时的边框颜色 */\r\n  box-shadow: 0 0 5px rgba(64, 158, 255, 0.5); /* 添加阴影效果 */\r\n}\r\n\r\n.wrapper .body .logins div .content input {\r\n  border: none;\r\n  outline: none;\r\n  height: 6vw;\r\n  background-color: white;\r\n}\r\n\r\n.wrapper .body .button-box button {\r\n  font-size: 5vw;\r\n  width: 100%;\r\n  font-weight: 700;\r\n  color: white;\r\n  background-color: #38ca73;\r\n  border: none;\r\n  border-radius: 15px;\r\n  height: 10vw;\r\n}\r\n\r\n\r\n</style>\r\n"],"mappings":";AAgCA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,cAAc;;;;;;;IAE/E,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;IAC1B,MAAMO,MAAM,GAAGT,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMU,QAAQ,GAAGV,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMW,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI,CAACF,MAAM,CAACG,KAAK,IAAI,CAACF,QAAQ,CAACE,KAAK,EAAE;QACpCL,SAAS,CAACM,KAAK,CAAC,UAAU,CAAC;QAC3B;MACF;MAEA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,sDAAsD,EAAE;UACxFN,MAAM,EAAEA,MAAM,CAACG,KAAK;UACpBF,QAAQ,EAAEA,QAAQ,CAACE;QACrB,CAAC,CAAC;QACFI,OAAO,CAACC,GAAG,CAAC,KAAK,EAACH,QAAQ,CAAC;QAC3B,IAAIA,QAAQ,CAACI,IAAI,EAAE;UACjBF,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;UAC1B,MAAMC,KAAK,GAAGL,QAAQ,CAACI,IAAI,CAACC,KAAK;UACjCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;UAEpClB,KAAK,CAACqB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;UAElEZ,SAAS,CAACkB,OAAO,CAAC,MAAM,CAAC;UACzBjB,MAAM,CAACkB,IAAI,CAAC,kBAAkB,CAAC;QACjC,CAAC,MAAM;UACLnB,SAAS,CAACM,KAAK,CAACC,QAAQ,CAACI,IAAI,EAAES,OAAO,IAAI,MAAM,CAAC;QACnD;MACF,CAAC,CAAC,OAAOd,KAAK,EAAE;QACdG,OAAO,CAACH,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BN,SAAS,CAACM,KAAK,CAACA,KAAK,CAACC,QAAQ,EAAEI,IAAI,EAAES,OAAO,IAAI,YAAY,CAAC;MAChE;IACF,CAAC;IAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACrBpB,MAAM,CAACkB,IAAI,CAAC,qBAAqB,CAAC;IACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}