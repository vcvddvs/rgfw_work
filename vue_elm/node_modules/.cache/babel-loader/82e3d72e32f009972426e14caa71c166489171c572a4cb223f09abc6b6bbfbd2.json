{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nimport router from \"@/router\";\nexport default {\n  __name: 'updataComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const userId = ref(route.params.userId);\n    // 确保 userId 是当前用户的 ID\n    const address = ref({});\n    console.log(userId.value);\n    onMounted(async () => {\n      // 从 localStorage\n      const selectedAddress = JSON.parse(localStorage.getItem('selectedAddressForEdit'));\n      if (selectedAddress) {\n        address.value = selectedAddress;\n      } else {\n        address.value = {\n          contactName: '',\n          contactSex: 1,\n          contactTel: '',\n          address: '',\n          userId: userId.value // 确保设置了 userId\n        };\n      }\n    });\n    const addAddress = async () => {\n      try {\n        // 确保发送请求时 address 对象包含 userId\n        delete address.value.daId;\n        address.value.userId = userId.value; // 确保这里正确设置了 userId\n        console.log(address.value); // 确保这里打印出了包含 userId 的 address 对象\n        const response = await axios.post('http://localhost:8080/elm_servlet_war_exploded/api/deliveryaddresses', address.value);\n        alert('地址添加成功');\n        router.back(); // 返回上一页\n        return response.data;\n      } catch (error) {\n        console.error('添加地址失败:', error);\n        alert('地址添加失败');\n        return false;\n      }\n    };\n    const __returned__ = {\n      route,\n      userId,\n      address,\n      addAddress,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get axios() {\n        return axios;\n      },\n      get router() {\n        return router;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","axios","router","route","userId","params","address","console","log","value","selectedAddress","JSON","parse","localStorage","getItem","contactName","contactSex","contactTel","addAddress","daId","response","post","alert","back","data","error"],"sources":["C:/Users/asus/Desktop/vue_elm/vue_elm/src/components/updataComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-address\">\r\n    <h2>修改地址</h2>\r\n    <!-- 表单用于编辑地址 -->\r\n    <el-form ref=\"editAddressForm\" :model=\"address\" label-width=\"100px\">\r\n      <el-form-item label=\"地址\">\r\n        <el-input v-model=\"address.address\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"联系人姓名\">\r\n        <el-input v-model=\"address.contactName\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"联系电话\">\r\n        <el-input v-model=\"address.contactTel\"></el-input>\r\n      </el-form-item>\r\n      <el-button type=\"primary\" @click=\"addAddress\">保存</el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref, onMounted} from 'vue';\r\nimport {useRoute} from 'vue-router';\r\nimport axios from 'axios';\r\nimport router from \"@/router\";\r\n\r\nconst route = useRoute();\r\nconst userId = ref(route.params.userId);\r\n// 确保 userId 是当前用户的 ID\r\nconst address = ref({});\r\nconsole.log(userId.value);\r\nonMounted(async () => {\r\n  // 从 localStorage\r\n  const selectedAddress = JSON.parse(localStorage.getItem('selectedAddressForEdit'));\r\n  if (selectedAddress) {\r\n    address.value = selectedAddress;\r\n  } else {\r\n    address.value = {\r\n      contactName: '',\r\n      contactSex: 1,\r\n      contactTel: '',\r\n      address: '',\r\n      userId: userId.value // 确保设置了 userId\r\n    };\r\n  }\r\n});\r\nconst addAddress = async () => {\r\n  try {\r\n    // 确保发送请求时 address 对象包含 userId\r\n    delete address.value.daId;\r\n    address.value.userId = userId.value; // 确保这里正确设置了 userId\r\n    console.log(address.value); // 确保这里打印出了包含 userId 的 address 对象\r\n    const response = await axios.post('http://localhost:8080/elm_servlet_war_exploded/api/deliveryaddresses', address.value);\r\n    alert('地址添加成功');\r\n    router.back(); // 返回上一页\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('添加地址失败:', error);\r\n    alert('地址添加失败');\r\n    return false;\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.edit-address {\r\n  max-width: 400px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"AAoBA,SAAQA,GAAG,EAAEC,SAAS,QAAO,KAAK;AAClC,SAAQC,QAAQ,QAAO,YAAY;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;;;;;;;IAE7B,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,MAAMI,MAAM,GAAGN,GAAG,CAACK,KAAK,CAACE,MAAM,CAACD,MAAM,CAAC;IACvC;IACA,MAAME,OAAO,GAAGR,GAAG,CAAC,CAAC,CAAC,CAAC;IACvBS,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACK,KAAK,CAAC;IACzBV,SAAS,CAAC,YAAY;MACpB;MACA,MAAMW,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,wBAAwB,CAAC,CAAC;MAClF,IAAIJ,eAAe,EAAE;QACnBJ,OAAO,CAACG,KAAK,GAAGC,eAAe;MACjC,CAAC,MAAM;QACLJ,OAAO,CAACG,KAAK,GAAG;UACdM,WAAW,EAAE,EAAE;UACfC,UAAU,EAAE,CAAC;UACbC,UAAU,EAAE,EAAE;UACdX,OAAO,EAAE,EAAE;UACXF,MAAM,EAAEA,MAAM,CAACK,KAAK,CAAC;QACvB,CAAC;MACH;IACF,CAAC,CAAC;IACF,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,OAAOZ,OAAO,CAACG,KAAK,CAACU,IAAI;QACzBb,OAAO,CAACG,KAAK,CAACL,MAAM,GAAGA,MAAM,CAACK,KAAK,CAAC,CAAC;QACrCF,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC;QAC5B,MAAMW,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,sEAAsE,EAAEf,OAAO,CAACG,KAAK,CAAC;QACxHa,KAAK,CAAC,QAAQ,CAAC;QACfpB,MAAM,CAACqB,IAAI,CAAC,CAAC,CAAC,CAAC;QACf,OAAOH,QAAQ,CAACI,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdlB,OAAO,CAACkB,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BH,KAAK,CAAC,QAAQ,CAAC;QACf,OAAO,KAAK;MACd;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}