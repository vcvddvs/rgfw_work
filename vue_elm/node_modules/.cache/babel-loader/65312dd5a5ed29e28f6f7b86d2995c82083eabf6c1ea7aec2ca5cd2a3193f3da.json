{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nimport router from \"@/router\";\nexport default {\n  __name: 'OrderComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const businessName = ref(route.params.businessName || '默认店铺名称');\n    const cart = ref({});\n    const deliveryAddresses = ref([]);\n    const showAddresses = ref(false);\n    const businessId = ref(route.params.businessId || 0);\n\n    // 从 localStorage 获取选中的地址\n    const selectedAddress = ref(JSON.parse(localStorage.getItem('selectedAddress') || '{}').address || '云南大学楸苑1栋');\n    const orderInfo = JSON.parse(localStorage.getItem('orderInfo') || '{}');\n    if (orderInfo.cart) {\n      cart.value = orderInfo.cart;\n      businessId.value = orderInfo.businessId;\n      businessName.value = orderInfo.businessName;\n    }\n\n    // 监听路由变化，更新订单信息\n    watch(route, newRoute => {\n      if (newRoute.name === 'Order') {\n        const newOrderInfo = JSON.parse(localStorage.getItem('orderInfo') || '{}');\n        if (newOrderInfo.cart) {\n          cart.value = newOrderInfo.cart;\n          businessId.value = newOrderInfo.businessId;\n          businessName.value = newOrderInfo.businessName;\n        }\n      }\n    });\n    if (route.query.cart) {\n      try {\n        cart.value = JSON.parse(route.query.cart);\n      } catch (error) {\n        console.error('解析购物车数据失败:', error);\n        cart.value = {}; // 确保在解析失败时设置为空对象\n      }\n    }\n    const goToAddressPage = () => {\n      // 为了测试，我们使用固定的userId，这个userId在数据库中存在地址记录\n      // 从截图可以看到，数据库中有地址记录的userId有: 1111111111, 1234567111, 1234567222, 15758096290\n      const testUserId = '15758096290'; // 使用数据库中存在的userId\n\n      const userId = localStorage.getItem('userId'); // 从localStorage获取userId\n      if (!userId) {\n        console.error('用户未登录');\n        return;\n      }\n      console.log('跳转到地址页面，使用userId:', userId);\n      console.log('提示: 如果没有显示地址，请尝试使用数据库中存在的userId:', testUserId);\n\n      // 导航到 address 组件，并传递 userId\n      router.push({\n        name: 'Address',\n        params: {\n          userId: userId,\n          // 正常情况下使用登录用户的ID\n          // userId: testUserId, // 测试时可以使用这行替换上面的行\n          businessId: businessId.value,\n          businessName: businessName.value\n        }\n      });\n    };\n    onMounted(() => {\n      showAddresses.value = false;\n    });\n    const foodItems = computed(() => {\n      return Object.values(cart.value).map(item => {\n        // 处理商品图片\n        let photo = item.photo;\n\n        // 如果没有photo字段或photo字段为空\n        if (!photo) {\n          // 尝试从本地资源加载默认图片\n          photo = require('@/assets/img/BUSINESS/menus/img.png');\n        }\n        return {\n          title: item.foodName || '未命名菜品',\n          price: item.price,\n          description: item.description || '',\n          // 确保有默认值\n          quantity: item.quantity,\n          photo: photo // 使用处理后的图片\n        };\n      });\n    });\n    const totalAmount = computed(() => {\n      return Object.values(cart.value).reduce((sum, item) => sum + item.quantity * item.price, 0);\n    });\n    const submitOrder = () => {\n      if (Object.keys(cart.value).length === 0) {\n        alert('购物车为空，请先添加商品！');\n        return;\n      }\n      const userId = localStorage.getItem('userId');\n      if (!userId) {\n        alert('用户未登录，请先登录！');\n        return;\n      }\n\n      // 获取配送地址ID\n      const daIdSelected = orderInfo.selectedDaId || 1; // 使用选中的daId或默认值1\n\n      // 创建订单对象\n      const order = {\n        userId: userId,\n        businessId: parseInt(businessId.value),\n        // 确保是数字类型\n        orderDate: new Date().toISOString().slice(0, 10),\n        // 订单日期\n        orderTotal: totalAmount.value,\n        // 订单总价\n        daId: daIdSelected,\n        orderState: 0 // 未支付\n      };\n\n      // 创建订单明细，确保包含必要的字段\n      const details = Object.values(cart.value).map(item => ({\n        foodId: parseInt(item.foodId),\n        // 确保是数字类型\n        quantity: parseInt(item.quantity),\n        // 确保是数字类型\n        price: parseFloat(item.price) // 添加价格字段，确保是数字类型\n      }));\n      console.log(\"准备提交订单数据:\", {\n        order,\n        details\n      });\n\n      // 使用微服务API接口\n      const apiUrl = 'http://localhost:8090/orders';\n\n      // 创建订单请求对象\n      const orderRequest = {\n        order,\n        details\n      };\n\n      // 发送请求\n      fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}` // 添加认证头\n        },\n        body: JSON.stringify(orderRequest)\n      }).then(response => {\n        if (!response.ok) {\n          return response.json().then(errorData => {\n            throw new Error(`服务器错误 (${response.status}): ${errorData.msg || '未知错误'}`);\n          });\n        }\n        return response.json();\n      }).then(data => {\n        console.log('订单提交成功:', data);\n        alert('订单创建成功！');\n\n        // 跳转到支付页面\n        router.push({\n          name: 'Payment',\n          query: {\n            totalAmount: totalAmount.value,\n            businessName: businessName.value,\n            orderId: data.data // 如果后端返回了orderId，传递给支付页面\n          }\n        });\n      }).catch(error => {\n        console.error('订单提交失败:', error);\n        alert(`订单创建失败: ${error.message}`);\n      });\n    };\n    const goBack = () => {\n      // 返回到商家页面，需要带上完整参数\n      router.push({\n        name: 'BusinessList2',\n        params: {\n          businessId: businessId.value,\n          businessName: businessName.value,\n          businessImg: orderInfo.businessImg || 'default.jpg' // 使用存储的商家图片或默认图片\n        }\n      });\n    };\n    const __returned__ = {\n      route,\n      businessName,\n      cart,\n      deliveryAddresses,\n      showAddresses,\n      businessId,\n      selectedAddress,\n      orderInfo,\n      goToAddressPage,\n      foodItems,\n      totalAmount,\n      submitOrder,\n      goBack,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      get useRoute() {\n        return useRoute;\n      },\n      get router() {\n        return router;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","useRoute","router","route","businessName","params","cart","deliveryAddresses","showAddresses","businessId","selectedAddress","JSON","parse","localStorage","getItem","address","orderInfo","value","newRoute","name","newOrderInfo","query","error","console","goToAddressPage","testUserId","userId","log","push","foodItems","Object","values","map","item","photo","require","title","foodName","price","description","quantity","totalAmount","reduce","sum","submitOrder","keys","length","alert","daIdSelected","selectedDaId","order","parseInt","orderDate","Date","toISOString","slice","orderTotal","daId","orderState","details","foodId","parseFloat","apiUrl","orderRequest","fetch","method","headers","body","stringify","then","response","ok","json","errorData","Error","status","msg","data","orderId","catch","message","goBack","businessImg"],"sources":["D:/back_elm/vue_elm/src/components/OrderComponent.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <header class=\"header\">\n      <div class=\"title\">\n        <div class=\"p1\">\n                    <!-- 使用 Element Plus 的返回图标 -->\n                    <el-icon @click=\"goBack\" style=\"background-color:#9F9F9F\">\n                      <img :src=\"require('@/assets/img_10.png')\" alt=\"\">\n                    </el-icon>\n        </div>\n        <div class=\"p2\">\n          <p>确认订单</p>\n        </div>\n      </div>\n      <div class=\"banner\">\n        <span class=\"iconfont icon-guangbogonggao\" style=\"padding-left: 2vw\"></span>\n        <p style=\"padding-left: 2vw\">温馨提示： 请适量点餐,避免浪费</p>\n      </div>\n      <div class=\"location\">\n        <div class=\"location-text\">\n          <p>地址: {{ selectedAddress }}</p>\n          <img :src=\"require('@/assets/img/orders/img.png')\"\n               height=\"23\"\n               width=\"17\" alt=\"描述\"\n               @click=\"goToAddressPage \" />\n        </div>\n        <!-- 显示地址列表 -->\n        <div v-if=\"showAddresses\" class=\"address-list\">\n          <div\n              v-for=\"address in deliveryAddresses\"\n              :key=\"address.daId\"\n              class=\"address-item\"\n              @click=\"selectAddress(address)\"\n          >\n            {{  address.address }}\n          </div>\n        </div>\n        <div class=\"location-speed\">\n          <p>立即送出</p>\n          <div class=\"location-speed-to\">\n            <p>预计13:40送达</p>\n            <img :src=\"require('@/assets/img/orders/img.png')\" height=\"23\" width=\"17\" />\n          </div>\n        </div>\n      </div>\n    </header>\n    <main class=\"body\">\n      <div class=\"body-title\">\n        <div class=\"title1\">\n          <p>{{ businessName }}</p>\n\n        </div>\n        <div class=\"title2\">\n          <p>蜂鸟准时达</p>\n        </div>\n      </div>\n      <div class=\"body-text\">\n        <div v-for=\"item in foodItems\" :key=\"item.title\" class=\"food\">\n          <div class=\"food-left\">\n            <img :src=\"item.photo\" alt=\"商品图片\" />\n          </div>\n          <div class=\"food-right\">\n            <div class=\"food-right-title\">\n              <div class=\"title1\">\n                <p>{{ item.title }}</p>\n              </div>\n              <div class=\"price\">\n                <p>&#165;{{ item.price }}</p>\n              </div>\n            </div>\n            <div class=\"name\">\n              <p>{{ item.description }}</p>\n            </div>\n            <div class=\"number\">\n              <p>x {{ item.quantity }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- 其他费用和总计 -->\n      </div>\n    </main>\n    <footer class=\"footer\">\n      <div class=\"foot-left\">\n        <div class=\"sum-price\">\n          <p1>合计</p1>\n          <p2>{{ totalAmount.toFixed(2) }}</p2> <!-- 格式化金额显示 -->\n        </div>\n      </div>\n      <div class=\"foot-right\" @click=\"submitOrder\">\n        <p>提交订单</p>\n      </div>\n    </footer>\n  </div>\n</template>\n\n\n\n<script setup>\nimport {ref, computed, onMounted, watch} from 'vue';\nimport { useRoute } from 'vue-router';\nimport router from \"@/router\";\n\nconst route = useRoute();\nconst businessName = ref(route.params.businessName || '默认店铺名称');\nconst cart = ref({});\nconst deliveryAddresses = ref([]);\nconst showAddresses = ref(false);\nconst businessId = ref(route.params.businessId || 0);\n\n// 从 localStorage 获取选中的地址\nconst selectedAddress = ref(JSON.parse(localStorage.getItem('selectedAddress') || '{}').address || '云南大学楸苑1栋');\n\nconst orderInfo = JSON.parse(localStorage.getItem('orderInfo') || '{}');\nif (orderInfo.cart) {\n  cart.value = orderInfo.cart;\n  businessId.value = orderInfo.businessId;\n  businessName.value = orderInfo.businessName;\n}\n\n// 监听路由变化，更新订单信息\nwatch(route, (newRoute) => {\n  if (newRoute.name === 'Order') {\n    const newOrderInfo = JSON.parse(localStorage.getItem('orderInfo') || '{}');\n    if (newOrderInfo.cart) {\n      cart.value = newOrderInfo.cart;\n      businessId.value = newOrderInfo.businessId;\n      businessName.value = newOrderInfo.businessName;\n    }\n  }\n});\n\nif (route.query.cart) {\n  try {\n    cart.value = JSON.parse(route.query.cart);\n  } catch (error) {\n    console.error('解析购物车数据失败:', error);\n    cart.value = {}; // 确保在解析失败时设置为空对象\n  }\n}\n\nconst goToAddressPage = () => {\n  // 为了测试，我们使用固定的userId，这个userId在数据库中存在地址记录\n  // 从截图可以看到，数据库中有地址记录的userId有: 1111111111, 1234567111, 1234567222, 15758096290\n  const testUserId = '15758096290'; // 使用数据库中存在的userId\n  \n  const userId = localStorage.getItem('userId'); // 从localStorage获取userId\n  if (!userId) {\n    console.error('用户未登录');\n    return;\n  }\n  \n  console.log('跳转到地址页面，使用userId:', userId);\n  console.log('提示: 如果没有显示地址，请尝试使用数据库中存在的userId:', testUserId);\n  \n  // 导航到 address 组件，并传递 userId\n  router.push({\n    name: 'Address',\n    params: { \n      userId: userId,  // 正常情况下使用登录用户的ID\n      // userId: testUserId, // 测试时可以使用这行替换上面的行\n      businessId: businessId.value, \n      businessName: businessName.value \n    }\n  });\n};\n\nonMounted(() => {\n  showAddresses.value = false;\n});\n\nconst foodItems = computed(() => {\n  return Object.values(cart.value).map(item => {\n    // 处理商品图片\n    let photo = item.photo;\n    \n    // 如果没有photo字段或photo字段为空\n    if (!photo) {\n      // 尝试从本地资源加载默认图片\n      photo = require('@/assets/img/BUSINESS/menus/img.png');\n    }\n    \n    return {\n      title: item.foodName || '未命名菜品',\n      price: item.price,\n      description: item.description || '', // 确保有默认值\n      quantity: item.quantity,\n      photo: photo // 使用处理后的图片\n    };\n  });\n});\n\nconst totalAmount = computed(() => {\n  return Object.values(cart.value).reduce((sum, item) => sum + item.quantity * item.price, 0);\n});\n\nconst submitOrder = () => {\n  if (Object.keys(cart.value).length === 0) {\n    alert('购物车为空，请先添加商品！');\n    return;\n  }\n\n  const userId = localStorage.getItem('userId');\n  if (!userId) {\n    alert('用户未登录，请先登录！');\n    return;\n  }\n\n  // 获取配送地址ID\n  const daIdSelected = orderInfo.selectedDaId || 1; // 使用选中的daId或默认值1\n  \n  // 创建订单对象\n  const order = {\n    userId: userId,\n    businessId: parseInt(businessId.value), // 确保是数字类型\n    orderDate: new Date().toISOString().slice(0, 10), // 订单日期\n    orderTotal: totalAmount.value, // 订单总价\n    daId: daIdSelected,\n    orderState: 0 // 未支付\n  };\n\n  // 创建订单明细，确保包含必要的字段\n  const details = Object.values(cart.value).map(item => ({\n    foodId: parseInt(item.foodId), // 确保是数字类型\n    quantity: parseInt(item.quantity), // 确保是数字类型\n    price: parseFloat(item.price) // 添加价格字段，确保是数字类型\n  }));\n\n  console.log(\"准备提交订单数据:\", { order, details });\n\n  // 使用微服务API接口\n  const apiUrl = 'http://localhost:8090/orders';\n  \n  // 创建订单请求对象\n  const orderRequest = { order, details };\n\n  // 发送请求\n  fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('token')}` // 添加认证头\n    },\n    body: JSON.stringify(orderRequest)\n  })\n  .then(response => {\n    if (!response.ok) {\n      return response.json().then(errorData => {\n        throw new Error(`服务器错误 (${response.status}): ${errorData.msg || '未知错误'}`);\n      });\n    }\n    return response.json();\n  })\n  .then(data => {\n    console.log('订单提交成功:', data);\n    alert('订单创建成功！');\n    \n    // 跳转到支付页面\n    router.push({\n      name: 'Payment',\n      query: { \n        totalAmount: totalAmount.value, \n        businessName: businessName.value,\n        orderId: data.data // 如果后端返回了orderId，传递给支付页面\n      }\n    });\n  })\n  .catch(error => {\n    console.error('订单提交失败:', error);\n    alert(`订单创建失败: ${error.message}`);\n  });\n};\n\nconst goBack = () => {\n  // 返回到商家页面，需要带上完整参数\n  router.push({\n    name: 'BusinessList2', \n    params: {\n      businessId: businessId.value,\n      businessName: businessName.value,\n      businessImg: orderInfo.businessImg || 'default.jpg' // 使用存储的商家图片或默认图片\n    }\n  });\n};\n</script>\n\n\n\n<style scoped>\n/* 添加 CSS 样式 */\n\n.wrapper {\n  width: 100%;\n  height: 100%;\n}\n\n.wrapper .header .title {\n  display: flex;\n  align-items: center;\n  background-color: red;\n  text-align: center;\n  height: 18vw;\n\n\n}\n\n.wrapper .header .title .p1 {\n  flex: 1;\n  color: white;\n}\n\n.el-icon {\n  cursor: pointer; /* 添加鼠标手型图标 */\n  font-size: 1.5em; /* 调整图标大小 */\n  color: white; /* 设置图标颜色 */\n}\n\n.wrapper .header .title .p2 {\n  flex: 9;\n  color: white;\n  font-size: 4.5vw;\n  padding-right: 6vw;\n}\n\n.wrapper .header .banner{\n  display: flex;\n  font-size: 2.9vw;\n  align-items: center;\n  border: none;\n  background-color: #ffe99a;\n  color: coral;\n  border-radius: 10px;\n  width: 93%;\n  height: 33px;\n  margin: 0 auto;\n  margin-top: 2vw;\n\n}\n\n.wrapper .header .location{\n  border: 1px solid red;\n  width: 93%;\n  margin: 0 auto;\n  margin-top: 2vw;\n\n  border-radius: 10px;\n}\n\n.address-list {\n  position: absolute;\n  background-color: white;\n  border: 1px solid #ccc;\n  width:85%;\n  z-index: 100;\n  margin-top: 5px;\n  margin-left: 5px;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n}\n\n.address-item {\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n  cursor: pointer;\n}\n\n.address-item:last-child {\n  border-bottom: none;\n}\n\n.wrapper .header .location-text{\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  font-size: 5vw;\n  font-weight: bolder;\n\n  margin: 0 2vw 0 2vw;\n}\n\n.wrapper .header .location-speed{\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  font-weight: bolder;\n\n  margin: 0 2vw 0 2vw;\n}\n\n.wrapper .header .location-speed .location-speed-to{\n  display: flex;\n  align-items: center;\n  color: red;\n}\n\n/*主体部分*/\n.wrapper .body{\n  border: 1px solid red;\n  width: 93%;\n  margin: 0 auto;\n  margin-top: 2vw;\n  border-radius: 10px;\n}\n\n.wrapper .body .body-title{\n  display: flex;\n  justify-content: space-between;\n  padding: 0 2vw 0 2vw;\n  align-items: center;\n}\n\n.wrapper .body .body-title .title1{\n  color: #999999;\n  font-size: 4vw;\n}\n\n.wrapper .body .body-title .title2 p{\n  color: #17BAF9;\n  border: 1px solid #b3d4fc;\n  border-radius: 4px;\n  font-size: 3vw;\n  padding: 0.5vw 0.5vw 0.5vw 0.5vw;\n}\n\n\n.wrapper .body .body-text .food {\n\n  display: flex;\n  align-items: center;\n\n}\n\n.wrapper .body .body-text .food .food-left{\n  flex: 2;\n}\n\n.wrapper .body .body-text .food .food-left img{\n  width: 75px;\n\n}\n\n.wrapper .body .body-text .food .food-right{\n  flex: 8;\n}\n.wrapper .body .body-text .food .food-right .food-right-title{\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 20px;\n  font-size: 3.6vw;\n  font-weight: bolder;\n  padding: 0 1vw 0 1vw;\n}\n\n.wrapper .body .body-text .food .food-right .name{\n  font-size: 2.8vw;\n  color: #9F9F9F;\n}\n\n.wrapper .body .body-text .food .food-right .number{\n  height: 18px;\n  color: #9F9F9F;\n}\n\n.wrapper .body .db-price{\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 3.5vw;\n  padding: 0 2vw 0 2vw;\n  margin-bottom: 1vw;\n}\n\n.wrapper .body .ps-price{\n  padding: 0 2vw 0 2vw;\n}\n.wrapper .body .ps-price .price1{\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 10px;\n}\n\n.wrapper .body .ps-price .price1 .j-psf{\n  display: flex;\n  align-items: center;\n  font-size: 3.5vw;\n}\n\n.wrapper .body .ps-price .price1 .j-psf img{\n  width: 15px;\n  height: 15px;\n}\n\n.wrapper .body .ps-price .price2{\n  font-size: 3vw;\n  height: 10px;\n  color: red;\n}\n\n.wrapper .body .red-bag{\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 2vw 0 2vw;\n}\n\n.wrapper .body .red-bag-tp{\n  display: flex;\n  align-items: center;\n  font-size: 3.5vw;\n}\n\n.wrapper .body .red-bag-tp img{\n  width: 15px;\n  height: 15px;\n}\n\n.wrapper .body .red-bag-kx{\n  display: flex;\n  align-items: center;\n  font-size: 3vw;\n  color: #ff4a25;\n  border: none;\n  border-radius: 10px;\n  background-color: #e7e1cd;\n}\n\n.wrapper .body .red-bag-kx p{\n  margin: 0 1vw 0 2vw;\n}\n\n.wrapper .body .xd-fd{\n  display: flex;\n  align-items: center;\n  font-size: 3.5vw;\n  justify-content: space-between;\n  padding: 0 2vw 0 2vw;\n}\n\n.wrapper .body .xd-fd p{\n  color: #ff4a25;\n}\n\n.wrapper .body .xd-fd .fd-tp{\n  display: flex;\n  align-items: center;\n}\n\n.wrapper .body .xd-fd .fd-tp img{\n  width: 15px;\n  height: 15px;\n}\n\n.wrapper .body .yh-sm{\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 3vw 2vw 0 2vw;\n  border-top: 1px solid #9F9F9F;\n\n}\n\n.wrapper .body .yh-sm p1{\n  font-size: 3vw;\n  color: #9F9F9F;\n}\n\n.wrapper .body .yh-xj{\n  display: flex;\n  align-items: center;\n}\n\n.wrapper .body .yh-xj p2{\n  font-size: 4vw;\n}\n\n.wrapper .body .yh-xj p3{\n  font-size: 6.5vw;\n  font-weight: bolder;\n}\n/*底部说明*/\n.wrapper .footer {\n  width: 100%;\n  height: 14vw;\n  border-top: solid 1px #DDD;\n  background-color: white;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n\n  display: flex;\n  align-items: center;\n}\n\n.wrapper .footer .foot-left{\n  flex: 7;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.wrapper .footer .foot-left .sum-price p1{\n  font-size: 2.7vw;\n  font-weight: bolder;\n}\n\n.wrapper .footer .foot-left .sum-price p2{\n  font-size: 6vw;\n  font-weight: bolder;\n}\n\n\n.wrapper .footer .foot-right{\n  flex:3;\n  display: flex;\n  justify-content: center;\n}\n.wrapper .footer .foot-right p{\n  border: 1px solid red;\n  padding: 2vw 4vw 2vw 4vw;\n  background-color: red;\n  color: white;\n  border-radius: 15px;\n  font-size: 3.5vw;\n  font-weight: bolder;\n\n}\n\n\n\n.wrapper .body .back-bored{\n  margin-top: 3vw;\n}\n</style>\n"],"mappings":";AAmGA,SAAQA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,QAAO,KAAK;AACnD,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,MAAM,MAAM,UAAU;;;;;;;IAE7B,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,YAAY,GAAGP,GAAG,CAACM,KAAK,CAACE,MAAM,CAACD,YAAY,IAAI,QAAQ,CAAC;IAC/D,MAAME,IAAI,GAAGT,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,MAAMU,iBAAiB,GAAGV,GAAG,CAAC,EAAE,CAAC;IACjC,MAAMW,aAAa,GAAGX,GAAG,CAAC,KAAK,CAAC;IAChC,MAAMY,UAAU,GAAGZ,GAAG,CAACM,KAAK,CAACE,MAAM,CAACI,UAAU,IAAI,CAAC,CAAC;;IAEpD;IACA,MAAMC,eAAe,GAAGb,GAAG,CAACc,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,CAACC,OAAO,IAAI,UAAU,CAAC;IAE9G,MAAMC,SAAS,GAAGL,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;IACvE,IAAIE,SAAS,CAACV,IAAI,EAAE;MAClBA,IAAI,CAACW,KAAK,GAAGD,SAAS,CAACV,IAAI;MAC3BG,UAAU,CAACQ,KAAK,GAAGD,SAAS,CAACP,UAAU;MACvCL,YAAY,CAACa,KAAK,GAAGD,SAAS,CAACZ,YAAY;IAC7C;;IAEA;IACAJ,KAAK,CAACG,KAAK,EAAGe,QAAQ,IAAK;MACzB,IAAIA,QAAQ,CAACC,IAAI,KAAK,OAAO,EAAE;QAC7B,MAAMC,YAAY,GAAGT,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;QAC1E,IAAIM,YAAY,CAACd,IAAI,EAAE;UACrBA,IAAI,CAACW,KAAK,GAAGG,YAAY,CAACd,IAAI;UAC9BG,UAAU,CAACQ,KAAK,GAAGG,YAAY,CAACX,UAAU;UAC1CL,YAAY,CAACa,KAAK,GAAGG,YAAY,CAAChB,YAAY;QAChD;MACF;IACF,CAAC,CAAC;IAEF,IAAID,KAAK,CAACkB,KAAK,CAACf,IAAI,EAAE;MACpB,IAAI;QACFA,IAAI,CAACW,KAAK,GAAGN,IAAI,CAACC,KAAK,CAACT,KAAK,CAACkB,KAAK,CAACf,IAAI,CAAC;MAC3C,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;QAClChB,IAAI,CAACW,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;MACnB;IACF;IAEA,MAAMO,eAAe,GAAGA,CAAA,KAAM;MAC5B;MACA;MACA,MAAMC,UAAU,GAAG,aAAa,CAAC,CAAC;;MAElC,MAAMC,MAAM,GAAGb,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC/C,IAAI,CAACY,MAAM,EAAE;QACXH,OAAO,CAACD,KAAK,CAAC,OAAO,CAAC;QACtB;MACF;MAEAC,OAAO,CAACI,GAAG,CAAC,mBAAmB,EAAED,MAAM,CAAC;MACxCH,OAAO,CAACI,GAAG,CAAC,kCAAkC,EAAEF,UAAU,CAAC;;MAE3D;MACAvB,MAAM,CAAC0B,IAAI,CAAC;QACVT,IAAI,EAAE,SAAS;QACfd,MAAM,EAAE;UACNqB,MAAM,EAAEA,MAAM;UAAG;UACjB;UACAjB,UAAU,EAAEA,UAAU,CAACQ,KAAK;UAC5Bb,YAAY,EAAEA,YAAY,CAACa;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC;IAEDlB,SAAS,CAAC,MAAM;MACdS,aAAa,CAACS,KAAK,GAAG,KAAK;IAC7B,CAAC,CAAC;IAEF,MAAMY,SAAS,GAAG/B,QAAQ,CAAC,MAAM;MAC/B,OAAOgC,MAAM,CAACC,MAAM,CAACzB,IAAI,CAACW,KAAK,CAAC,CAACe,GAAG,CAACC,IAAI,IAAI;QAC3C;QACA,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;;QAEtB;QACA,IAAI,CAACA,KAAK,EAAE;UACV;UACAA,KAAK,GAAGC,OAAO,CAAC,qCAAqC,CAAC;QACxD;QAEA,OAAO;UACLC,KAAK,EAAEH,IAAI,CAACI,QAAQ,IAAI,OAAO;UAC/BC,KAAK,EAAEL,IAAI,CAACK,KAAK;UACjBC,WAAW,EAAEN,IAAI,CAACM,WAAW,IAAI,EAAE;UAAE;UACrCC,QAAQ,EAAEP,IAAI,CAACO,QAAQ;UACvBN,KAAK,EAAEA,KAAK,CAAC;QACf,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMO,WAAW,GAAG3C,QAAQ,CAAC,MAAM;MACjC,OAAOgC,MAAM,CAACC,MAAM,CAACzB,IAAI,CAACW,KAAK,CAAC,CAACyB,MAAM,CAAC,CAACC,GAAG,EAAEV,IAAI,KAAKU,GAAG,GAAGV,IAAI,CAACO,QAAQ,GAAGP,IAAI,CAACK,KAAK,EAAE,CAAC,CAAC;IAC7F,CAAC,CAAC;IAEF,MAAMM,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAId,MAAM,CAACe,IAAI,CAACvC,IAAI,CAACW,KAAK,CAAC,CAAC6B,MAAM,KAAK,CAAC,EAAE;QACxCC,KAAK,CAAC,eAAe,CAAC;QACtB;MACF;MAEA,MAAMrB,MAAM,GAAGb,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,IAAI,CAACY,MAAM,EAAE;QACXqB,KAAK,CAAC,aAAa,CAAC;QACpB;MACF;;MAEA;MACA,MAAMC,YAAY,GAAGhC,SAAS,CAACiC,YAAY,IAAI,CAAC,CAAC,CAAC;;MAElD;MACA,MAAMC,KAAK,GAAG;QACZxB,MAAM,EAAEA,MAAM;QACdjB,UAAU,EAAE0C,QAAQ,CAAC1C,UAAU,CAACQ,KAAK,CAAC;QAAE;QACxCmC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;QAAE;QAClDC,UAAU,EAAEf,WAAW,CAACxB,KAAK;QAAE;QAC/BwC,IAAI,EAAET,YAAY;QAClBU,UAAU,EAAE,CAAC,CAAC;MAChB,CAAC;;MAED;MACA,MAAMC,OAAO,GAAG7B,MAAM,CAACC,MAAM,CAACzB,IAAI,CAACW,KAAK,CAAC,CAACe,GAAG,CAACC,IAAI,KAAK;QACrD2B,MAAM,EAAET,QAAQ,CAAClB,IAAI,CAAC2B,MAAM,CAAC;QAAE;QAC/BpB,QAAQ,EAAEW,QAAQ,CAAClB,IAAI,CAACO,QAAQ,CAAC;QAAE;QACnCF,KAAK,EAAEuB,UAAU,CAAC5B,IAAI,CAACK,KAAK,CAAC,CAAC;MAChC,CAAC,CAAC,CAAC;MAEHf,OAAO,CAACI,GAAG,CAAC,WAAW,EAAE;QAAEuB,KAAK;QAAES;MAAQ,CAAC,CAAC;;MAE5C;MACA,MAAMG,MAAM,GAAG,8BAA8B;;MAE7C;MACA,MAAMC,YAAY,GAAG;QAAEb,KAAK;QAAES;MAAQ,CAAC;;MAEvC;MACAK,KAAK,CAACF,MAAM,EAAE;QACZG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUrD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC7D,CAAC;QACDqD,IAAI,EAAExD,IAAI,CAACyD,SAAS,CAACL,YAAY;MACnC,CAAC,EACAM,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAACI,SAAS,IAAI;YACvC,MAAM,IAAIC,KAAK,CAAC,UAAUJ,QAAQ,CAACK,MAAM,MAAMF,SAAS,CAACG,GAAG,IAAI,MAAM,EAAE,CAAC;UAC3E,CAAC,CAAC;QACJ;QACA,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxB,CAAC,EACAH,IAAI,CAACQ,IAAI,IAAI;QACZtD,OAAO,CAACI,GAAG,CAAC,SAAS,EAAEkD,IAAI,CAAC;QAC5B9B,KAAK,CAAC,SAAS,CAAC;;QAEhB;QACA7C,MAAM,CAAC0B,IAAI,CAAC;UACVT,IAAI,EAAE,SAAS;UACfE,KAAK,EAAE;YACLoB,WAAW,EAAEA,WAAW,CAACxB,KAAK;YAC9Bb,YAAY,EAAEA,YAAY,CAACa,KAAK;YAChC6D,OAAO,EAAED,IAAI,CAACA,IAAI,CAAC;UACrB;QACF,CAAC,CAAC;MACJ,CAAC,EACAE,KAAK,CAACzD,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/ByB,KAAK,CAAC,WAAWzB,KAAK,CAAC0D,OAAO,EAAE,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;MACnB;MACA/E,MAAM,CAAC0B,IAAI,CAAC;QACVT,IAAI,EAAE,eAAe;QACrBd,MAAM,EAAE;UACNI,UAAU,EAAEA,UAAU,CAACQ,KAAK;UAC5Bb,YAAY,EAAEA,YAAY,CAACa,KAAK;UAChCiE,WAAW,EAAElE,SAAS,CAACkE,WAAW,IAAI,aAAa,CAAC;QACtD;MACF,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}