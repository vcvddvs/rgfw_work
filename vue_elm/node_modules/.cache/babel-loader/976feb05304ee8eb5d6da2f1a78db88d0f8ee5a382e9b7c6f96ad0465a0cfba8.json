{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\nimport { userApi } from '@/utils/api';\nimport { setToken } from '@/utils/auth';\nimport axios from 'axios';\nexport default {\n  __name: 'loginComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const userId = ref('');\n    const password = ref('');\n    const loading = ref(false);\n    const login = async () => {\n      try {\n        if (!userId.value || !password.value) {\n          ElMessage.error('请输入账号和密码');\n          return;\n        }\n        loading.value = true;\n\n        // 打印请求数据\n        console.log('发送登录请求:', {\n          userId: userId.value,\n          password: password.value\n        });\n        const response = await userApi.login({\n          userId: userId.value,\n          password: password.value\n        });\n        console.log('登录响应:', response);\n        if (response && response.code === 1 && response.data) {\n          // 检查响应格式，适应后端返回的不同格式\n          let token;\n          if (typeof response.data === 'string') {\n            token = response.data;\n          } else if (response.data.token) {\n            token = response.data.token;\n          }\n\n          // 验证token\n          if (typeof token === 'string' && token.length > 0) {\n            console.log('获取到token:', token);\n\n            // 保存认证信息\n            setToken(token);\n            localStorage.setItem('userId', response.data.userId || userId.value);\n\n            // 验证token是否正确保存\n            const savedToken = localStorage.getItem('token');\n            console.log('保存的token:', savedToken);\n            console.log('Authorization header:', axios.defaults.headers.common['Authorization']);\n            ElMessage.success('登录成功');\n            router.push('/Index-Component');\n            return;\n          } else {\n            console.error('Token无效:', token);\n            ElMessage.error('登录失败：无效的认证信息');\n          }\n        } else {\n          // 如果没有在上面返回，说明登录失败\n          console.error('登录失败，响应数据:', response);\n          ElMessage.error(response?.msg || '登录失败，请检查用户名和密码');\n        }\n      } catch (error) {\n        // 详细的错误日志\n        console.error('登录异常:', error);\n        if (error.response) {\n          switch (error.response.status) {\n            case 400:\n              ElMessage.error('请求参数错误');\n              break;\n            case 401:\n              ElMessage.error('用户名或密码错误');\n              break;\n            case 403:\n              ElMessage.error('没有访问权限');\n              break;\n            case 500:\n              ElMessage.error('服务器内部错误');\n              break;\n            default:\n              ElMessage.error(`登录失败 (${error.response.status})`);\n          }\n        } else if (error.request) {\n          ElMessage.error('无法连接到服务器，请检查网络');\n        } else {\n          ElMessage.error('登录请求失败：' + error.message);\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n    const register = () => {\n      router.push('/Register-component');\n    };\n    const __returned__ = {\n      router,\n      userId,\n      password,\n      loading,\n      login,\n      register,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElForm() {\n        return ElForm;\n      },\n      get ElFormItem() {\n        return ElFormItem;\n      },\n      get ElInput() {\n        return ElInput;\n      },\n      get ElButton() {\n        return ElButton;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get userApi() {\n        return userApi;\n      },\n      get setToken() {\n        return setToken;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","ElForm","ElFormItem","ElInput","ElButton","ElMessage","userApi","setToken","axios","router","userId","password","loading","login","value","error","console","log","response","code","data","token","length","localStorage","setItem","savedToken","getItem","defaults","headers","common","success","push","msg","status","request","message","register"],"sources":["D:/back_elm/vue_elm/src/components/loginComponent.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-card\">\n      <div class=\"logo-container\">\n        <img :src=\"require('@/assets/elm_title.gif')\" class=\"logo-img\" alt=\"饿了么\" />\n      </div>\n      \n      <h2 class=\"welcome-text\">欢迎回来</h2>\n      \n      <el-form @submit.prevent=\"login\" class=\"login-form\">\n        <el-form-item>\n          <el-input \n            v-model=\"userId\" \n            placeholder=\"请输入账号\" \n            prefix-icon=\"el-icon-user\"\n            class=\"custom-input\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-input \n            type=\"password\" \n            v-model=\"password\" \n            placeholder=\"请输入密码\" \n            prefix-icon=\"el-icon-lock\"\n            class=\"custom-input\"\n            show-password>\n          </el-input>\n        </el-form-item>\n        \n        <div class=\"button-container\">\n          <el-button \n            type=\"primary\" \n            @click=\"login\" \n            class=\"login-button\"\n            :loading=\"loading\">\n            登录\n          </el-button>\n        </div>\n        \n        <div class=\"register-link\">\n          还没有账号？ \n          <span @click=\"register\" class=\"register-text\">立即注册</span>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\nimport { userApi } from '@/utils/api';\nimport { setToken } from '@/utils/auth';\nimport axios from 'axios';\n\nconst router = useRouter();\nconst userId = ref('');\nconst password = ref('');\nconst loading = ref(false);\n\nconst login = async () => {\n  try {\n    if (!userId.value || !password.value) {\n      ElMessage.error('请输入账号和密码');\n      return;\n    }\n\n    loading.value = true;\n    \n    // 打印请求数据\n    console.log('发送登录请求:', {\n      userId: userId.value,\n      password: password.value\n    });\n\n    const response = await userApi.login({\n      userId: userId.value,\n      password: password.value\n    });\n\n    console.log('登录响应:', response);\n\n    if (response && response.code === 1 && response.data) {\n      // 检查响应格式，适应后端返回的不同格式\n      let token;\n      if (typeof response.data === 'string') {\n        token = response.data;\n      } else if (response.data.token) {\n        token = response.data.token;\n      }\n      \n      // 验证token\n      if (typeof token === 'string' && token.length > 0) {\n        console.log('获取到token:', token);\n        \n        // 保存认证信息\n        setToken(token);\n        localStorage.setItem('userId', response.data.userId || userId.value);\n        \n        // 验证token是否正确保存\n        const savedToken = localStorage.getItem('token');\n        console.log('保存的token:', savedToken);\n        console.log('Authorization header:', axios.defaults.headers.common['Authorization']);\n        \n        ElMessage.success('登录成功');\n        router.push('/Index-Component');\n        return;\n      } else {\n        console.error('Token无效:', token);\n        ElMessage.error('登录失败：无效的认证信息');\n      }\n    } else {\n      // 如果没有在上面返回，说明登录失败\n      console.error('登录失败，响应数据:', response);\n      ElMessage.error(response?.msg || '登录失败，请检查用户名和密码');\n    }\n  } catch (error) {\n    // 详细的错误日志\n    console.error('登录异常:', error);\n\n    if (error.response) {\n      switch (error.response.status) {\n        case 400:\n          ElMessage.error('请求参数错误');\n          break;\n        case 401:\n          ElMessage.error('用户名或密码错误');\n          break;\n        case 403:\n          ElMessage.error('没有访问权限');\n          break;\n        case 500:\n          ElMessage.error('服务器内部错误');\n          break;\n        default:\n          ElMessage.error(`登录失败 (${error.response.status})`);\n      }\n    } else if (error.request) {\n      ElMessage.error('无法连接到服务器，请检查网络');\n    } else {\n      ElMessage.error('登录请求失败：' + error.message);\n    }\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst register = () => {\n  router.push('/Register-component');\n};\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  padding: 20px;\n}\n\n.login-card {\n  width: 100%;\n  max-width: 400px;\n  background-color: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.login-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);\n}\n\n.logo-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.logo-img {\n  height: 80px;\n  max-width: 100%;\n  object-fit: contain;\n}\n\n.welcome-text {\n  text-align: center;\n  color: #333;\n  font-size: 24px;\n  margin-bottom: 30px;\n  font-weight: 500;\n}\n\n.login-form {\n  width: 100%;\n}\n\n.custom-input :deep(.el-input__inner) {\n  height: 50px;\n  border-radius: 8px;\n  border: 1px solid #dcdfe6;\n  transition: all 0.3s;\n  padding-left: 15px;\n}\n\n.custom-input :deep(.el-input__inner:focus) {\n  border-color: #409EFF;\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.2);\n}\n\n.button-container {\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\n\n.login-button {\n  width: 100%;\n  height: 50px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  background: linear-gradient(90deg, #0096ff 0%, #0081ff 100%);\n  border: none;\n  transition: all 0.3s;\n}\n\n.login-button:hover {\n  opacity: 0.9;\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(0, 129, 255, 0.3);\n}\n\n.register-link {\n  text-align: center;\n  margin-top: 20px;\n  color: #606266;\n  font-size: 14px;\n}\n\n.register-text {\n  color: #0081ff;\n  cursor: pointer;\n  font-weight: 500;\n  transition: color 0.3s;\n}\n\n.register-text:hover {\n  color: #409EFF;\n  text-decoration: underline;\n}\n\n@media (max-width: 480px) {\n  .login-card {\n    padding: 20px;\n  }\n  \n  .welcome-text {\n    font-size: 20px;\n    margin-bottom: 20px;\n  }\n  \n  .custom-input :deep(.el-input__inner) {\n    height: 45px;\n  }\n  \n  .login-button {\n    height: 45px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}