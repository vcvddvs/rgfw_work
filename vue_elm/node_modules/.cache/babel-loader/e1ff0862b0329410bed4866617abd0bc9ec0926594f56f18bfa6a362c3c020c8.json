{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"orders-info\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"payment-section\"\n};\nconst _hoisted_4 = {\n  class: \"payment-type\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"fa fa-check-circle\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  key: 0,\n  class: \"fa fa-check-circle\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"payment-processing\"\n};\nconst _hoisted_10 = {\n  key: 2,\n  class: \"payment-success\"\n};\nconst _hoisted_11 = {\n  key: 3,\n  class: \"payment-failed\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"header\"\n  }, [_createElementVNode(\"div\", {\n    class: \"title\"\n  }, [_createElementVNode(\"div\", {\n    class: \"p1\"\n  }, [_createElementVNode(\"span\", {\n    class: \"iconfont icon-back\",\n    style: {\n      \"font-size\": \"8vw\"\n    },\n    onClick: $setup.goBack\n  })]), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"p2\"\n  }, [_createElementVNode(\"p\", null, \"在线支付\")], -1 /* HOISTED */))])]), _cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"订单信息\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString($setup.businessName), 1 /* TEXT */), _createElementVNode(\"p\", null, \"¥\" + _toDisplayString($setup.totalPrice.toFixed(2)), 1 /* TEXT */)]), $setup.paymentStatus === 'pending' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"ul\", _hoisted_4, [_createElementVNode(\"li\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.selectPaymentMethod('支付宝'))\n  }, [_createElementVNode(\"img\", {\n    src: require('@/assets/img/alipay.png'),\n    height: \"32\",\n    width: \"120\"\n  }, null, 8 /* PROPS */, _hoisted_5), $setup.selectedMethod === '支付宝' ? (_openBlock(), _createElementBlock(\"i\", _hoisted_6, \"✓\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"li\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.selectPaymentMethod('微信支付'))\n  }, [_createElementVNode(\"img\", {\n    src: require('@/assets/img/wechat.png'),\n    height: \"32\",\n    width: \"120\"\n  }, null, 8 /* PROPS */, _hoisted_7), $setup.selectedMethod === '微信支付' ? (_openBlock(), _createElementBlock(\"i\", _hoisted_8, \"✓\")) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", {\n    class: \"payment-button\"\n  }, [_createElementVNode(\"button\", {\n    onClick: $setup.confirmPayment\n  }, \"确认支付\")])])) : $setup.paymentStatus === 'processing' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _cache[3] || (_cache[3] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"支付处理中，请稍候...\", -1 /* HOISTED */)]))) : $setup.paymentStatus === 'success' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"success-icon\"\n  }, \"✓\", -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"p\", null, \"支付成功！\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"订单号: \" + _toDisplayString($setup.orderId), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.viewOrder\n  }, \"查看订单\")])) : $setup.paymentStatus === 'failed' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"failed-icon\"\n  }, \"✗\", -1 /* HOISTED */)), _cache[7] || (_cache[7] = _createElementVNode(\"p\", null, \"支付失败！\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($setup.errorMessage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.retryPayment\n  }, \"重新支付\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","style","onClick","$setup","goBack","_hoisted_2","_toDisplayString","businessName","totalPrice","toFixed","paymentStatus","_hoisted_3","_hoisted_4","_cache","$event","selectPaymentMethod","src","require","height","width","_hoisted_5","selectedMethod","_hoisted_6","_createCommentVNode","_hoisted_7","_hoisted_8","confirmPayment","_hoisted_9","_hoisted_10","orderId","viewOrder","_hoisted_11","errorMessage","retryPayment"],"sources":["D:\\back_elm\\vue_elm\\src\\components\\paymentComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"header\">\r\n      <div class=\"title\">\r\n        <div class=\"p1\">\r\n          <span class=\"iconfont icon-back\" style=\"font-size: 8vw\" @click=\"goBack\"></span>\r\n        </div>\r\n        <div class=\"p2\">\r\n          <p>在线支付</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <h3>订单信息</h3>\r\n    <div class=\"orders-info\">\r\n      <p>{{ businessName }}</p>\r\n      <p>¥{{ totalPrice.toFixed(2) }}</p>\r\n    </div>\r\n    \r\n    <div v-if=\"paymentStatus === 'pending'\" class=\"payment-section\">\r\n      <ul class=\"payment-type\">\r\n        <li @click=\"selectPaymentMethod('支付宝')\">\r\n          <img :src=\"require('@/assets/img/alipay.png')\" height=\"32\" width=\"120\"/>\r\n          <i v-if=\"selectedMethod === '支付宝'\" class=\"fa fa-check-circle\">✓</i>\r\n        </li>\r\n        <li @click=\"selectPaymentMethod('微信支付')\">\r\n          <img :src=\"require('@/assets/img/wechat.png')\" height=\"32\" width=\"120\"/>\r\n          <i v-if=\"selectedMethod === '微信支付'\" class=\"fa fa-check-circle\">✓</i>\r\n        </li>\r\n      </ul>\r\n      <div class=\"payment-button\">\r\n        <button @click=\"confirmPayment\">确认支付</button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-else-if=\"paymentStatus === 'processing'\" class=\"payment-processing\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <p>支付处理中，请稍候...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"paymentStatus === 'success'\" class=\"payment-success\">\r\n      <div class=\"success-icon\">✓</div>\r\n      <p>支付成功！</p>\r\n      <p>订单号: {{ orderId }}</p>\r\n      <button @click=\"viewOrder\">查看订单</button>\r\n    </div>\r\n    \r\n    <div v-else-if=\"paymentStatus === 'failed'\" class=\"payment-failed\">\r\n      <div class=\"failed-icon\">✗</div>\r\n      <p>支付失败！</p>\r\n      <p>{{ errorMessage }}</p>\r\n      <button @click=\"retryPayment\">重新支付</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { paymentApi } from '@/utils/api';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst businessName = ref(route.query.businessName || '未知店铺');\r\nconst orderId = ref(route.query.orderId || null);\r\nconst isNetworkError = ref(route.query.isNetworkError === 'true');\r\n\r\n// 支付状态：pending-待支付, processing-处理中, success-成功, failed-失败\r\nconst paymentStatus = ref('pending');\r\nconst errorMessage = ref('');\r\nconst paymentId = ref(null);\r\n\r\n// 使用computed保证响应性，并且确保totalPrice是数字类型\r\nconst totalPrice = computed(() => {\r\n  return route.query.totalAmount ? parseFloat(route.query.totalAmount) : 0;\r\n});\r\n\r\nconst selectedMethod = ref('支付宝'); // 默认选中支付宝\r\n\r\nfunction selectPaymentMethod(method) {\r\n  selectedMethod.value = method;\r\n}\r\n\r\nasync function confirmPayment() {\r\n  if (!selectedMethod.value) {\r\n    alert('请选择支付方式');\r\n    return;\r\n  }\r\n  \r\n  if (!orderId.value) {\r\n    alert('订单信息不完整，无法完成支付');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    paymentStatus.value = 'processing';\r\n    \r\n    // 构建支付请求数据\r\n    const paymentData = {\r\n      orderId: parseInt(orderId.value),\r\n      paymentMethod: selectedMethod.value\r\n    };\r\n    \r\n    console.log('发送支付请求:', paymentData);\r\n    \r\n    // 调用支付处理API\r\n    const response = await paymentApi.processPayment(paymentData);\r\n    console.log('支付响应:', response);\r\n    \r\n    if (response && (response.code === 1 || response.success)) {\r\n      // 支付处理成功\r\n      if (response.data) {\r\n        paymentId.value = response.data.paymentId;\r\n      }\r\n      \r\n      // 模拟支付验证过程\r\n      setTimeout(async () => {\r\n        try {\r\n          // 如果有支付ID，验证支付状态\r\n          if (paymentId.value) {\r\n            const verifyResponse = await paymentApi.verifyPayment(paymentId.value);\r\n            console.log('支付验证响应:', verifyResponse);\r\n            \r\n            if (verifyResponse && verifyResponse.code === 1 && verifyResponse.data && verifyResponse.data.verified) {\r\n              paymentSuccess();\r\n            } else {\r\n              paymentFailed('支付验证失败');\r\n            }\r\n          } else {\r\n            // 如果没有支付ID，也当作成功处理（演示目的）\r\n            paymentSuccess();\r\n          }\r\n        } catch (verifyError) {\r\n          console.error('支付验证错误:', verifyError);\r\n          // 在演示环境中，仍然当作成功处理\r\n          paymentSuccess();\r\n        }\r\n      }, 2000); // 2秒后验证\r\n      \r\n    } else {\r\n      paymentFailed(response?.msg || '支付处理失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('支付请求错误:', error);\r\n    \r\n    // 演示环境下，仍然模拟支付成功\r\n    setTimeout(() => {\r\n      paymentSuccess();\r\n    }, 2000);\r\n  }\r\n}\r\n\r\nfunction paymentSuccess() {\r\n  paymentStatus.value = 'success';\r\n  // 保存支付成功信息到localStorage\r\n  localStorage.setItem('lastPaymentSuccess', 'true');\r\n  localStorage.setItem('lastPaidOrderId', orderId.value);\r\n}\r\n\r\nfunction paymentFailed(message) {\r\n  paymentStatus.value = 'failed';\r\n  errorMessage.value = message || '支付过程中发生错误';\r\n}\r\n\r\nfunction retryPayment() {\r\n  paymentStatus.value = 'pending';\r\n  errorMessage.value = '';\r\n}\r\n\r\nfunction viewOrder() {\r\n  router.push({\r\n    name: 'OrderDetail',\r\n    params: { orderId: orderId.value }\r\n  });\r\n}\r\n\r\nfunction goBack() {\r\n  router.push({ name: 'Home' });\r\n}\r\n\r\nonMounted(() => {\r\n  // 如果是从订单页面跳转过来的网络错误情况，我们仍然允许支付\r\n  if (isNetworkError.value) {\r\n    console.log('检测到网络错误标记，但仍然允许支付');\r\n  }\r\n  \r\n  // 如果没有订单ID，尝试从localStorage获取\r\n  if (!orderId.value) {\r\n    orderId.value = localStorage.getItem('currentOrderId');\r\n    console.log('从localStorage获取订单ID:', orderId.value);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper{\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n\r\n.wrapper .header .title{\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: red;\r\n  text-align: center;\r\n  height: 18vw;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n\r\n\r\n}\r\n\r\n.wrapper .header .title .p1{\r\n  flex: 1;\r\n  color: white;\r\n\r\n}\r\n\r\n\r\n.wrapper .header .title .p2{\r\n  flex: 9;\r\n  color: white;\r\n  font-size: 4.5vw;\r\n  padding-right: 6vw;\r\n}\r\n\r\n/*订单信息*/\r\n.wrapper h3{\r\n  box-sizing: border-box;\r\n  padding: 4vw 4vw 0;\r\n  margin-top: 18vw;\r\n  font-size: 4vw;\r\n  font-weight: 300;\r\n  color: #9F9F9F;\r\n}\r\n\r\n.wrapper .orders-info{\r\n  box-sizing: border-box;\r\n  padding: 4vw;\r\n  font-size: 4vw;\r\n  color: #666;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.wrapper .orders-info p:last-child{\r\n  color: orangered;\r\n}\r\n\r\n/*支付方式*/\r\n.wrapper .payment-type{\r\n  width: 100%;\r\n  padding-left: 0;\r\n}\r\n\r\n.wrapper .payment-type li{\r\n  width: 90%;\r\n  padding:4vw;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.wrapper .payment-type li img{\r\n  width: 33vw;\r\n  height: 8.9vw;\r\n}\r\n\r\n.wrapper .payment-type li .fa-check-circle{\r\n  font-size: 5vw;\r\n  color: #38ca73;\r\n}\r\n\r\n.wrapper .payment-button{\r\n  width: 90%;\r\n  box-sizing: border-box;\r\n  padding:4vw;\r\n  outline: none;\r\n  margin-left: 4vw;\r\n}\r\n\r\n.wrapper .payment-button button{\r\n  width: 100%;\r\n  height: 10vw;\r\n  margin: 0 auto;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 4px;\r\n  background-color: #38ca73;\r\n  color: white;\r\n}\r\n\r\n/* 支付处理中样式 */\r\n.payment-processing {\r\n  text-align: center;\r\n  padding: 20px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.loading-spinner {\r\n  border: 4px solid rgba(0, 0, 0, 0.1);\r\n  border-radius: 50%;\r\n  border-top: 4px solid #38ca73;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin: 20px auto;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* 支付成功样式 */\r\n.payment-success {\r\n  text-align: center;\r\n  padding: 20px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.success-icon {\r\n  background-color: #38ca73;\r\n  color: white;\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 30px;\r\n  margin: 0 auto 20px;\r\n}\r\n\r\n.payment-success button {\r\n  background-color: #38ca73;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* 支付失败样式 */\r\n.payment-failed {\r\n  text-align: center;\r\n  padding: 20px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.failed-icon {\r\n  background-color: #ff4d4f;\r\n  color: white;\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 30px;\r\n  margin: 0 auto 20px;\r\n}\r\n\r\n.payment-failed button {\r\n  background-color: #ff4d4f;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EAYbA,KAAK,EAAC;AAAa;;EAb5BC,GAAA;EAkB4CD,KAAK,EAAC;;;EACxCA,KAAK,EAAC;AAAc;mBAnB9B;;EAAAC,GAAA;EAsB6CD,KAAK,EAAC;;mBAtBnD;;EAAAC,GAAA;EA0B8CD,KAAK,EAAC;;;EA1BpDC,GAAA;EAkCoDD,KAAK,EAAC;;;EAlC1DC,GAAA;EAuCiDD,KAAK,EAAC;;;EAvCvDC,GAAA;EA8CgDD,KAAK,EAAC;;;uBA7CpDE,mBAAA,CAmDM,OAnDNC,UAmDM,GAlDJC,mBAAA,CASM;IATDJ,KAAK,EAAC;EAAQ,IACjBI,mBAAA,CAOM;IAPDJ,KAAK,EAAC;EAAO,IAChBI,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAI,IACbI,mBAAA,CAA+E;IAAzEJ,KAAK,EAAC,oBAAoB;IAACK,KAAsB,EAAtB;MAAA;IAAA,CAAsB;IAAEC,OAAK,EAAEC,MAAA,CAAAC;kCAElEJ,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAI,IACbI,mBAAA,CAAW,WAAR,MAAI,E,oDAIbA,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAGM,OAHNK,UAGM,GAFJL,mBAAA,CAAyB,WAAAM,gBAAA,CAAnBH,MAAA,CAAAI,YAAY,kBAClBP,mBAAA,CAAmC,WAAhC,GAAC,GAAAM,gBAAA,CAAGH,MAAA,CAAAK,UAAU,CAACC,OAAO,oB,GAGhBN,MAAA,CAAAO,aAAa,kB,cAAxBZ,mBAAA,CAcM,OAdNa,UAcM,GAbJX,mBAAA,CASK,MATLY,UASK,GARHZ,mBAAA,CAGK;IAHAE,OAAK,EAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEX,MAAA,CAAAY,mBAAmB;MAC7Bf,mBAAA,CAAwE;IAAlEgB,GAAG,EAAEC,OAAO;IAA6BC,MAAM,EAAC,IAAI;IAACC,KAAK,EAAC;0BArB3EC,UAAA,GAsBmBjB,MAAA,CAAAkB,cAAc,c,cAAvBvB,mBAAA,CAAmE,KAAnEwB,UAAmE,EAAL,GAAC,KAtBzEC,mBAAA,e,GAwBQvB,mBAAA,CAGK;IAHAE,OAAK,EAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEX,MAAA,CAAAY,mBAAmB;MAC7Bf,mBAAA,CAAwE;IAAlEgB,GAAG,EAAEC,OAAO;IAA6BC,MAAM,EAAC,IAAI;IAACC,KAAK,EAAC;0BAzB3EK,UAAA,GA0BmBrB,MAAA,CAAAkB,cAAc,e,cAAvBvB,mBAAA,CAAoE,KAApE2B,UAAoE,EAAL,GAAC,KA1B1EF,mBAAA,e,KA6BMvB,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAgB,IACzBI,mBAAA,CAA6C;IAApCE,OAAK,EAAEC,MAAA,CAAAuB;EAAc,GAAE,MAAI,E,OAIxBvB,MAAA,CAAAO,aAAa,qB,cAA7BZ,mBAAA,CAGM,OAHN6B,UAGM,EAAAd,MAAA,QAAAA,MAAA,OAFJb,mBAAA,CAAmC;IAA9BJ,KAAK,EAAC;EAAiB,4BAC5BI,mBAAA,CAAmB,WAAhB,cAAY,oB,MAGDG,MAAA,CAAAO,aAAa,kB,cAA7BZ,mBAAA,CAKM,OALN8B,WAKM,G,0BAJJ5B,mBAAA,CAAiC;IAA5BJ,KAAK,EAAC;EAAc,GAAC,GAAC,sB,0BAC3BI,mBAAA,CAAY,WAAT,OAAK,sBACRA,mBAAA,CAAyB,WAAtB,OAAK,GAAAM,gBAAA,CAAGH,MAAA,CAAA0B,OAAO,kBAClB7B,mBAAA,CAAwC;IAA/BE,OAAK,EAAEC,MAAA,CAAA2B;EAAS,GAAE,MAAI,E,KAGjB3B,MAAA,CAAAO,aAAa,iB,cAA7BZ,mBAAA,CAKM,OALNiC,WAKM,G,0BAJJ/B,mBAAA,CAAgC;IAA3BJ,KAAK,EAAC;EAAa,GAAC,GAAC,sB,0BAC1BI,mBAAA,CAAY,WAAT,OAAK,sBACRA,mBAAA,CAAyB,WAAAM,gBAAA,CAAnBH,MAAA,CAAA6B,YAAY,kBAClBhC,mBAAA,CAA2C;IAAlCE,OAAK,EAAEC,MAAA,CAAA8B;EAAY,GAAE,MAAI,E,KAlDxCV,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}