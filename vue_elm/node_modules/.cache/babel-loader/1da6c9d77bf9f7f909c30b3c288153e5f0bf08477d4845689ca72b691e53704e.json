{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { userApi } from '@/utils/api';\nexport default {\n  __name: 'RegisterComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const phoneNumber = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const register = async () => {\n      try {\n        if (password.value !== confirmPassword.value) {\n          ElMessage.error('两次输入的密码不一致');\n          return;\n        }\n        const response = await userApi.register({\n          userId: phoneNumber.value,\n          password: password.value\n          // 可以添加其他需要的字段\n        });\n        if (response && response.success) {\n          ElMessage.success('注册成功');\n          router.push('/login-component');\n        } else {\n          ElMessage.error('注册失败：' + (response?.message || '未知错误'));\n        }\n      } catch (error) {\n        console.error('注册失败:', error);\n        ElMessage.error('注册失败：' + (error.message || '服务器错误'));\n      }\n    };\n    const goToLogin = () => {\n      router.push('/login-component');\n    };\n    const __returned__ = {\n      router,\n      phoneNumber,\n      password,\n      confirmPassword,\n      register,\n      goToLogin,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get userApi() {\n        return userApi;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","ElMessage","userApi","router","phoneNumber","password","confirmPassword","register","value","error","response","userId","success","push","message","console","goToLogin"],"sources":["D:/back_elm/vue_elm/src/components/RegisterComponent.vue"],"sourcesContent":["<template>\n  <el-form class=\"wrapper\" @submit.prevent=\"register\">\n    <div class=\"header\">\n      <img :src=\"require('@/assets/img_2.png')\" style=\"width:80%;height: 90%\" alt=\"描述\" />\n    </div>\n    <el-form-item label=\"手机号码：\">\n      <el-input v-model=\"phoneNumber \" placeholder=\"账户\"></el-input>\n    </el-form-item>\n    <el-form-item label=\"密码：\">\n      <el-input type=\"password\" v-model=\"password\" placeholder=\"密码\"></el-input>\n    </el-form-item>\n    <el-form-item label=\"确认密码：\">\n      <el-input type=\"password\" v-model=\"confirmPassword\" placeholder=\"再次确认\"></el-input>\n    </el-form-item>\n    <div class=\"button-box\">\n      <el-button type=\"primary\" style=\"width: 75%;margin-left: 30px;margin-bottom: 10px\" @click=\"register\">注册</el-button>\n    </div>\n    <div class=\"button-box\" >\n      <el-button style=\"width: 75%;margin-left: 30px;\" @click=\"goToLogin\">返回登录界面</el-button>\n    </div>\n  </el-form>\n</template>\n\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { userApi } from '@/utils/api';\n\nconst router = useRouter();\nconst phoneNumber = ref('');\nconst password = ref('');\nconst confirmPassword = ref('');\n\nconst register = async () => {\n  try {\n    if (password.value !== confirmPassword.value) {\n      ElMessage.error('两次输入的密码不一致');\n      return;\n    }\n    \n    const response = await userApi.register({\n      userId: phoneNumber.value,\n      password: password.value,\n      // 可以添加其他需要的字段\n    });\n    \n    if (response && response.success) {\n      ElMessage.success('注册成功');\n      router.push('/login-component');\n    } else {\n      ElMessage.error('注册失败：' + (response?.message || '未知错误'));\n    }\n  } catch (error) {\n    console.error('注册失败:', error);\n    ElMessage.error('注册失败：' + (error.message || '服务器错误'));\n  }\n};\n\nconst goToLogin = () => {\n  router.push('/login-component');\n};\n</script>\n\n<style scoped>\n/* 将原有的 CSS 样式复制到这里 */\n.wrapper {\n  width: 100%;\n  height: 100%;\n}\n\n/*顶部样式*/\n/*logo样式*/\n.wrapper .header {\n  display: flex;\n  flex-direction: column;\n  color: white;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 10vw;\n\n}\n\n.wrapper .header p {\n  font-size: 5vw;\n  font-weight: bolder;\n}\n\n/*主体部分*/\n\n\n.wrapper .body .logins div {\n  display: flex;\n  box-sizing: border-box;\n  padding: 4vw 3vw 0 3vw;\n  align-items: center;\n}\n\n\n.wrapper .body .logins div .content input {\n  border: none;\n  outline: none;\n  height: 6vw;\n  background-color: white;\n}\n\n\n.wrapper .body .button-box button {\n  font-size: 5vw;\n  width: 100%;\n  font-weight: 700;\n  color: white;\n  background-color: #38ca73;\n  border: none;\n  border-radius: 15px;\n  height: 10vw;\n}\n\n\n</style>"],"mappings":";AAyBA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,OAAO,QAAQ,aAAa;;;;;;;IAErC,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,WAAW,GAAGL,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMM,QAAQ,GAAGN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,eAAe,GAAGP,GAAG,CAAC,EAAE,CAAC;IAE/B,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,IAAIF,QAAQ,CAACG,KAAK,KAAKF,eAAe,CAACE,KAAK,EAAE;UAC5CP,SAAS,CAACQ,KAAK,CAAC,YAAY,CAAC;UAC7B;QACF;QAEA,MAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACK,QAAQ,CAAC;UACtCI,MAAM,EAAEP,WAAW,CAACI,KAAK;UACzBH,QAAQ,EAAEA,QAAQ,CAACG;UACnB;QACF,CAAC,CAAC;QAEF,IAAIE,QAAQ,IAAIA,QAAQ,CAACE,OAAO,EAAE;UAChCX,SAAS,CAACW,OAAO,CAAC,MAAM,CAAC;UACzBT,MAAM,CAACU,IAAI,CAAC,kBAAkB,CAAC;QACjC,CAAC,MAAM;UACLZ,SAAS,CAACQ,KAAK,CAAC,OAAO,IAAIC,QAAQ,EAAEI,OAAO,IAAI,MAAM,CAAC,CAAC;QAC1D;MACF,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdM,OAAO,CAACN,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BR,SAAS,CAACQ,KAAK,CAAC,OAAO,IAAIA,KAAK,CAACK,OAAO,IAAI,OAAO,CAAC,CAAC;MACvD;IACF,CAAC;IAED,MAAME,SAAS,GAAGA,CAAA,KAAM;MACtBb,MAAM,CAACU,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}