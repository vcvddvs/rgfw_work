{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport router from \"@/router\";\nimport { deliveryAddressApi } from '@/utils/api';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'updataComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const userId = ref(route.params.userId);\n    const address = ref({});\n    const loading = ref(false);\n    onMounted(async () => {\n      // 从 localStorage 获取要编辑的地址\n      const selectedAddress = JSON.parse(localStorage.getItem('selectedAddressForEdit'));\n      if (selectedAddress) {\n        address.value = selectedAddress;\n      } else {\n        // 初始化新地址\n        address.value = {\n          contactName: '',\n          contactSex: 1,\n          // 默认值\n          contactTel: '',\n          address: '',\n          userId: userId.value\n        };\n      }\n      console.log(\"初始化地址信息:\", address.value);\n    });\n    const validateForm = () => {\n      if (!address.value.address || address.value.address.trim() === '') {\n        ElMessage.error('请输入详细地址');\n        return false;\n      }\n      if (!address.value.contactName || address.value.contactName.trim() === '') {\n        ElMessage.error('请输入联系人姓名');\n        return false;\n      }\n      if (!address.value.contactTel || address.value.contactTel.trim() === '') {\n        ElMessage.error('请输入联系电话');\n        return false;\n      }\n      return true;\n    };\n    const addAddress = async () => {\n      if (!validateForm()) return;\n      try {\n        loading.value = true;\n\n        // 确保发送请求时 address 对象包含 userId\n        const addressData = {\n          ...address.value\n        };\n        delete addressData.daId; // 如果是编辑模式可能有daId，新增时需要删除\n        addressData.contactSex = addressData.contactSex || 1;\n        addressData.userId = userId.value;\n        console.log(\"发送地址数据:\", addressData);\n        const response = await deliveryAddressApi.addDeliveryAddress(addressData);\n        console.log(\"添加地址响应:\", response);\n\n        // 检查响应格式\n        let success = false;\n        if (response && response.code === 1) {\n          success = true;\n        } else if (response === true || response && response.success) {\n          success = true;\n        }\n        if (success) {\n          ElMessage.success('地址添加成功');\n          router.back(); // 返回上一页\n        } else {\n          ElMessage.error('地址添加失败: ' + (response?.message || '未知错误'));\n        }\n      } catch (error) {\n        console.error('添加地址失败:', error);\n        ElMessage.error('地址添加失败: ' + (error.message || '服务器错误'));\n      } finally {\n        loading.value = false;\n      }\n    };\n    const goBack = () => {\n      router.back();\n    };\n    const __returned__ = {\n      route,\n      userId,\n      address,\n      loading,\n      validateForm,\n      addAddress,\n      goBack,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get router() {\n        return router;\n      },\n      get deliveryAddressApi() {\n        return deliveryAddressApi;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","router","deliveryAddressApi","ElMessage","route","userId","params","address","loading","selectedAddress","JSON","parse","localStorage","getItem","value","contactName","contactSex","contactTel","console","log","validateForm","trim","error","addAddress","addressData","daId","response","addDeliveryAddress","success","code","back","message","goBack"],"sources":["D:/back_elm/vue_elm/src/components/updataComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-address\">\r\n    <h2>添加新地址</h2>\r\n    <!-- 表单用于编辑地址 -->\r\n    <el-form ref=\"editAddressForm\" :model=\"address\" label-width=\"100px\">\r\n      <el-form-item label=\"地址\" required>\r\n        <el-input v-model=\"address.address\" placeholder=\"请输入详细地址\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"联系人姓名\" required>\r\n        <el-input v-model=\"address.contactName\" placeholder=\"请输入联系人姓名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"联系电话\" required>\r\n        <el-input v-model=\"address.contactTel\" placeholder=\"请输入联系电话\"></el-input>\r\n      </el-form-item>\r\n      <el-button type=\"primary\" @click=\"addAddress\" :loading=\"loading\" style=\"width: 100%;\">保存</el-button>\r\n      <el-button @click=\"goBack\" style=\"width: 100%; margin-top: 10px;\">返回</el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport router from \"@/router\";\r\nimport { deliveryAddressApi } from '@/utils/api';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nconst route = useRoute();\r\nconst userId = ref(route.params.userId);\r\nconst address = ref({});\r\nconst loading = ref(false);\r\n\r\nonMounted(async () => {\r\n  // 从 localStorage 获取要编辑的地址\r\n  const selectedAddress = JSON.parse(localStorage.getItem('selectedAddressForEdit'));\r\n  if (selectedAddress) {\r\n    address.value = selectedAddress;\r\n  } else {\r\n    // 初始化新地址\r\n    address.value = {\r\n      contactName: '',\r\n      contactSex: 1, // 默认值\r\n      contactTel: '',\r\n      address: '',\r\n      userId: userId.value\r\n    };\r\n  }\r\n  console.log(\"初始化地址信息:\", address.value);\r\n});\r\n\r\nconst validateForm = () => {\r\n  if (!address.value.address || address.value.address.trim() === '') {\r\n    ElMessage.error('请输入详细地址');\r\n    return false;\r\n  }\r\n  if (!address.value.contactName || address.value.contactName.trim() === '') {\r\n    ElMessage.error('请输入联系人姓名');\r\n    return false;\r\n  }\r\n  if (!address.value.contactTel || address.value.contactTel.trim() === '') {\r\n    ElMessage.error('请输入联系电话');\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst addAddress = async () => {\r\n  if (!validateForm()) return;\r\n  \r\n  try {\r\n    loading.value = true;\r\n    \r\n    // 确保发送请求时 address 对象包含 userId\r\n    const addressData = { ...address.value };\r\n    delete addressData.daId; // 如果是编辑模式可能有daId，新增时需要删除\r\n    addressData.contactSex = addressData.contactSex || 1;\r\n    addressData.userId = userId.value;\r\n    \r\n    console.log(\"发送地址数据:\", addressData);\r\n    \r\n    const response = await deliveryAddressApi.addDeliveryAddress(addressData);\r\n    console.log(\"添加地址响应:\", response);\r\n    \r\n    // 检查响应格式\r\n    let success = false;\r\n    if (response && response.code === 1) {\r\n      success = true;\r\n    } else if (response === true || (response && response.success)) {\r\n      success = true;\r\n    }\r\n    \r\n    if (success) {\r\n      ElMessage.success('地址添加成功');\r\n      router.back(); // 返回上一页\r\n    } else {\r\n      ElMessage.error('地址添加失败: ' + (response?.message || '未知错误'));\r\n    }\r\n  } catch (error) {\r\n    console.error('添加地址失败:', error);\r\n    ElMessage.error('地址添加失败: ' + (error.message || '服务器错误'));\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst goBack = () => {\r\n  router.back();\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.edit-address {\r\n  max-width: 400px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  color: #409EFF;\r\n}\r\n\r\n.el-button {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":"AAqBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,kBAAkB,QAAQ,aAAa;AAChD,SAASC,SAAS,QAAQ,cAAc;;;;;;;IAExC,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,MAAM,GAAGP,GAAG,CAACM,KAAK,CAACE,MAAM,CAACD,MAAM,CAAC;IACvC,MAAME,OAAO,GAAGT,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,MAAMU,OAAO,GAAGV,GAAG,CAAC,KAAK,CAAC;IAE1BC,SAAS,CAAC,YAAY;MACpB;MACA,MAAMU,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,wBAAwB,CAAC,CAAC;MAClF,IAAIJ,eAAe,EAAE;QACnBF,OAAO,CAACO,KAAK,GAAGL,eAAe;MACjC,CAAC,MAAM;QACL;QACAF,OAAO,CAACO,KAAK,GAAG;UACdC,WAAW,EAAE,EAAE;UACfC,UAAU,EAAE,CAAC;UAAE;UACfC,UAAU,EAAE,EAAE;UACdV,OAAO,EAAE,EAAE;UACXF,MAAM,EAAEA,MAAM,CAACS;QACjB,CAAC;MACH;MACAI,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEZ,OAAO,CAACO,KAAK,CAAC;IACxC,CAAC,CAAC;IAEF,MAAMM,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAI,CAACb,OAAO,CAACO,KAAK,CAACP,OAAO,IAAIA,OAAO,CAACO,KAAK,CAACP,OAAO,CAACc,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACjElB,SAAS,CAACmB,KAAK,CAAC,SAAS,CAAC;QAC1B,OAAO,KAAK;MACd;MACA,IAAI,CAACf,OAAO,CAACO,KAAK,CAACC,WAAW,IAAIR,OAAO,CAACO,KAAK,CAACC,WAAW,CAACM,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACzElB,SAAS,CAACmB,KAAK,CAAC,UAAU,CAAC;QAC3B,OAAO,KAAK;MACd;MACA,IAAI,CAACf,OAAO,CAACO,KAAK,CAACG,UAAU,IAAIV,OAAO,CAACO,KAAK,CAACG,UAAU,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACvElB,SAAS,CAACmB,KAAK,CAAC,SAAS,CAAC;QAC1B,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb,CAAC;IAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACH,YAAY,CAAC,CAAC,EAAE;MAErB,IAAI;QACFZ,OAAO,CAACM,KAAK,GAAG,IAAI;;QAEpB;QACA,MAAMU,WAAW,GAAG;UAAE,GAAGjB,OAAO,CAACO;QAAM,CAAC;QACxC,OAAOU,WAAW,CAACC,IAAI,CAAC,CAAC;QACzBD,WAAW,CAACR,UAAU,GAAGQ,WAAW,CAACR,UAAU,IAAI,CAAC;QACpDQ,WAAW,CAACnB,MAAM,GAAGA,MAAM,CAACS,KAAK;QAEjCI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEK,WAAW,CAAC;QAEnC,MAAME,QAAQ,GAAG,MAAMxB,kBAAkB,CAACyB,kBAAkB,CAACH,WAAW,CAAC;QACzEN,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEO,QAAQ,CAAC;;QAEhC;QACA,IAAIE,OAAO,GAAG,KAAK;QACnB,IAAIF,QAAQ,IAAIA,QAAQ,CAACG,IAAI,KAAK,CAAC,EAAE;UACnCD,OAAO,GAAG,IAAI;QAChB,CAAC,MAAM,IAAIF,QAAQ,KAAK,IAAI,IAAKA,QAAQ,IAAIA,QAAQ,CAACE,OAAQ,EAAE;UAC9DA,OAAO,GAAG,IAAI;QAChB;QAEA,IAAIA,OAAO,EAAE;UACXzB,SAAS,CAACyB,OAAO,CAAC,QAAQ,CAAC;UAC3B3B,MAAM,CAAC6B,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,MAAM;UACL3B,SAAS,CAACmB,KAAK,CAAC,UAAU,IAAII,QAAQ,EAAEK,OAAO,IAAI,MAAM,CAAC,CAAC;QAC7D;MACF,CAAC,CAAC,OAAOT,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BnB,SAAS,CAACmB,KAAK,CAAC,UAAU,IAAIA,KAAK,CAACS,OAAO,IAAI,OAAO,CAAC,CAAC;MAC1D,CAAC,SAAS;QACRvB,OAAO,CAACM,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;IAED,MAAMkB,MAAM,GAAGA,CAAA,KAAM;MACnB/B,MAAM,CAAC6B,IAAI,CAAC,CAAC;IACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}