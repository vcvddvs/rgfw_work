{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"button-box\"\n};\nconst _hoisted_5 = {\n  class: \"button-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_h = _resolveComponent(\"h\");\n  return _openBlock(), _createBlock($setup[\"ElForm\"], {\n    class: \"wrapper\",\n    onSubmit: _withModifiers($setup.login, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n      src: require('@/assets/img_1.png'),\n      height: \"70px\",\n      width: \"100px\",\n      alt: \"描述\"\n    }, null, 8 /* PROPS */, _hoisted_2), _cache[2] || (_cache[2] = _createElementVNode(\"p\", null, \"欢迎使用 饿了么\", -1 /* HOISTED */))]), _createVNode(_component_h, null, {\n      default: _withCtx(() => [_createElementVNode(\"img\", {\n        src: require('@/assets/elm_title.gif'),\n        height: \"100%\",\n        width: \"100%\",\n        alt: \"描述\"\n      }, null, 8 /* PROPS */, _hoisted_3)]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElFormItem\"], {\n      label: \"账户:\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ElInput\"], {\n        modelValue: $setup.userId,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userId = $event),\n        placeholder: \"账户\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElFormItem\"], {\n      label: \"密码：\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ElInput\"], {\n        type: \"password\",\n        modelValue: $setup.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n        placeholder: \"密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_4, [_createVNode($setup[\"ElButton\"], {\n      type: \"primary\",\n      onClick: $setup.login,\n      style: {\n        \"width\": \"75%\",\n        \"margin-left\": \"25px\",\n        \"margin-bottom\": \"10px\",\n        \"background-color\": \"#409EFF\"\n      }\n    }, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"登录\")])),\n      _: 1 /* STABLE */\n    })]), _createElementVNode(\"div\", _hoisted_5, [_createVNode($setup[\"ElButton\"], {\n      onClick: $setup.register,\n      style: {\n        \"width\": \"75%\",\n        \"margin-left\": \"25px\"\n      }\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"注册\")])),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","$setup","onSubmit","_withModifiers","login","default","_withCtx","_createElementVNode","_hoisted_1","src","require","height","width","alt","_hoisted_2","_createVNode","_component_h","_hoisted_3","_","label","modelValue","userId","_cache","$event","placeholder","type","password","_hoisted_4","onClick","style","_createTextVNode","_hoisted_5","register"],"sources":["D:\\back_elm\\vue_elm\\src\\components\\loginComponent.vue"],"sourcesContent":["<template>\n  <el-form class=\"wrapper\" @submit.prevent=\"login\">\n    <div class=\"header\">\n      <img :src=\"require('@/assets/img_1.png')\"\n           height=\"70px\"\n           width=\"100px\" alt=\"描述\"\n      />\n      <p>欢迎使用  饿了么</p>\n    </div>\n    <h>\n      <img :src=\"require('@/assets/elm_title.gif')\"\n           height=\"100%\"\n           width=\"100%\" alt=\"描述\"\n      />\n    </h>\n    <el-form-item label=\"账户:\">\n      <el-input v-model=\"userId\" placeholder=\"账户\"></el-input>\n    </el-form-item>\n    <el-form-item label=\"密码：\">\n      <el-input type=\"password\" v-model=\"password\" placeholder=\"密码\"></el-input>\n    </el-form-item>\n    <div class=\"button-box\">\n      <el-button type=\"primary\" @click=\"login\" style=\"width: 75%;margin-left: 25px;;margin-bottom: 10px; background-color: #409EFF;\">登录</el-button>\n    </div>\n    <div class=\"button-box\">\n      <el-button @click=\"register\" style=\"width: 75%;margin-left: 25px\">注册</el-button>\n    </div>\n\n  </el-form>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\nimport { userApi } from '@/utils/api';\nimport { setToken } from '@/utils/auth';\n\nconst router = useRouter();\nconst userId = ref('');\nconst password = ref('');\n\nconst login = async () => {\n  try {\n    if (!userId.value || !password.value) {\n      ElMessage.error('请输入账号和密码');\n      return;\n    }\n\n    // 打印请求数据\n    console.log('发送登录请求:', {\n      userId: userId.value,\n      password: password.value\n    });\n\n    const response = await userApi.login({\n      userId: userId.value,\n      password: password.value\n    });\n\n    console.log('收到响应:', response);\n\n    if (response && response.success === true) {\n      const token = response.data;\n      \n      // 验证token\n      if (typeof token === 'string' && token.length > 0) {\n        console.log('获取到有效token');\n        \n        // 保存认证信息\n        setToken(token);\n        localStorage.setItem('userId', userId.value);\n        \n        ElMessage.success('登录成功');\n        router.push('/Index-Component');\n        return;\n      } else {\n        console.error('Token无效:', token);\n        ElMessage.error('登录失败：无效的认证信息');\n        return;\n      }\n    }\n\n    // 如果没有在上面返回，说明登录失败\n    console.error('登录失败，响应数据:', response);\n    ElMessage.error(response?.message || '登录失败，请检查用户名和密码');\n\n  } catch (error) {\n    // 详细的错误日志\n    console.error('登录异常:', error);\n\n    if (error.response) {\n      switch (error.response.status) {\n        case 400:\n          ElMessage.error('请求参数错误');\n          break;\n        case 401:\n          ElMessage.error('用户名或密码错误');\n          break;\n        case 403:\n          ElMessage.error('没有访问权限');\n          break;\n        case 500:\n          ElMessage.error('服务器内部错误');\n          break;\n        default:\n          ElMessage.error(`登录失败 (${error.response.status})`);\n      }\n    } else if (error.request) {\n      ElMessage.error('无法连接到服务器，请检查网络');\n    } else {\n      ElMessage.error('登录请求失败：' + error.message);\n    }\n  }\n};\n\nconst register = () => {\n  router.push('/Register-component');\n};\n\n</script>\n\n<style scoped>\n.wrapper {\n  width: 100%;\n  height: 100%;\n}\n\n/*顶部样式*/\n.button-box button:hover {\n  color: #17BAF9; /* 鼠标悬停时的背景色 */\n}\n\n.button-box button:active {\n  background-color: #288b52; /* 鼠标点击时的背景色 */\n}\n\n/*logo样式*/\n.wrapper .header {\n  width: 100%;\n  display: flex;\n  color: white;\n  align-items: center;\n  margin-left: 30px;\n\n\n}\n\n.wrapper .header p {\n  font-size: 5vw;\n  font-weight: bolder;\n  color: #17BAF9;\n}\n\n/*主体部分*/\n.wrapper .body .logins div {\n  display: flex;\n  box-sizing: border-box;\n  padding: 4vw 3vw 0 3vw;\n  align-items: center;\n}\n\n/* 定义输入框的基本样式 */\n.el-input__inner {\n  border: none; /* 移除输入框的边框 */\n  border-bottom: 2px solid #dcdfe6; /* 设置底部边框 */\n  border-radius: 0; /* 移除圆角 */\n  transition: border-color 0.3s; /* 平滑过渡效果 */\n}\n\n/* 定义输入框的 hover 状态 */\n.el-input__inner:hover {\n  border-color: #409EFF; /* 鼠标悬停时的边框颜色 */\n}\n\n/* 定义输入框的 focus 状态 */\n.el-input__inner:focus {\n  border-color: #409EFF; /* 输入框聚焦时的边框颜色 */\n  box-shadow: 0 0 5px rgba(64, 158, 255, 0.5); /* 添加阴影效果 */\n}\n\n.wrapper .body .logins div .content input {\n  border: none;\n  outline: none;\n  height: 6vw;\n  background-color: white;\n}\n\n.wrapper .body .button-box button {\n  font-size: 5vw;\n  width: 100%;\n  font-weight: 700;\n  color: white;\n  background-color: #38ca73;\n  border: none;\n  border-radius: 15px;\n  height: 10vw;\n}\n\n\n</style>\n"],"mappings":";;EAESA,KAAK,EAAC;AAAQ;mBAFvB;mBAAA;;EAqBSA,KAAK,EAAC;AAAY;;EAGlBA,KAAK,EAAC;AAAY;;;uBAvBzBC,YAAA,CA2BUC,MAAA;IA3BDF,KAAK,EAAC,SAAS;IAAEG,QAAM,EADlCC,cAAA,CAC4CF,MAAA,CAAAG,KAAK;;IADjDC,OAAA,EAAAC,QAAA,CAEI,MAMM,CANNC,mBAAA,CAMM,OANNC,UAMM,GALJD,mBAAA,CAGE;MAHIE,GAAG,EAAEC,OAAO;MACbC,MAAM,EAAC,MAAM;MACbC,KAAK,EAAC,OAAO;MAACC,GAAG,EAAC;4BAL7BC,UAAA,G,0BAOMP,mBAAA,CAAgB,WAAb,UAAS,qB,GAEdQ,YAAA,CAKIC,YAAA;MAdRX,OAAA,EAAAC,QAAA,CAUM,MAGE,CAHFC,mBAAA,CAGE;QAHIE,GAAG,EAAEC,OAAO;QACbC,MAAM,EAAC,MAAM;QACbC,KAAK,EAAC,MAAM;QAACC,GAAG,EAAC;8BAZ5BI,UAAA,E;MAAAC,CAAA;QAeIH,YAAA,CAEed,MAAA;MAFDkB,KAAK,EAAC;IAAK;MAf7Bd,OAAA,EAAAC,QAAA,CAgBM,MAAuD,CAAvDS,YAAA,CAAuDd,MAAA;QAhB7DmB,UAAA,EAgByBnB,MAAA,CAAAoB,MAAM;QAhB/B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgByBtB,MAAA,CAAAoB,MAAM,GAAAE,MAAA;QAAEC,WAAW,EAAC;;MAhB7CN,CAAA;QAkBIH,YAAA,CAEed,MAAA;MAFDkB,KAAK,EAAC;IAAK;MAlB7Bd,OAAA,EAAAC,QAAA,CAmBM,MAAyE,CAAzES,YAAA,CAAyEd,MAAA;QAA/DwB,IAAI,EAAC,UAAU;QAnB/BL,UAAA,EAmByCnB,MAAA,CAAAyB,QAAQ;QAnBjD,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAmByCtB,MAAA,CAAAyB,QAAQ,GAAAH,MAAA;QAAEC,WAAW,EAAC;;MAnB/DN,CAAA;QAqBIX,mBAAA,CAEM,OAFNoB,UAEM,GADJZ,YAAA,CAA6Id,MAAA;MAAlIwB,IAAI,EAAC,SAAS;MAAEG,OAAK,EAAE3B,MAAA,CAAAG,KAAK;MAAEyB,KAAqF,EAArF;QAAA;QAAA;QAAA;QAAA;MAAA;;MAtB/CxB,OAAA,EAAAC,QAAA,CAsBqI,MAAEgB,MAAA,QAAAA,MAAA,OAtBvIQ,gBAAA,CAsBqI,IAAE,E;MAtBvIZ,CAAA;UAwBIX,mBAAA,CAEM,OAFNwB,UAEM,GADJhB,YAAA,CAAgFd,MAAA;MAApE2B,OAAK,EAAE3B,MAAA,CAAA+B,QAAQ;MAAEH,KAAoC,EAApC;QAAA;QAAA;MAAA;;MAzBnCxB,OAAA,EAAAC,QAAA,CAyBwE,MAAEgB,MAAA,QAAAA,MAAA,OAzB1EQ,gBAAA,CAyBwE,IAAE,E;MAzB1EZ,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}