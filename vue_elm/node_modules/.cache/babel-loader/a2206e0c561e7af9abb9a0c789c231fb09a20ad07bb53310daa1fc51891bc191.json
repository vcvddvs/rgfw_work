{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { orderApi } from '../utils/api';\nimport { businessApi } from '../utils/api'; // Added import for businessApi\n\nconst baseURL = 'http://localhost:8090'; // API网关地址\n\nexport default {\n  __name: 'historyComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const orders = ref([]);\n    const activeTab = ref('all');\n    onMounted(() => {\n      fetchOrders();\n    });\n    const goBack = () => {\n      router.push('/Index-Component');\n    };\n    const setActiveTab = tab => {\n      activeTab.value = tab;\n      // 切换标签时滚动到顶部\n      window.scrollTo(0, 0);\n    };\n\n    // 将逗号分隔的字符串转换为数组\n    const getArrayFromString = str => {\n      if (!str) return [];\n\n      // 特殊处理Base64编码的情况，避免在逗号处分割Base64数据\n      if (typeof str === 'string' && (str.startsWith('data:image') || str.includes('base64'))) {\n        return [str]; // 如果是单个Base64字符串，直接返回单元素数组\n      }\n      return str.split(',');\n    };\n\n    // 处理图片URL\n    const getImageUrl = imgPath => {\n      if (!imgPath) {\n        console.log('图片路径为空，使用默认图片');\n        return require('@/assets/img/BUSINESS/img.png');\n      }\n      console.log('处理图片路径:', typeof imgPath, imgPath.substring(0, 30) + '...');\n\n      // 检查是否是Base64编码的图片数据\n      if (typeof imgPath === 'string' && (imgPath.startsWith('data:image') || imgPath.startsWith('iVBOR') ||\n      // PNG in base64 often starts with this\n      imgPath.includes('base64'))) {\n        // 确保Base64字符串格式正确\n        if (!imgPath.startsWith('data:')) {\n          // 如果只有Base64内容没有前缀，添加适当的前缀\n          if (imgPath.startsWith('iVBOR')) {\n            imgPath = 'data:image/png;base64,' + imgPath;\n          } else {\n            imgPath = 'data:image/jpeg;base64,' + imgPath;\n          }\n        }\n        console.log('使用Base64图片数据');\n        return imgPath;\n      }\n\n      // 如果是完整URL，直接返回\n      if (imgPath.startsWith('http')) {\n        console.log('使用HTTP URL');\n        return imgPath;\n      }\n\n      // 如果是以/assets开头的路径，转换为正确的路径\n      if (imgPath.startsWith('/assets/')) {\n        // 去掉开头的/assets/，因为在项目中assets是相对路径\n        const relativePath = imgPath.replace('/assets/', '');\n        try {\n          console.log('尝试加载assets路径图片:', relativePath);\n          return require(`@/assets/${relativePath}`);\n        } catch (e) {\n          console.log('无法加载assets路径图片，尝试其他方式:', e);\n          // 尝试通过API网关获取\n          return baseURL + imgPath;\n        }\n      }\n\n      // 如果是相对路径，添加baseURL\n      if (imgPath.startsWith('/')) {\n        console.log('使用相对路径加baseURL');\n        return baseURL + imgPath;\n      }\n\n      // 尝试加载项目中的图片\n      try {\n        // 首先尝试从BUSINESS目录加载\n        if (!imgPath.includes('/')) {\n          try {\n            console.log('尝试从BUSINESS目录加载');\n            return require('@/assets/img/BUSINESS/' + imgPath);\n          } catch (e) {\n            console.log('BUSINESS目录未找到图片，尝试其他路径');\n          }\n        }\n\n        // 然后尝试从普通img目录加载\n        console.log('尝试从img目录加载');\n        return require('@/assets/img/' + imgPath);\n      } catch (e) {\n        console.error('无法加载图片:', imgPath, e);\n        return require('@/assets/img/BUSINESS/img.png');\n      }\n    };\n\n    // 处理图片加载错误\n    const handleImageError = (e, type) => {\n      if (type === 'business') {\n        e.target.src = require('@/assets/img/BUSINESS/img.png');\n      } else {\n        e.target.src = require('@/assets/img/sp01.png');\n      }\n    };\n\n    // 再次下单\n    const reorder = order => {\n      // 实现再次下单功能\n      router.push(`/business-component/${order.businessId}`);\n    };\n\n    // 前往评价页面\n    const goToRating = order => {\n      console.log('Order object:', order);\n\n      // 确保businessId存在且为有效值\n      const businessId = order.businessId || order.business?.businessId || '1';\n\n      // 如果商家图片为空，尝试再次获取\n      if (!order.businessImg && businessId) {\n        businessApi.getBusinessById(businessId).then(businessInfo => {\n          if (businessInfo && businessInfo.businessImg) {\n            navigateToRating(order, businessInfo.businessImg);\n          } else {\n            navigateToRating(order);\n          }\n        }).catch(error => {\n          console.error('获取商家信息失败:', error);\n          navigateToRating(order);\n        });\n      } else {\n        navigateToRating(order);\n      }\n    };\n\n    // 导航到评价页面\n    const navigateToRating = (order, businessImg = null) => {\n      router.push({\n        name: 'Rating',\n        params: {\n          orderId: order.orderId || '1',\n          businessId: order.businessId || order.business?.businessId || '1',\n          businessName: order.businessName || '未知商家'\n        },\n        query: {\n          businessImg: businessImg || order.businessImg || '',\n          orderDate: order.orderDate || ''\n        }\n      });\n    };\n\n    // 检查订单是否已评价\n    const isOrderRated = orderId => {\n      try {\n        // 检查本地存储中是否有该订单的评价\n        const ratingsString = localStorage.getItem('localRatings');\n        console.log(`检查订单 ${orderId} 是否已评价, 本地存储:`, ratingsString);\n        if (ratingsString) {\n          const ratings = JSON.parse(ratingsString);\n          console.log('解析后的本地评价:', ratings);\n\n          // 确保使用数字类型进行比较\n          const isRated = ratings.some(r => r.orderId === Number(orderId));\n          console.log(`订单 ${orderId} 已评价状态:`, isRated);\n          return isRated;\n        }\n      } catch (error) {\n        console.error('检查订单评价状态失败:', error);\n      }\n      return false;\n    };\n    const fetchOrders = async () => {\n      try {\n        const response = await orderApi.getOrderHistory();\n        console.log('订单历史原始响应:', response);\n        if (response && Array.isArray(response)) {\n          orders.value = response;\n        } else if (response && response.data && Array.isArray(response.data)) {\n          orders.value = response.data;\n        } else if (response && typeof response === 'object') {\n          // 尝试从响应中提取数据\n          console.log('尝试从响应中提取订单数据:', response);\n          const possibleOrderArrays = [response.data, response.result, response.content, response.records, response.list, response.orders];\n          for (const arr of possibleOrderArrays) {\n            if (arr && Array.isArray(arr)) {\n              console.log('找到订单数组:', arr);\n              orders.value = arr;\n              break;\n            }\n          }\n        }\n\n        // 详细记录每个订单的图片信息\n        console.log('订单数据处理前:', JSON.stringify(orders.value.map(order => ({\n          orderId: order.orderId,\n          businessImg: order.businessImg ? order.businessImg.substring(0, 30) + '...' : 'null',\n          businessImgType: order.businessImg ? typeof order.businessImg : 'null',\n          hasBusinessImg: !!order.businessImg,\n          foodImgs: order.foodImgs ? order.foodImgs.substring(0, 30) + '...' : 'null',\n          // 添加更多详细的食品图片信息\n          foodImgsArray: getArrayFromString(order.foodImgs),\n          foodImgsFirstItem: getArrayFromString(order.foodImgs)[0] ? getArrayFromString(order.foodImgs)[0].substring(0, 30) + '...' : 'null'\n        }))));\n\n        // 确保每个订单对象都有必要的属性\n        orders.value = orders.value.map(order => {\n          // 使用数据库中存储的商家名称和图片\n          const businessName = order.businessName || order.business?.businessName || '未知商家';\n          const businessImg = order.businessImg || order.business?.businessImg || '';\n          console.log(`订单 ${order.orderId} 的商家图片:`, businessImg ? businessImg.substring(0, 30) + '...' : 'null', '类型:', typeof businessImg);\n\n          // 检查是否有订单详情中的食品图片\n          if (order.orderDetailList && Array.isArray(order.orderDetailList)) {\n            console.log(`订单 ${order.orderId} 的食品图片:`, order.orderDetailList.map(detail => ({\n              foodId: detail.foodId,\n              foodImg: detail.foodImg ? detail.foodImg.substring(0, 30) + '...' : 'null'\n            })));\n          }\n\n          // 打印foodImgs字段的详细信息\n          if (order.foodImgs) {\n            console.log(`订单 ${order.orderId} 的foodImgs字段:`, order.foodImgs);\n            const foodImgsArray = getArrayFromString(order.foodImgs);\n            console.log(`订单 ${order.orderId} 的foodImgs数组:`, foodImgsArray);\n\n            // 检查每个食品图片URL\n            foodImgsArray.forEach((imgUrl, index) => {\n              console.log(`食品图片 ${index}:`, imgUrl);\n              console.log(`处理后的图片URL:`, getImageUrl(imgUrl));\n            });\n          }\n          return {\n            ...order,\n            businessId: order.businessId || order.business?.businessId || '1',\n            businessName: businessName,\n            businessImg: businessImg,\n            orderDate: order.orderDate || new Date(order.orderTime || Date.now()).toLocaleString()\n          };\n        });\n        console.log('处理后的订单数据:', orders.value);\n\n        // 不再需要为每个订单获取商家信息，因为数据库中已经存储了商家名称和图片\n      } catch (error) {\n        console.error('获取订单历史失败:', error);\n      }\n    };\n\n    // 根据选中的标签筛选订单\n    const filteredOrders = computed(() => {\n      if (activeTab.value === 'all') {\n        return orders.value;\n      } else if (activeTab.value === 'inProgress') {\n        // 订单状态：1-已下单/待付款，2-已付款/待接单，3-已接单/配送中\n        return orders.value.filter(order => [1, 2, 3].includes(order.orderState));\n      } else if (activeTab.value === 'toRate') {\n        // 订单状态：5-已完成/待评价\n        return orders.value.filter(order => order.orderState === 5);\n      } else if (activeTab.value === 'refund') {\n        // 订单状态：6-已退款\n        return orders.value.filter(order => order.orderState === 6);\n      }\n      return orders.value;\n    });\n    const __returned__ = {\n      router,\n      orders,\n      activeTab,\n      baseURL,\n      goBack,\n      setActiveTab,\n      getArrayFromString,\n      getImageUrl,\n      handleImageError,\n      reorder,\n      goToRating,\n      navigateToRating,\n      isOrderRated,\n      fetchOrders,\n      filteredOrders,\n      ref,\n      onMounted,\n      computed,\n      get useRouter() {\n        return useRouter;\n      },\n      get orderApi() {\n        return orderApi;\n      },\n      get businessApi() {\n        return businessApi;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRouter","orderApi","businessApi","baseURL","router","orders","activeTab","fetchOrders","goBack","push","setActiveTab","tab","value","window","scrollTo","getArrayFromString","str","startsWith","includes","split","getImageUrl","imgPath","console","log","require","substring","relativePath","replace","e","error","handleImageError","type","target","src","reorder","order","businessId","goToRating","business","businessImg","getBusinessById","then","businessInfo","navigateToRating","catch","name","params","orderId","businessName","query","orderDate","isOrderRated","ratingsString","localStorage","getItem","ratings","JSON","parse","isRated","some","r","Number","response","getOrderHistory","Array","isArray","data","possibleOrderArrays","result","content","records","list","arr","stringify","map","businessImgType","hasBusinessImg","foodImgs","foodImgsArray","foodImgsFirstItem","orderDetailList","detail","foodId","foodImg","forEach","imgUrl","index","Date","orderTime","now","toLocaleString","filteredOrders","filter","orderState"],"sources":["D:/back_elm/vue_elm/src/components/historyComponent.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"header\">\n      <div class=\"search\">\n        <div class=\"search-bottom\">\n          <div class=\"back\">\n            <span class=\"iconfont icon-back\" @click=\"goBack\"></span>\n          </div>\n          <div class=\"search-pt\">\n            <span class=\"iconfont icon-sousuo\" style=\"margin-left: 2vw\"></span>\n            <input style=\"flex:6;\" type=\"text\" placeholder=\"历史信息搜索\"/>\n          </div>\n          <div class=\"box\">\n            <span class=\"iconfont icon-gongjuxiang\"></span>\n            <span class=\"iconfont icon-24gf-ellipsis\"></span>\n          </div>\n        </div>\n        <div class=\"information\">\n          <p :class=\"{ active: activeTab === 'all' }\" @click=\"setActiveTab('all')\">全部</p>\n          <p :class=\"{ active: activeTab === 'inProgress' }\" @click=\"setActiveTab('inProgress')\">进行中</p>\n          <p :class=\"{ active: activeTab === 'toRate' }\" @click=\"setActiveTab('toRate')\">待评价</p>\n          <p :class=\"{ active: activeTab === 'refund' }\" @click=\"setActiveTab('refund')\">退款</p>\n        </div>\n      </div>\n    </div>\n    <div class=\"body\">\n      <div v-for=\"order in filteredOrders\" :key=\"order.orderId\" class=\"order-card\">\n        <!-- 订单头部：商家信息和订单总价 -->\n        <div class=\"order-header\">\n          <div class=\"business-info\">\n            <img :src=\"getImageUrl(order.businessImg)\" @error=\"handleImageError($event, 'business')\" class=\"business-img\"/>\n            <div class=\"business-details\">\n              <div class=\"business-name\">{{ order.businessName }}</div>\n              <div class=\"delivery-price\">{{ order.deliveryPrice }}元无门槛</div>\n            </div>\n          </div>\n          <div class=\"order-price\">&#165;{{ order.orderTotal }}</div>\n        </div>\n        \n        <!-- 订单内容：食品列表 -->\n        <div class=\"order-content\">\n          <div class=\"food-list\">\n            <div v-for=\"(foodName, index) in getArrayFromString(order.foodNames)\" :key=\"index\" class=\"food-item\">\n              <div class=\"food-left\">\n                <img \n                  :src=\"getImageUrl(getArrayFromString(order.foodImgs)[index] || '')\" \n                  @error=\"handleImageError($event, 'food')\" \n                  class=\"food-img\"\n                />\n              </div>\n              <div class=\"food-right\">\n                <div class=\"food-name\">{{ foodName }}</div>\n                <div class=\"food-quantity\">x{{ getArrayFromString(order.quantities)[index] || '1' }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 订单底部：订单时间和操作按钮 -->\n        <div class=\"order-footer\">\n          <div class=\"order-date\">{{ order.orderDate }}</div>\n          <div class=\"order-actions\">\n            <button class=\"reorder-btn\" @click=\"reorder(order)\">再来一单</button>\n            <button \n              v-if=\"isOrderRated(order.orderId)\" \n              class=\"rated-btn\" \n              @click=\"goToRating(order)\"\n            >\n              修改评价\n            </button>\n            <button \n              v-else \n              class=\"rating-btn\" \n              @click=\"goToRating(order)\"\n            >\n              评价订单\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { orderApi } from '../utils/api';\nimport { businessApi } from '../utils/api'; // Added import for businessApi\n\nconst router = useRouter();\nconst orders = ref([]);\nconst activeTab = ref('all');\nconst baseURL = 'http://localhost:8090'; // API网关地址\n\nonMounted(() => {\n  fetchOrders();\n});\n\nconst goBack = () => {\n  router.push('/Index-Component');\n};\n\nconst setActiveTab = (tab) => {\n  activeTab.value = tab;\n  // 切换标签时滚动到顶部\n  window.scrollTo(0, 0);\n};\n\n// 将逗号分隔的字符串转换为数组\nconst getArrayFromString = (str) => {\n  if (!str) return [];\n  \n  // 特殊处理Base64编码的情况，避免在逗号处分割Base64数据\n  if (typeof str === 'string' && \n     (str.startsWith('data:image') || \n      str.includes('base64'))) {\n    return [str]; // 如果是单个Base64字符串，直接返回单元素数组\n  }\n  \n  return str.split(',');\n};\n\n// 处理图片URL\nconst getImageUrl = (imgPath) => {\n  if (!imgPath) {\n    console.log('图片路径为空，使用默认图片');\n    return require('@/assets/img/BUSINESS/img.png');\n  }\n  \n  console.log('处理图片路径:', typeof imgPath, imgPath.substring(0, 30) + '...');\n  \n  // 检查是否是Base64编码的图片数据\n  if (typeof imgPath === 'string' && \n     (imgPath.startsWith('data:image') || \n      imgPath.startsWith('iVBOR') || // PNG in base64 often starts with this\n      imgPath.includes('base64'))) {\n    \n    // 确保Base64字符串格式正确\n    if (!imgPath.startsWith('data:')) {\n      // 如果只有Base64内容没有前缀，添加适当的前缀\n      if (imgPath.startsWith('iVBOR')) {\n        imgPath = 'data:image/png;base64,' + imgPath;\n      } else {\n        imgPath = 'data:image/jpeg;base64,' + imgPath;\n      }\n    }\n    \n    console.log('使用Base64图片数据');\n    return imgPath;\n  }\n  \n  // 如果是完整URL，直接返回\n  if (imgPath.startsWith('http')) {\n    console.log('使用HTTP URL');\n    return imgPath;\n  }\n  \n  // 如果是以/assets开头的路径，转换为正确的路径\n  if (imgPath.startsWith('/assets/')) {\n    // 去掉开头的/assets/，因为在项目中assets是相对路径\n    const relativePath = imgPath.replace('/assets/', '');\n    try {\n      console.log('尝试加载assets路径图片:', relativePath);\n      return require(`@/assets/${relativePath}`);\n    } catch (e) {\n      console.log('无法加载assets路径图片，尝试其他方式:', e);\n      // 尝试通过API网关获取\n      return baseURL + imgPath;\n    }\n  }\n  \n  // 如果是相对路径，添加baseURL\n  if (imgPath.startsWith('/')) {\n    console.log('使用相对路径加baseURL');\n    return baseURL + imgPath;\n  }\n  \n  // 尝试加载项目中的图片\n  try {\n    // 首先尝试从BUSINESS目录加载\n    if (!imgPath.includes('/')) {\n      try {\n        console.log('尝试从BUSINESS目录加载');\n        return require('@/assets/img/BUSINESS/' + imgPath);\n      } catch (e) {\n        console.log('BUSINESS目录未找到图片，尝试其他路径');\n      }\n    }\n    \n    // 然后尝试从普通img目录加载\n    console.log('尝试从img目录加载');\n    return require('@/assets/img/' + imgPath);\n  } catch (e) {\n    console.error('无法加载图片:', imgPath, e);\n    return require('@/assets/img/BUSINESS/img.png');\n  }\n};\n\n// 处理图片加载错误\nconst handleImageError = (e, type) => {\n  if (type === 'business') {\n    e.target.src = require('@/assets/img/BUSINESS/img.png');\n  } else {\n    e.target.src = require('@/assets/img/sp01.png');\n  }\n};\n\n// 再次下单\nconst reorder = (order) => {\n  // 实现再次下单功能\n  router.push(`/business-component/${order.businessId}`);\n};\n\n// 前往评价页面\nconst goToRating = (order) => {\n  console.log('Order object:', order);\n  \n  // 确保businessId存在且为有效值\n  const businessId = order.businessId || order.business?.businessId || '1';\n  \n  // 如果商家图片为空，尝试再次获取\n  if (!order.businessImg && businessId) {\n    businessApi.getBusinessById(businessId)\n      .then(businessInfo => {\n        if (businessInfo && businessInfo.businessImg) {\n          navigateToRating(order, businessInfo.businessImg);\n        } else {\n          navigateToRating(order);\n        }\n      })\n      .catch(error => {\n        console.error('获取商家信息失败:', error);\n        navigateToRating(order);\n      });\n  } else {\n    navigateToRating(order);\n  }\n};\n\n// 导航到评价页面\nconst navigateToRating = (order, businessImg = null) => {\n  router.push({\n    name: 'Rating',\n    params: {\n      orderId: order.orderId || '1',\n      businessId: order.businessId || order.business?.businessId || '1',\n      businessName: order.businessName || '未知商家'\n    },\n    query: {\n      businessImg: businessImg || order.businessImg || '',\n      orderDate: order.orderDate || ''\n    }\n  });\n};\n\n// 检查订单是否已评价\nconst isOrderRated = (orderId) => {\n  try {\n    // 检查本地存储中是否有该订单的评价\n    const ratingsString = localStorage.getItem('localRatings');\n    console.log(`检查订单 ${orderId} 是否已评价, 本地存储:`, ratingsString);\n    \n    if (ratingsString) {\n      const ratings = JSON.parse(ratingsString);\n      console.log('解析后的本地评价:', ratings);\n      \n      // 确保使用数字类型进行比较\n      const isRated = ratings.some(r => r.orderId === Number(orderId));\n      console.log(`订单 ${orderId} 已评价状态:`, isRated);\n      return isRated;\n    }\n  } catch (error) {\n    console.error('检查订单评价状态失败:', error);\n  }\n  return false;\n};\n\nconst fetchOrders = async () => {\n  try {\n    const response = await orderApi.getOrderHistory();\n    console.log('订单历史原始响应:', response);\n    \n    if (response && Array.isArray(response)) {\n      orders.value = response;\n    } else if (response && response.data && Array.isArray(response.data)) {\n      orders.value = response.data;\n    } else if (response && typeof response === 'object') {\n      // 尝试从响应中提取数据\n      console.log('尝试从响应中提取订单数据:', response);\n      const possibleOrderArrays = [\n        response.data,\n        response.result,\n        response.content,\n        response.records,\n        response.list,\n        response.orders\n      ];\n      \n      for (const arr of possibleOrderArrays) {\n        if (arr && Array.isArray(arr)) {\n          console.log('找到订单数组:', arr);\n          orders.value = arr;\n          break;\n        }\n      }\n    }\n    \n    // 详细记录每个订单的图片信息\n    console.log('订单数据处理前:', JSON.stringify(orders.value.map(order => ({\n      orderId: order.orderId,\n      businessImg: order.businessImg ? order.businessImg.substring(0, 30) + '...' : 'null',\n      businessImgType: order.businessImg ? typeof order.businessImg : 'null',\n      hasBusinessImg: !!order.businessImg,\n      foodImgs: order.foodImgs ? order.foodImgs.substring(0, 30) + '...' : 'null',\n      // 添加更多详细的食品图片信息\n      foodImgsArray: getArrayFromString(order.foodImgs),\n      foodImgsFirstItem: getArrayFromString(order.foodImgs)[0] ? getArrayFromString(order.foodImgs)[0].substring(0, 30) + '...' : 'null'\n    }))));\n    \n    // 确保每个订单对象都有必要的属性\n    orders.value = orders.value.map(order => {\n      // 使用数据库中存储的商家名称和图片\n      const businessName = order.businessName || order.business?.businessName || '未知商家';\n      const businessImg = order.businessImg || order.business?.businessImg || '';\n      \n      console.log(`订单 ${order.orderId} 的商家图片:`, \n        businessImg ? businessImg.substring(0, 30) + '...' : 'null',\n        '类型:', typeof businessImg);\n      \n      // 检查是否有订单详情中的食品图片\n      if (order.orderDetailList && Array.isArray(order.orderDetailList)) {\n        console.log(`订单 ${order.orderId} 的食品图片:`, \n          order.orderDetailList.map(detail => ({\n            foodId: detail.foodId,\n            foodImg: detail.foodImg ? detail.foodImg.substring(0, 30) + '...' : 'null'\n          })));\n      }\n      \n      // 打印foodImgs字段的详细信息\n      if (order.foodImgs) {\n        console.log(`订单 ${order.orderId} 的foodImgs字段:`, order.foodImgs);\n        const foodImgsArray = getArrayFromString(order.foodImgs);\n        console.log(`订单 ${order.orderId} 的foodImgs数组:`, foodImgsArray);\n        \n        // 检查每个食品图片URL\n        foodImgsArray.forEach((imgUrl, index) => {\n          console.log(`食品图片 ${index}:`, imgUrl);\n          console.log(`处理后的图片URL:`, getImageUrl(imgUrl));\n        });\n      }\n      \n      return {\n        ...order,\n        businessId: order.businessId || order.business?.businessId || '1',\n        businessName: businessName,\n        businessImg: businessImg,\n        orderDate: order.orderDate || new Date(order.orderTime || Date.now()).toLocaleString()\n      };\n    });\n    \n    console.log('处理后的订单数据:', orders.value);\n    \n    // 不再需要为每个订单获取商家信息，因为数据库中已经存储了商家名称和图片\n  } catch (error) {\n    console.error('获取订单历史失败:', error);\n  }\n};\n\n// 根据选中的标签筛选订单\nconst filteredOrders = computed(() => {\n  if (activeTab.value === 'all') {\n    return orders.value;\n  } else if (activeTab.value === 'inProgress') {\n    // 订单状态：1-已下单/待付款，2-已付款/待接单，3-已接单/配送中\n    return orders.value.filter(order => [1, 2, 3].includes(order.orderState));\n  } else if (activeTab.value === 'toRate') {\n    // 订单状态：5-已完成/待评价\n    return orders.value.filter(order => order.orderState === 5);\n  } else if (activeTab.value === 'refund') {\n    // 订单状态：6-已退款\n    return orders.value.filter(order => order.orderState === 6);\n  }\n  return orders.value;\n});\n</script>\n\n<style scoped>\n.wrapper {\n  width: 100%;\n  height: 100%;\n  background-color: #f5f5f5;\n  padding-bottom: 20px;\n}\n\n.header {\n  background-color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  z-index: 10;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.search-bottom {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  height: 40px;\n}\n\n.back .icon-back {\n  font-size: 20px;\n  padding: 0 10px;\n}\n\n.search-pt {\n  flex: 1;\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.search-pt input {\n  width: 100%;\n  border: none;\n  background-color: #f5f5f5;\n  padding: 8px 8px 8px 30px;\n  border-radius: 20px;\n  font-size: 14px;\n}\n\n.search-pt .icon-sousuo {\n  position: absolute;\n  left: 10px;\n  font-size: 16px;\n  color: #999;\n}\n\n.box span {\n  padding: 0 10px;\n  font-size: 20px;\n}\n\n.information {\n  display: flex;\n  justify-content: space-around;\n  padding: 10px 0;\n  border-bottom: 1px solid #eee;\n}\n\n.information p {\n  padding: 5px 10px;\n  cursor: pointer;\n  position: relative;\n}\n\n.information p.active {\n  color: #0097ff;\n  font-weight: bold;\n}\n\n.information p.active::after {\n  content: '';\n  position: absolute;\n  bottom: -5px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 20px;\n  height: 3px;\n  background-color: #0097ff;\n  border-radius: 3px;\n}\n\n.body {\n  margin-top: 100px;\n  padding: 10px;\n}\n\n.order-card {\n  background-color: white;\n  border-radius: 10px;\n  margin-bottom: 15px;\n  padding: 15px;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n}\n\n.order-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.business-info {\n  display: flex;\n  align-items: center;\n}\n\n.business-img {\n  width: 50px;\n  height: 50px;\n  border-radius: 5px;\n  object-fit: cover;\n  margin-right: 10px;\n}\n\n.business-details {\n  display: flex;\n  flex-direction: column;\n}\n\n.business-name {\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 5px;\n}\n\n.delivery-price {\n  font-size: 12px;\n  color: #ff6b01;\n  background-color: #fff5e6;\n  padding: 2px 5px;\n  border-radius: 3px;\n  display: inline-block;\n}\n\n.order-price {\n  font-size: 16px;\n  font-weight: bold;\n  color: #333;\n}\n\n.order-content {\n  padding: 10px 0;\n}\n\n.food-list {\n  display: flex;\n  flex-direction: column;\n}\n\n.food-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  padding: 10px;\n}\n\n.food-left {\n  margin-right: 15px;\n}\n\n.food-img {\n  width: 60px;\n  height: 60px;\n  border-radius: 5px;\n  object-fit: cover;\n}\n\n.food-right {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.food-name {\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 8px;\n}\n\n.food-quantity {\n  font-size: 12px;\n  color: #666;\n  background-color: #f0f0f0;\n  padding: 2px 8px;\n  border-radius: 12px;\n  display: inline-block;\n  width: fit-content;\n}\n\n.order-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 10px;\n  border-top: 1px solid #f0f0f0;\n}\n\n.order-date {\n  font-size: 12px;\n  color: #999;\n}\n\n.order-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.reorder-btn, .rating-btn, .rated-btn {\n  border: none;\n  padding: 8px 15px;\n  border-radius: 20px;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.reorder-btn {\n  background-color: #0097ff;\n  color: white;\n}\n\n.rating-btn {\n  background-color: #ff6b01;\n  color: white;\n}\n\n.rated-btn {\n  background-color: #4caf50;\n  color: white;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}