{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"button-box\"\n};\nconst _hoisted_5 = {\n  class: \"button-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_h = _resolveComponent(\"h\");\n  return _openBlock(), _createBlock($setup[\"ElForm\"], {\n    class: \"wrapper\",\n    onSubmit: _withModifiers($setup.login, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n      src: require('@/assets/img_1.png'),\n      height: \"50px\",\n      width: \"70px\",\n      alt: \"描述\"\n    }, null, 8 /* PROPS */, _hoisted_2), _cache[2] || (_cache[2] = _createElementVNode(\"p\", null, \"欢迎使用 饿了么\", -1 /* HOISTED */))]), _createVNode(_component_h, null, {\n      default: _withCtx(() => [_createElementVNode(\"img\", {\n        src: require('@/assets/elm_title.gif'),\n        height: \"100%\",\n        width: \"100%\",\n        alt: \"描述\"\n      }, null, 8 /* PROPS */, _hoisted_3)]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElFormItem\"], {\n      label: \"账户:\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ElInput\"], {\n        modelValue: $setup.userId,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userId = $event),\n        placeholder: \"账户\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElFormItem\"], {\n      label: \"密码：\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ElInput\"], {\n        type: \"password\",\n        modelValue: $setup.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n        placeholder: \"密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_4, [_createVNode($setup[\"ElButton\"], {\n      type: \"primary\",\n      onClick: $setup.login,\n      style: {\n        \"width\": \"100%\",\n        \"background-color\": \"#409EFF\"\n      }\n    }, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"登录\")])),\n      _: 1 /* STABLE */\n    })]), _createElementVNode(\"div\", _hoisted_5, [_createVNode($setup[\"ElButton\"], {\n      onClick: $setup.register,\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"注册\")])),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","$setup","onSubmit","_withModifiers","login","default","_withCtx","_createElementVNode","_hoisted_1","src","require","height","width","alt","_hoisted_2","_createVNode","_component_h","_hoisted_3","_","label","modelValue","userId","_cache","$event","placeholder","type","password","_hoisted_4","onClick","style","_createTextVNode","_hoisted_5","register"],"sources":["C:\\Users\\asus\\Desktop\\vue_elm\\vue_elm\\src\\components\\loginComponent.vue"],"sourcesContent":["<template>\r\n  <el-form class=\"wrapper\" @submit.prevent=\"login\">\r\n    <div class=\"header\">\r\n      <img :src=\"require('@/assets/img_1.png')\"\r\n           height=\"50px\"\r\n           width=\"70px\" alt=\"描述\"\r\n      />\r\n      <p>欢迎使用    饿了么</p>\r\n    </div>\r\n    <h>\r\n      <img :src=\"require('@/assets/elm_title.gif')\"\r\n           height=\"100%\"\r\n           width=\"100%\" alt=\"描述\"\r\n      />\r\n    </h>\r\n    <el-form-item label=\"账户:\">\r\n      <el-input v-model=\"userId\" placeholder=\"账户\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"密码：\">\r\n      <el-input type=\"password\" v-model=\"password\" placeholder=\"密码\"></el-input>\r\n    </el-form-item>\r\n    <div class=\"button-box\">\r\n      <el-button type=\"primary\" @click=\"login\" style=\"width: 100%; background-color: #409EFF;\">登录</el-button>\r\n    </div>\r\n    <div class=\"button-box\">\r\n      <el-button @click=\"register\" style=\"width: 100%;\">注册</el-button>\r\n    </div>\r\n\r\n  </el-form>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElForm, ElFormItem, ElInput, ElButton } from 'element-plus';\r\n\r\nconst router = useRouter();\r\nconst userId = ref('');\r\nconst password = ref('');\r\n\r\nconst login = async () => {\r\n  try {\r\n    const response = await axios.post('http://localhost:8080/login', {\r\n      userId: userId.value,\r\n      password: password.value\r\n    });\r\n    if (response.data && response.data.success) {\r\n      alert('登录成功');\r\n      localStorage.setItem('userId', response.data.data.userId); // 保存 userId 到本地存储\r\n      console.log('User ID stored in localStorage:', localStorage.getItem('userId'));\r\n      router.push('/Index-Component');\r\n    } else {\r\n      alert('登录失败:', response.data ? response.data.message : '未知错误');\r\n    }\r\n  } catch (error) {\r\n    alert('登录失败:', error.message || '网络错误');\r\n  }\r\n};\r\n\r\nconst register = () => {\r\n  router.push('/Register-component');\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/*顶部样式*/\r\n.button-box button:hover {\r\n  background-color: #17BAF9; /* 鼠标悬停时的背景色 */\r\n}\r\n\r\n.button-box button:active {\r\n  background-color: #288b52; /* 鼠标点击时的背景色 */\r\n}\r\n\r\n/*logo样式*/\r\n.wrapper .header {\r\n  width: 100%;\r\n  display: flex;\r\n  color: white;\r\n  align-items: center;\r\n\r\n}\r\n\r\n.wrapper .header p {\r\n  font-size: 5vw;\r\n  font-weight: bolder;\r\n  color: #17BAF9;\r\n}\r\n\r\n/*主体部分*/\r\n.wrapper .body .logins div {\r\n  display: flex;\r\n  box-sizing: border-box;\r\n  padding: 4vw 3vw 0 3vw;\r\n  align-items: center;\r\n}\r\n\r\n/* 定义输入框的基本样式 */\r\n.el-input__inner {\r\n  border: none; /* 移除输入框的边框 */\r\n  border-bottom: 2px solid #dcdfe6; /* 设置底部边框 */\r\n  border-radius: 0; /* 移除圆角 */\r\n  transition: border-color 0.3s; /* 平滑过渡效果 */\r\n}\r\n\r\n/* 定义输入框的 hover 状态 */\r\n.el-input__inner:hover {\r\n  border-color: #409EFF; /* 鼠标悬停时的边框颜色 */\r\n}\r\n\r\n/* 定义输入框的 focus 状态 */\r\n.el-input__inner:focus {\r\n  border-color: #409EFF; /* 输入框聚焦时的边框颜色 */\r\n  box-shadow: 0 0 5px rgba(64, 158, 255, 0.5); /* 添加阴影效果 */\r\n}\r\n\r\n.wrapper .body .logins div .content input {\r\n  border: none;\r\n  outline: none;\r\n  height: 6vw;\r\n  background-color: white;\r\n}\r\n\r\n.wrapper .body .button-box button {\r\n  font-size: 5vw;\r\n  width: 100%;\r\n  font-weight: 700;\r\n  color: white;\r\n  background-color: #38ca73;\r\n  border: none;\r\n  border-radius: 15px;\r\n  height: 10vw;\r\n}\r\n\r\n\r\n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAQ;mBAFvB;mBAAA;;EAqBSA,KAAK,EAAC;AAAY;;EAGlBA,KAAK,EAAC;AAAY;;;uBAvBzBC,YAAA,CA2BUC,MAAA;IA3BDF,KAAK,EAAC,SAAS;IAAEG,QAAM,EADlCC,cAAA,CAC4CF,MAAA,CAAAG,KAAK;;IADjDC,OAAA,EAAAC,QAAA,CAEI,MAMM,CANNC,mBAAA,CAMM,OANNC,UAMM,GALJD,mBAAA,CAGE;MAHIE,GAAG,EAAEC,OAAO;MACbC,MAAM,EAAC,MAAM;MACbC,KAAK,EAAC,MAAM;MAACC,GAAG,EAAC;4BAL5BC,UAAA,G,0BAOMP,mBAAA,CAAkB,WAAf,UAAW,qB,GAEhBQ,YAAA,CAKIC,YAAA;MAdRX,OAAA,EAAAC,QAAA,CAUM,MAGE,CAHFC,mBAAA,CAGE;QAHIE,GAAG,EAAEC,OAAO;QACbC,MAAM,EAAC,MAAM;QACbC,KAAK,EAAC,MAAM;QAACC,GAAG,EAAC;8BAZ5BI,UAAA,E;MAAAC,CAAA;QAeIH,YAAA,CAEed,MAAA;MAFDkB,KAAK,EAAC;IAAK;MAf7Bd,OAAA,EAAAC,QAAA,CAgBM,MAAuD,CAAvDS,YAAA,CAAuDd,MAAA;QAhB7DmB,UAAA,EAgByBnB,MAAA,CAAAoB,MAAM;QAhB/B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgByBtB,MAAA,CAAAoB,MAAM,GAAAE,MAAA;QAAEC,WAAW,EAAC;;MAhB7CN,CAAA;QAkBIH,YAAA,CAEed,MAAA;MAFDkB,KAAK,EAAC;IAAK;MAlB7Bd,OAAA,EAAAC,QAAA,CAmBM,MAAyE,CAAzES,YAAA,CAAyEd,MAAA;QAA/DwB,IAAI,EAAC,UAAU;QAnB/BL,UAAA,EAmByCnB,MAAA,CAAAyB,QAAQ;QAnBjD,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAmByCtB,MAAA,CAAAyB,QAAQ,GAAAH,MAAA;QAAEC,WAAW,EAAC;;MAnB/DN,CAAA;QAqBIX,mBAAA,CAEM,OAFNoB,UAEM,GADJZ,YAAA,CAAuGd,MAAA;MAA5FwB,IAAI,EAAC,SAAS;MAAEG,OAAK,EAAE3B,MAAA,CAAAG,KAAK;MAAEyB,KAA+C,EAA/C;QAAA;QAAA;MAAA;;MAtB/CxB,OAAA,EAAAC,QAAA,CAsB+F,MAAEgB,MAAA,QAAAA,MAAA,OAtBjGQ,gBAAA,CAsB+F,IAAE,E;MAtBjGZ,CAAA;UAwBIX,mBAAA,CAEM,OAFNwB,UAEM,GADJhB,YAAA,CAAgEd,MAAA;MAApD2B,OAAK,EAAE3B,MAAA,CAAA+B,QAAQ;MAAEH,KAAoB,EAApB;QAAA;MAAA;;MAzBnCxB,OAAA,EAAAC,QAAA,CAyBwD,MAAEgB,MAAA,QAAAA,MAAA,OAzB1DQ,gBAAA,CAyBwD,IAAE,E;MAzB1DZ,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}