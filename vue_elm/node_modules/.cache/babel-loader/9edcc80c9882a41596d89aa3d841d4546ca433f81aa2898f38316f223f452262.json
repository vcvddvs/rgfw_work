{"ast":null,"code":"import axios from 'axios';\nimport { getToken, removeToken } from './auth';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: 'http://localhost:8090',\n  // 通过API网关访问所有微服务\n  timeout: 5000,\n  withCredentials: false // 不携带凭证，避免CORS预检请求问题\n});\n\n// 请求拦截器\napi.interceptors.request.use(config => {\n  const token = getToken();\n  console.log('发送请求前的token:', token);\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n    console.log('请求头中的Authorization:', config.headers['Authorization']);\n  } else {\n    console.warn('Token不存在，请求可能会被拒绝');\n  }\n  console.log('完整的请求配置:', {\n    url: config.url,\n    method: config.method,\n    headers: config.headers,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('请求拦截器错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\napi.interceptors.response.use(response => {\n  console.log('收到响应:', response);\n  return response.data;\n}, error => {\n  console.error('响应错误:', error);\n  if (error.response?.status === 401) {\n    removeToken();\n    // 不在这里处理路由跳转，而是抛出特定的错误\n    error.isAuthError = true;\n  }\n  return Promise.reject(error);\n});\n\n// 用户相关API\nexport const userApi = {\n  login: data => api.post('/user/login', data),\n  register: data => api.post('/user/register', data),\n  getUserInfo: userId => api.get(`/user/${userId}`)\n};\n\n// 商家相关API\nexport const businessApi = {\n  getFoodList: businessId => api.get(`/business/${businessId}/foods`),\n  getBusinessInfo: businessId => api.get(`/business/${businessId}`),\n  getBusinessList: (page, size) => api.get(`/business/list?page=${page}&size=${size}`),\n  getBusinessById: businessId => api.get(`/business/${businessId}`),\n  getFoodsByBusinessId: businessId => api.get(`/food/listByBusinessId/${businessId}`)\n};\n\n// 订单相关API\nexport const orderApi = {\n  createOrder: data => api.post('/orders/', data),\n  getOrderById: orderId => api.get(`/orders/${orderId}`),\n  getOrdersByUserId: userId => api.get(`/orders/user/${userId}`)\n};\n\n// 购物车相关API\nexport const cartApi = {\n  addToCart: data => api.post('/cart/', data),\n  getCartByUserId: userId => api.get(`/cart/user/${userId}`),\n  deleteCartItem: cartId => api.delete(`/cart/${cartId}`),\n  checkout: data => api.post('/cart/checkout', data),\n  getCart: userId => api.get(`/cart/${userId}`),\n  updateCart: data => api.put('/cart', data)\n};\n\n// 配送地址相关API\nexport const deliveryAddressApi = {\n  getDeliveryAddressesByUserId: userId => api.get(`/deliveryAddress/listByUserId/${userId}`),\n  addDeliveryAddress: data => api.post('/deliveryAddress/', data),\n  updateDeliveryAddress: data => api.put('/deliveryAddress/', data),\n  deleteDeliveryAddress: daId => api.delete(`/deliveryAddress/${daId}`)\n};\n\n// 支付相关API\nexport const paymentApi = {\n  processPayment: data => api.post('/payment/process', data),\n  verifyPayment: paymentId => api.get(`/payment/verify/${paymentId}`)\n};\n\n// 评价相关API\nexport const ratingApi = {\n  submitRating: data => api.post('/rating/', data),\n  getRatingsByBusinessId: businessId => api.get(`/rating/business/${businessId}`)\n};\nexport default api;","map":{"version":3,"names":["axios","getToken","removeToken","api","create","baseURL","timeout","withCredentials","interceptors","request","use","config","token","console","log","headers","warn","url","method","data","error","Promise","reject","response","status","isAuthError","userApi","login","post","register","getUserInfo","userId","get","businessApi","getFoodList","businessId","getBusinessInfo","getBusinessList","page","size","getBusinessById","getFoodsByBusinessId","orderApi","createOrder","getOrderById","orderId","getOrdersByUserId","cartApi","addToCart","getCartByUserId","deleteCartItem","cartId","delete","checkout","getCart","updateCart","put","deliveryAddressApi","getDeliveryAddressesByUserId","addDeliveryAddress","updateDeliveryAddress","deleteDeliveryAddress","daId","paymentApi","processPayment","verifyPayment","paymentId","ratingApi","submitRating","getRatingsByBusinessId"],"sources":["D:/back_elm/vue_elm/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\nimport { getToken, removeToken } from './auth';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: 'http://localhost:8090', // 通过API网关访问所有微服务\n  timeout: 5000,\n  withCredentials: false // 不携带凭证，避免CORS预检请求问题\n});\n\n// 请求拦截器\napi.interceptors.request.use(\n  config => {\n    const token = getToken();\n    console.log('发送请求前的token:', token);\n    \n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n      console.log('请求头中的Authorization:', config.headers['Authorization']);\n    } else {\n      console.warn('Token不存在，请求可能会被拒绝');\n    }\n    \n    console.log('完整的请求配置:', {\n      url: config.url,\n      method: config.method,\n      headers: config.headers,\n      data: config.data\n    });\n    \n    return config;\n  },\n  error => {\n    console.error('请求拦截器错误:', error);\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\napi.interceptors.response.use(\n  response => {\n    console.log('收到响应:', response);\n    return response.data;\n  },\n  error => {\n    console.error('响应错误:', error);\n    if (error.response?.status === 401) {\n      removeToken();\n      // 不在这里处理路由跳转，而是抛出特定的错误\n      error.isAuthError = true;\n    }\n    return Promise.reject(error);\n  }\n);\n\n// 用户相关API\nexport const userApi = {\n  login: (data) => api.post('/user/login', data),\n  register: (data) => api.post('/user/register', data),\n  getUserInfo: (userId) => api.get(`/user/${userId}`)\n};\n\n// 商家相关API\nexport const businessApi = {\n  getFoodList: (businessId) => api.get(`/business/${businessId}/foods`),\n  getBusinessInfo: (businessId) => api.get(`/business/${businessId}`),\n  getBusinessList: (page, size) => api.get(`/business/list?page=${page}&size=${size}`),\n  getBusinessById: (businessId) => api.get(`/business/${businessId}`),\n  getFoodsByBusinessId: (businessId) => api.get(`/food/listByBusinessId/${businessId}`)\n};\n\n// 订单相关API\nexport const orderApi = {\n  createOrder: (data) => api.post('/orders/', data),\n  getOrderById: (orderId) => api.get(`/orders/${orderId}`),\n  getOrdersByUserId: (userId) => api.get(`/orders/user/${userId}`)\n};\n\n// 购物车相关API\nexport const cartApi = {\n  addToCart: (data) => api.post('/cart/', data),\n  getCartByUserId: (userId) => api.get(`/cart/user/${userId}`),\n  deleteCartItem: (cartId) => api.delete(`/cart/${cartId}`),\n  checkout: (data) => api.post('/cart/checkout', data),\n  getCart: (userId) => api.get(`/cart/${userId}`),\n  updateCart: (data) => api.put('/cart', data),\n};\n\n// 配送地址相关API\nexport const deliveryAddressApi = {\n  getDeliveryAddressesByUserId: (userId) => api.get(`/deliveryAddress/listByUserId/${userId}`),\n  addDeliveryAddress: (data) => api.post('/deliveryAddress/', data),\n  updateDeliveryAddress: (data) => api.put('/deliveryAddress/', data),\n  deleteDeliveryAddress: (daId) => api.delete(`/deliveryAddress/${daId}`)\n};\n\n// 支付相关API\nexport const paymentApi = {\n  processPayment: (data) => api.post('/payment/process', data),\n  verifyPayment: (paymentId) => api.get(`/payment/verify/${paymentId}`)\n};\n\n// 评价相关API\nexport const ratingApi = {\n  submitRating: (data) => api.post('/rating/', data),\n  getRatingsByBusinessId: (businessId) => api.get(`/rating/business/${businessId}`)\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}