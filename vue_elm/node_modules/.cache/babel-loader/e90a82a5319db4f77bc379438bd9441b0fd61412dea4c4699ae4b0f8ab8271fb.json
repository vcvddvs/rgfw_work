{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"login-card\"\n};\nconst _hoisted_3 = {\n  class: \"logo-container\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: require('@/assets/elm_title.gif'),\n    class: \"logo-img\",\n    alt: \"饿了么\"\n  }, null, 8 /* PROPS */, _hoisted_4)]), _cache[4] || (_cache[4] = _createElementVNode(\"h2\", {\n    class: \"welcome-text\"\n  }, \"欢迎回来\", -1 /* HOISTED */)), _createVNode($setup[\"ElForm\"], {\n    onSubmit: _withModifiers($setup.login, [\"prevent\"]),\n    class: \"login-form\"\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"ElFormItem\"], null, {\n      default: _withCtx(() => [_createVNode($setup[\"ElInput\"], {\n        modelValue: $setup.userId,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.userId = $event),\n        placeholder: \"请输入账号\",\n        \"prefix-icon\": \"el-icon-user\",\n        class: \"custom-input\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"ElFormItem\"], null, {\n      default: _withCtx(() => [_createVNode($setup[\"ElInput\"], {\n        type: \"password\",\n        modelValue: $setup.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n        placeholder: \"请输入密码\",\n        \"prefix-icon\": \"el-icon-lock\",\n        class: \"custom-input\",\n        \"show-password\": \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_5, [_createVNode($setup[\"ElButton\"], {\n      type: \"primary\",\n      onClick: $setup.login,\n      class: \"login-button\",\n      loading: $setup.loading\n    }, {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 登录 \")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\"])]), _createElementVNode(\"div\", {\n      class: \"register-link\"\n    }, [_cache[3] || (_cache[3] = _createTextVNode(\" 还没有账号？ \")), _createElementVNode(\"span\", {\n      onClick: $setup.register,\n      class: \"register-text\"\n    }, \"立即注册\")])]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","src","require","alt","_hoisted_4","_createVNode","$setup","onSubmit","_withModifiers","login","default","_withCtx","modelValue","userId","_cache","$event","placeholder","_","type","password","_hoisted_5","onClick","loading","_createTextVNode","register"],"sources":["D:\\back_elm\\vue_elm\\src\\components\\loginComponent.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-card\">\n      <div class=\"logo-container\">\n        <img :src=\"require('@/assets/elm_title.gif')\" class=\"logo-img\" alt=\"饿了么\" />\n      </div>\n      \n      <h2 class=\"welcome-text\">欢迎回来</h2>\n      \n      <el-form @submit.prevent=\"login\" class=\"login-form\">\n        <el-form-item>\n          <el-input \n            v-model=\"userId\" \n            placeholder=\"请输入账号\" \n            prefix-icon=\"el-icon-user\"\n            class=\"custom-input\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-input \n            type=\"password\" \n            v-model=\"password\" \n            placeholder=\"请输入密码\" \n            prefix-icon=\"el-icon-lock\"\n            class=\"custom-input\"\n            show-password>\n          </el-input>\n        </el-form-item>\n        \n        <div class=\"button-container\">\n          <el-button \n            type=\"primary\" \n            @click=\"login\" \n            class=\"login-button\"\n            :loading=\"loading\">\n            登录\n          </el-button>\n        </div>\n        \n        <div class=\"register-link\">\n          还没有账号？ \n          <span @click=\"register\" class=\"register-text\">立即注册</span>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElForm, ElFormItem, ElInput, ElButton, ElMessage } from 'element-plus';\nimport { userApi } from '@/utils/api';\nimport { setToken } from '@/utils/auth';\nimport axios from 'axios';\n\nconst router = useRouter();\nconst userId = ref('');\nconst password = ref('');\nconst loading = ref(false);\n\nconst login = async () => {\n  try {\n    if (!userId.value || !password.value) {\n      ElMessage.error('请输入账号和密码');\n      return;\n    }\n\n    loading.value = true;\n    \n    // 打印请求数据\n    console.log('发送登录请求:', {\n      userId: userId.value,\n      password: password.value\n    });\n\n    const response = await userApi.login({\n      userId: userId.value,\n      password: password.value\n    });\n\n    console.log('登录响应:', response);\n\n    if (response && response.code === 1 && response.data) {\n      // 检查响应格式，适应后端返回的不同格式\n      let token;\n      if (typeof response.data === 'string') {\n        token = response.data;\n      } else if (response.data.token) {\n        token = response.data.token;\n      }\n      \n      // 验证token\n      if (typeof token === 'string' && token.length > 0) {\n        console.log('获取到token:', token);\n        \n        // 保存认证信息\n        setToken(token);\n        localStorage.setItem('userId', response.data.userId || userId.value);\n        \n        // 验证token是否正确保存\n        const savedToken = localStorage.getItem('token');\n        console.log('保存的token:', savedToken);\n        console.log('Authorization header:', axios.defaults.headers.common['Authorization']);\n        \n        ElMessage.success('登录成功');\n        router.push('/Index-Component');\n        return;\n      } else {\n        console.error('Token无效:', token);\n        ElMessage.error('登录失败：无效的认证信息');\n      }\n    } else {\n      // 如果没有在上面返回，说明登录失败\n      console.error('登录失败，响应数据:', response);\n      ElMessage.error(response?.msg || '登录失败，请检查用户名和密码');\n    }\n  } catch (error) {\n    // 详细的错误日志\n    console.error('登录异常:', error);\n\n    if (error.response) {\n      switch (error.response.status) {\n        case 400:\n          ElMessage.error('请求参数错误');\n          break;\n        case 401:\n          ElMessage.error('用户名或密码错误');\n          break;\n        case 403:\n          ElMessage.error('没有访问权限');\n          break;\n        case 500:\n          ElMessage.error('服务器内部错误');\n          break;\n        default:\n          ElMessage.error(`登录失败 (${error.response.status})`);\n      }\n    } else if (error.request) {\n      ElMessage.error('无法连接到服务器，请检查网络');\n    } else {\n      ElMessage.error('登录请求失败：' + error.message);\n    }\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst register = () => {\n  router.push('/Register-component');\n};\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  padding: 20px;\n}\n\n.login-card {\n  width: 100%;\n  max-width: 400px;\n  background-color: #ffffff;\n  border-radius: 12px;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.login-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);\n}\n\n.logo-container {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.logo-img {\n  height: 80px;\n  max-width: 100%;\n  object-fit: contain;\n}\n\n.welcome-text {\n  text-align: center;\n  color: #333;\n  font-size: 24px;\n  margin-bottom: 30px;\n  font-weight: 500;\n}\n\n.login-form {\n  width: 100%;\n}\n\n.custom-input :deep(.el-input__inner) {\n  height: 50px;\n  border-radius: 8px;\n  border: 1px solid #dcdfe6;\n  transition: all 0.3s;\n  padding-left: 15px;\n}\n\n.custom-input :deep(.el-input__inner:focus) {\n  border-color: #409EFF;\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.2);\n}\n\n.button-container {\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\n\n.login-button {\n  width: 100%;\n  height: 50px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  background: linear-gradient(90deg, #0096ff 0%, #0081ff 100%);\n  border: none;\n  transition: all 0.3s;\n}\n\n.login-button:hover {\n  opacity: 0.9;\n  transform: translateY(-2px);\n  box-shadow: 0 5px 15px rgba(0, 129, 255, 0.3);\n}\n\n.register-link {\n  text-align: center;\n  margin-top: 20px;\n  color: #606266;\n  font-size: 14px;\n}\n\n.register-text {\n  color: #0081ff;\n  cursor: pointer;\n  font-weight: 500;\n  transition: color 0.3s;\n}\n\n.register-text:hover {\n  color: #409EFF;\n  text-decoration: underline;\n}\n\n@media (max-width: 480px) {\n  .login-card {\n    padding: 20px;\n  }\n  \n  .welcome-text {\n    font-size: 20px;\n    margin-bottom: 20px;\n  }\n  \n  .custom-input :deep(.el-input__inner) {\n    height: 45px;\n  }\n  \n  .login-button {\n    height: 45px;\n  }\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAgB;mBAHjC;;EA8BaA,KAAK,EAAC;AAAkB;;uBA7BnCC,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CJC,mBAAA,CA2CM,OA3CNC,UA2CM,GA1CJD,mBAAA,CAEM,OAFNE,UAEM,GADJF,mBAAA,CAA2E;IAArEG,GAAG,EAAEC,OAAO;IAA4BP,KAAK,EAAC,UAAU;IAACQ,GAAG,EAAC;0BAJ3EC,UAAA,E,6BAOMN,mBAAA,CAAkC;IAA9BH,KAAK,EAAC;EAAc,GAAC,MAAI,sBAE7BU,YAAA,CAmCUC,MAAA;IAnCAC,QAAM,EATtBC,cAAA,CASgCF,MAAA,CAAAG,KAAK;IAAEd,KAAK,EAAC;;IAT7Ce,OAAA,EAAAC,QAAA,CAUQ,MAOe,CAPfN,YAAA,CAOeC,MAAA;MAjBvBI,OAAA,EAAAC,QAAA,CAWU,MAKW,CALXN,YAAA,CAKWC,MAAA;QAhBrBM,UAAA,EAYqBN,MAAA,CAAAO,MAAM;QAZ3B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYqBT,MAAA,CAAAO,MAAM,GAAAE,MAAA;QACfC,WAAW,EAAC,OAAO;QACnB,aAAW,EAAC,cAAc;QAC1BrB,KAAK,EAAC;;MAflBsB,CAAA;QAmBQZ,YAAA,CASeC,MAAA;MA5BvBI,OAAA,EAAAC,QAAA,CAoBU,MAOW,CAPXN,YAAA,CAOWC,MAAA;QANTY,IAAI,EAAC,UAAU;QArB3BN,UAAA,EAsBqBN,MAAA,CAAAa,QAAQ;QAtB7B,uBAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAsBqBT,MAAA,CAAAa,QAAQ,GAAAJ,MAAA;QACjBC,WAAW,EAAC,OAAO;QACnB,aAAW,EAAC,cAAc;QAC1BrB,KAAK,EAAC,cAAc;QACpB,eAAa,EAAb;;MA1BZsB,CAAA;QA8BQnB,mBAAA,CAQM,OARNsB,UAQM,GAPJf,YAAA,CAMYC,MAAA;MALVY,IAAI,EAAC,SAAS;MACbG,OAAK,EAAEf,MAAA,CAAAG,KAAK;MACbd,KAAK,EAAC,cAAc;MACnB2B,OAAO,EAAEhB,MAAA,CAAAgB;;MAnCtBZ,OAAA,EAAAC,QAAA,CAmC+B,MAErBG,MAAA,QAAAA,MAAA,OArCVS,gBAAA,CAmC+B,MAErB,E;MArCVN,CAAA;sCAwCQnB,mBAAA,CAGM;MAHDH,KAAK,EAAC;IAAe,I,0BAxClC4B,gBAAA,CAwCmC,UAEzB,IAAAzB,mBAAA,CAAyD;MAAlDuB,OAAK,EAAEf,MAAA,CAAAkB,QAAQ;MAAE7B,KAAK,EAAC;OAAgB,MAAI,E;IA1C5DsB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}