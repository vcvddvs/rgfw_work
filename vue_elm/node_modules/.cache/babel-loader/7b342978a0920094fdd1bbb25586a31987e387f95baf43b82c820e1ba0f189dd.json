{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport router from \"@/router\";\nimport { deliveryAddressApi } from '@/utils/api';\nexport default {\n  __name: 'addressComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const userId = ref(route.params.userId);\n    const businessId = ref(route.params.businessId);\n    const businessName = ref(route.params.businessName);\n    const deliveryAddresses = ref([]);\n    const fetchDeliveryAddresses = async () => {\n      if (!userId.value) {\n        console.error('用户ID未提供');\n        return;\n      }\n      try {\n        console.log('正在获取用户地址，userId:', userId.value);\n        const response = await deliveryAddressApi.getDeliveryAddressesByUserId(userId.value);\n        console.log('获取地址响应:', response);\n\n        // 检查响应格式，适应不同的后端返回结构\n        if (response && response.data) {\n          // 如果响应是标准的Result格式\n          deliveryAddresses.value = response.data;\n        } else if (Array.isArray(response)) {\n          // 如果响应直接是数组\n          deliveryAddresses.value = response;\n        } else {\n          console.error('无法解析地址响应:', response);\n          deliveryAddresses.value = [];\n        }\n      } catch (error) {\n        console.error('获取地址失败:', error);\n        deliveryAddresses.value = []; // 确保在错误时设置为空数组\n      }\n    };\n    onMounted(fetchDeliveryAddresses);\n    const selectAddress = address => {\n      const isConfirmed = window.confirm('确定选择这个地址吗？');\n      if (isConfirmed) {\n        chooseAddress(address);\n      } else {\n        console.log('选择地址已取消');\n      }\n    };\n    const chooseAddress = address => {\n      localStorage.setItem('selectedAddress', JSON.stringify(address));\n\n      // 保存订单信息到 localStorage\n      const orderInfo = JSON.parse(localStorage.getItem('orderInfo') || '{}');\n      orderInfo.selectedAddress = address;\n      orderInfo.selectedDaId = address.daId; // 保存 daId\n      localStorage.setItem('orderInfo', JSON.stringify(orderInfo));\n      router.push({\n        name: 'Order',\n        params: {\n          businessId: businessId.value,\n          businessName: businessName.value\n        }\n      });\n    };\n    const confirmDeleteAddress = (address, index) => {\n      const isConfirmed = window.confirm('确定删除这个地址吗？');\n      if (isConfirmed) {\n        deleteAddress(address, index);\n      } else {\n        console.log('删除地址已取消');\n      }\n    };\n    const deleteAddress = async (address, index) => {\n      try {\n        const response = await deliveryAddressApi.deleteDeliveryAddress(address.daId);\n        console.log('删除地址响应:', response);\n\n        // 检查响应格式，适应不同的后端返回结构\n        let success = false;\n        if (response && response.code === 1) {\n          success = true;\n        } else if (response === true) {\n          success = true;\n        }\n        if (success) {\n          deliveryAddresses.value.splice(index, 1);\n          alert('地址删除成功');\n        } else {\n          alert('地址删除失败');\n        }\n      } catch (error) {\n        console.error('删除地址失败:', error);\n        alert('地址删除失败');\n      }\n    };\n    const editAddress = () => {\n      router.push({\n        name: 'Updata',\n        params: {\n          userId: userId.value\n        }\n      });\n    };\n    const __returned__ = {\n      route,\n      userId,\n      businessId,\n      businessName,\n      deliveryAddresses,\n      fetchDeliveryAddresses,\n      selectAddress,\n      chooseAddress,\n      confirmDeleteAddress,\n      deleteAddress,\n      editAddress,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get router() {\n        return router;\n      },\n      get deliveryAddressApi() {\n        return deliveryAddressApi;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","router","deliveryAddressApi","route","userId","params","businessId","businessName","deliveryAddresses","fetchDeliveryAddresses","value","console","error","log","response","getDeliveryAddressesByUserId","data","Array","isArray","selectAddress","address","isConfirmed","window","confirm","chooseAddress","localStorage","setItem","JSON","stringify","orderInfo","parse","getItem","selectedAddress","selectedDaId","daId","push","name","confirmDeleteAddress","index","deleteAddress","deleteDeliveryAddress","success","code","splice","alert","editAddress"],"sources":["D:/back_elm/vue_elm/src/components/addressComponent.vue"],"sourcesContent":["\n<template>\n  <div class=\"wrapper\">\n    <div class=\"header\">\n      <h class=\"title\">选择收货地址</h>\n      <div class=\"img\">\n        <img :src=\"require('@/assets/img_5.png')\" alt=\"\">\n      </div>\n    </div>\n    <div>\n      <img :src=\"require('@/assets/img_6.png')\" style=\"width: 100%; margin-top: 10px\" alt=\"\">\n    </div>\n    <div v-if=\"deliveryAddresses.length === 0\" class=\"text_title\">\n      <h1>加载中...</h1>\n    </div>\n    <div v-for=\"(address, index) in deliveryAddresses\" :key=\"index\" class=\"address-item\">\n      <div class=\"body\">\n        <div class=\"tb\" @click=\"selectAddress(address)\">\n          <div class=\"text\">\n            <div class=\"text_title\">\n              <h1 style=\"font-size: 10px; color: #17BAF9; border: #b3d4fc 1px solid; background-color: #b3d4fc; border-radius: 20%;\">学校</h1>\n              <h2 style=\"font-size: 16px; margin-left: 10px; font-weight: bolder\">{{ address.address }}</h2>\n            </div>\n            <div class=\"text_body\">\n              <h1>姓名: {{ address.contactName }}</h1>\n              <h2>电话: {{ address.contactTel }}</h2>\n            </div>\n          </div>\n        </div>\n        <div class=\"xg\" style=\"margin-right: 10px\">\n          <img :src=\"require('@/assets/img_8.png')\" style=\"width: 30px\" @click=\"confirmDeleteAddress(address, index)\">\n        </div>\n      </div>\n    </div>\n    <div class=\"footer\">\n      <img :src=\"require('@/assets/img_9.png')\"\n           style=\"width: 100%;\n           margin-top: 10px\" @click=\"editAddress()\">\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport router from \"@/router\";\nimport { deliveryAddressApi } from '@/utils/api';\n\nconst route = useRoute();\nconst userId = ref(route.params.userId);\nconst businessId = ref(route.params.businessId);\nconst businessName = ref(route.params.businessName);\nconst deliveryAddresses = ref([]);\n\nconst fetchDeliveryAddresses = async () => {\n  if (!userId.value) {\n    console.error('用户ID未提供');\n    return;\n  }\n  try {\n    console.log('正在获取用户地址，userId:', userId.value);\n    const response = await deliveryAddressApi.getDeliveryAddressesByUserId(userId.value);\n    console.log('获取地址响应:', response);\n    \n    // 检查响应格式，适应不同的后端返回结构\n    if (response && response.data) {\n      // 如果响应是标准的Result格式\n      deliveryAddresses.value = response.data;\n    } else if (Array.isArray(response)) {\n      // 如果响应直接是数组\n      deliveryAddresses.value = response;\n    } else {\n      console.error('无法解析地址响应:', response);\n      deliveryAddresses.value = [];\n    }\n  } catch (error) {\n    console.error('获取地址失败:', error);\n    deliveryAddresses.value = []; // 确保在错误时设置为空数组\n  }\n};\n\nonMounted(fetchDeliveryAddresses);\n\nconst selectAddress = (address) => {\n  const isConfirmed = window.confirm('确定选择这个地址吗？');\n  if (isConfirmed) {\n    chooseAddress(address);\n  } else {\n    console.log('选择地址已取消');\n  }\n};\n\nconst chooseAddress = (address) => {\n  localStorage.setItem('selectedAddress', JSON.stringify(address));\n\n  // 保存订单信息到 localStorage\n  const orderInfo = JSON.parse(localStorage.getItem('orderInfo') || '{}');\n  orderInfo.selectedAddress = address;\n  orderInfo.selectedDaId = address.daId; // 保存 daId\n  localStorage.setItem('orderInfo', JSON.stringify(orderInfo));\n\n  router.push({\n    name: 'Order',\n    params: { businessId: businessId.value, businessName: businessName.value }\n  });\n};\n\nconst confirmDeleteAddress = (address, index) => {\n  const isConfirmed = window.confirm('确定删除这个地址吗？');\n  if (isConfirmed) {\n    deleteAddress(address, index);\n  } else {\n    console.log('删除地址已取消');\n  }\n};\n\nconst deleteAddress = async (address, index) => {\n  try {\n    const response = await deliveryAddressApi.deleteDeliveryAddress(address.daId);\n    console.log('删除地址响应:', response);\n    \n    // 检查响应格式，适应不同的后端返回结构\n    let success = false;\n    if (response && response.code === 1) {\n      success = true;\n    } else if (response === true) {\n      success = true;\n    }\n    \n    if (success) {\n      deliveryAddresses.value.splice(index, 1);\n      alert('地址删除成功');\n    } else {\n      alert('地址删除失败');\n    }\n  } catch (error) {\n    console.error('删除地址失败:', error);\n    alert('地址删除失败');\n  }\n};\n\nconst editAddress = () => {\n  router.push({\n    name: 'Updata',\n    params: { userId: userId.value }\n  });\n};\n</script>\n\n<style scoped>\n.wrapper {\n  display: flex;\n  flex-direction: column;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.header h {\n  flex-grow: 1;\n  text-align: center;\n  font-weight: bolder;\n}\n\n.img img {\n  width: 70%;\n}\n\n.body {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  border-bottom: 1px solid #999999; /* 添加底部线条 */\n  padding-bottom: 10px; /* 根据需要调整间距 */\n}\n\n.tb {\n  display: flex;\n}\n\n.text {\n  display: flex;\n  flex-direction: column;\n}\n\n.text_title {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.text_title h1 {\n  font-weight: normal;\n  margin-left: 10px;\n}\n\n.text_body {\n  display: flex;\n  align-items: center;\n  color: #999999;\n}\n\n.text_body h1,\n.text_body h2 {\n  font-weight: normal;\n  font-size: 10px;\n  margin-left: 10px;\n}\n\n.xg {\n  margin-right: 10px;\n}\n\n.xg img {\n  width: 30px;\n}\n\n.footer img {\n  width: 100%;\n}\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}