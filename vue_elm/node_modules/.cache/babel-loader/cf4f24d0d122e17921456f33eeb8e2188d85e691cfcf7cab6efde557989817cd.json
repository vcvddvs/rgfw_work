{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nimport router from \"@/router\";\nexport default {\n  __name: 'addressComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const userId = ref(route.params.userId); // 从路由参数中获取 userId\n    const deliveryAddresses = ref([]);\n    const fetchDeliveryAddresses = async () => {\n      if (!userId.value) {\n        console.error('用户ID未提供');\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:8080/elm_servlet_war_exploded/api/deliveryaddresses?userId=${userId.value}`);\n        deliveryAddresses.value = response.data;\n      } catch (error) {\n        console.error('获取地址失败:', error);\n      }\n    };\n    onMounted(fetchDeliveryAddresses);\n    const selectAddress = address => {\n      if (window.confirm('确定选择这个地址吗？')) {\n        chooseAddress(address);\n      } else {\n        console.log('选择地址已取消');\n      }\n    };\n    const chooseAddress = address => {\n      // 将选中的地址信息存储到 localStorage 或其他方式，以便在 OrderComponent 中使用\n      localStorage.setItem('selectedAddress', JSON.stringify(address));\n      // 跳转到 OrderComponent 页面\n      router.push({\n        name: 'Order',\n        params: {\n          businessId: address.businessId,\n          businessName: address.businessName\n        }\n      });\n    };\n    const __returned__ = {\n      route,\n      userId,\n      deliveryAddresses,\n      fetchDeliveryAddresses,\n      selectAddress,\n      chooseAddress,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get axios() {\n        return axios;\n      },\n      get router() {\n        return router;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","axios","router","route","userId","params","deliveryAddresses","fetchDeliveryAddresses","value","console","error","response","get","data","selectAddress","address","window","confirm","chooseAddress","log","localStorage","setItem","JSON","stringify","push","name","businessId","businessName"],"sources":["C:/Users/asus/Desktop/vue_elm/vue_elm/src/components/addressComponent.vue"],"sourcesContent":["\r\n\r\n<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"header\">\r\n      <h class=\"title\">选择收货地址</h>\r\n      <div class=\"img\">\r\n        <img :src=\"require('@/assets/img_5.png')\" alt=\"\">\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <img :src=\"require('@/assets/img_6.png')\" style=\"width: 100%; margin-top: 10px\" alt=\"\">\r\n    </div>\r\n    <div v-if=\"deliveryAddresses.length === 0\" class=\"text_title\">\r\n      <h1>加载中...</h1>\r\n    </div>\r\n    <div v-for=\"(address, index) in deliveryAddresses\" :key=\"index\" class=\"address-item\" @click=\"selectAddress(address)\">\r\n      <div class=\"body\">\r\n        <div class=\"tb\">\r\n          <div class=\"text\">\r\n            <div class=\"text_title\">\r\n              <h1 style=\"font-size: 10px; color: #17BAF9; border: #b3d4fc 1px solid; background-color: #b3d4fc; border-radius: 20%;\">学校</h1>\r\n              <h2 style=\"font-size: 16px; margin-left: 10px; font-weight: bolder\">{{ address.address }}</h2>\r\n            </div>\r\n            <div class=\"text_body\">\r\n              <h1>姓名: {{ address.contactName }}</h1>\r\n              <h2>电话: {{ address.contactTel }}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"xg\" style=\"margin-right: 10px\">\r\n          <img :src=\"require('@/assets/img_8.png')\" style=\"width: 30px\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"footer\">\r\n      <img :src=\"require('@/assets/img_9.png')\" style=\"width: 100%;margin-top: 10px\" alt=\"\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport axios from 'axios';\r\nimport router from \"@/router\";\r\n\r\nconst route = useRoute();\r\nconst userId = ref(route.params.userId); // 从路由参数中获取 userId\r\nconst deliveryAddresses = ref([]);\r\n\r\nconst fetchDeliveryAddresses = async () => {\r\n  if (!userId.value) {\r\n    console.error('用户ID未提供');\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.get(`http://localhost:8080/elm_servlet_war_exploded/api/deliveryaddresses?userId=${userId.value}`);\r\n    deliveryAddresses.value = response.data;\r\n  } catch (error) {\r\n    console.error('获取地址失败:', error);\r\n  }\r\n};\r\n\r\nonMounted(fetchDeliveryAddresses);\r\n\r\nconst selectAddress = (address) => {\r\n  if (window.confirm('确定选择这个地址吗？')) {\r\n    chooseAddress(address);\r\n  } else {\r\n    console.log('选择地址已取消');\r\n  }\r\n};\r\n\r\nconst chooseAddress = (address) => {\r\n  // 将选中的地址信息存储到 localStorage 或其他方式，以便在 OrderComponent 中使用\r\n  localStorage.setItem('selectedAddress', JSON.stringify(address));\r\n  // 跳转到 OrderComponent 页面\r\n  router.push({\r\n    name: 'Order',\r\n    params: { businessId: address.businessId, businessName: address.businessName }\r\n  });\r\n};\r\n</script>\r\n<style scoped>\r\n.wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.header h {\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-weight: bolder;\r\n}\r\n\r\n.img img {\r\n  width: 70%;\r\n}\r\n\r\n.body {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n  border-bottom: 1px solid #999999; /* 添加底部线条 */\r\n  padding-bottom: 10px; /* 根据需要调整间距 */\r\n}\r\n\r\n.tb {\r\n  display: flex;\r\n}\r\n\r\n.text {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.text_title {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.text_title h1 {\r\n  font-weight: normal;\r\n  margin-left: 10px;\r\n}\r\n\r\n.text_body {\r\n  display: flex;\r\n  align-items: center;\r\n  color: #999999;\r\n}\r\n\r\n.text_body h1,\r\n.text_body h2 {\r\n  font-weight: normal;\r\n  font-size: 10px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.xg {\r\n  margin-right: 10px;\r\n}\r\n\r\n.xg img {\r\n  width: 30px;\r\n}\r\n\r\n.footer img {\r\n  width: 100%;\r\n}\r\n</style>\r\n\r\n"],"mappings":";AA0CA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;;;;;;;IAE7B,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,MAAMI,MAAM,GAAGN,GAAG,CAACK,KAAK,CAACE,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC;IACzC,MAAME,iBAAiB,GAAGR,GAAG,CAAC,EAAE,CAAC;IAEjC,MAAMS,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI,CAACH,MAAM,CAACI,KAAK,EAAE;QACjBC,OAAO,CAACC,KAAK,CAAC,SAAS,CAAC;QACxB;MACF;MACA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,+EAA+ER,MAAM,CAACI,KAAK,EAAE,CAAC;QAC/HF,iBAAiB,CAACE,KAAK,GAAGG,QAAQ,CAACE,IAAI;MACzC,CAAC,CAAC,OAAOH,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF,CAAC;IAEDX,SAAS,CAACQ,sBAAsB,CAAC;IAEjC,MAAMO,aAAa,GAAIC,OAAO,IAAK;MACjC,IAAIC,MAAM,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;QAChCC,aAAa,CAACH,OAAO,CAAC;MACxB,CAAC,MAAM;QACLN,OAAO,CAACU,GAAG,CAAC,SAAS,CAAC;MACxB;IACF,CAAC;IAED,MAAMD,aAAa,GAAIH,OAAO,IAAK;MACjC;MACAK,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO,CAAC,CAAC;MAChE;MACAb,MAAM,CAACsB,IAAI,CAAC;QACVC,IAAI,EAAE,OAAO;QACbpB,MAAM,EAAE;UAAEqB,UAAU,EAAEX,OAAO,CAACW,UAAU;UAAEC,YAAY,EAAEZ,OAAO,CAACY;QAAa;MAC/E,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}